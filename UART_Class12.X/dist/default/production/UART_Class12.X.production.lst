

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jan 11 00:23:23 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _TRISCbits	set	3988
    52   000000                     _ADCON1	set	4033
    53   000000                     _OSCCON	set	4051
    54   000000                     _INTCON3bits	set	4080
    55   000000                     _INTCON2bits	set	4081
    56   000000                     _INTCONbits	set	4082
    57   000000                     _RCONbits	set	4048
    58   000000                     _RCSTA	set	4011
    59   000000                     _SPBRG	set	4015
    60   000000                     _TXSTA	set	4012
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   000066                     __pcinit:
    66                           	callstack 0
    67   000066                     start_initialization:
    68                           	callstack 0
    69   000066                     __initialization:
    70                           	callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (2 bytes)
    73   000066  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74   000068  6A01               	clrf	__pbssCOMRAM& (0+255),c
    75   00006A                     end_of_initialization:
    76                           	callstack 0
    77   00006A                     __end_of__initialization:
    78                           	callstack 0
    79   00006A  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80   00006C  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81   00006E  0100               	movlb	0
    82   000070  EF3A  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	bssCOMRAM
    85   000001                     __pbssCOMRAM:
    86                           	callstack 0
    87   000001                     _Counter_Button2:
    88                           	callstack 0
    89   000001                     	ds	1
    90   000002                     _Counter_Button1:
    91                           	callstack 0
    92   000002                     	ds	1
    93                           
    94                           	psect	cstackCOMRAM
    95   000000                     __pcstackCOMRAM:
    96                           	callstack 0
    97   000000                     
    98                           ; 1 bytes @ 0x0
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 22 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called: 2
   124 ;; This function calls:
   125 ;;		_Configurations
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132   000074                     __ptext0:
   133                           	callstack 0
   134   000074                     _main:
   135                           	callstack 29
   136   000074                     
   137                           ;main.c: 25: Configurations();
   138   000074  EC09  F000         	call	_Configurations	;wreg free
   139   000078                     l31:
   140   000078  EF3C  F000         	goto	l31
   141   00007C  EF07  F000         	goto	start
   142   000080                     __end_of_main:
   143                           	callstack 0
   144                           
   145 ;; *************** function _Configurations *****************
   146 ;; Defined at:
   147 ;;		line 36 in file "main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   161 ;;      Params:         0       0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels used: 1
   167 ;; Hardware stack levels required when called: 1
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176   000012                     __ptext1:
   177                           	callstack 0
   178   000012                     _Configurations:
   179                           	callstack 29
   180   000012                     
   181                           ;main.c: 38: OSCCON = 0x72;
   182   000012  0E72               	movlw	114
   183   000014  6ED3               	movwf	211,c	;volatile
   184                           
   185                           ;main.c: 39: ADCON1 = 0x0F;
   186   000016  0E0F               	movlw	15
   187   000018  6EC1               	movwf	193,c	;volatile
   188   00001A                     
   189                           ;main.c: 41: TRISCbits.RC6 = 0;
   190   00001A  9C94               	bcf	148,6,c	;volatile
   191   00001C                     
   192                           ;main.c: 42: TRISCbits.RC7 = 1;
   193   00001C  8E94               	bsf	148,7,c	;volatile
   194                           
   195                           ;main.c: 45: SPBRG = 0X0C;
   196   00001E  0E0C               	movlw	12
   197   000020  6EAF               	movwf	175,c	;volatile
   198                           
   199                           ;main.c: 46: RCSTA = 0x90;
   200   000022  0E90               	movlw	144
   201   000024  6EAB               	movwf	171,c	;volatile
   202                           
   203                           ;main.c: 47: TXSTA = 0x20;
   204   000026  0E20               	movlw	32
   205   000028  6EAC               	movwf	172,c	;volatile
   206   00002A                     
   207                           ;main.c: 50: INTCONbits.GIE = 1;
   208   00002A  8EF2               	bsf	242,7,c	;volatile
   209   00002C                     
   210                           ;main.c: 51: RCONbits.IPEN = 0;
   211   00002C  9ED0               	bcf	208,7,c	;volatile
   212   00002E                     
   213                           ;main.c: 53: INTCONbits.INT0E = 1;
   214   00002E  88F2               	bsf	242,4,c	;volatile
   215   000030                     
   216                           ;main.c: 54: INTCONbits.INT0F = 0;
   217   000030  92F2               	bcf	242,1,c	;volatile
   218   000032                     
   219                           ;main.c: 55: INTCON2bits.INTEDG0 = 0;
   220   000032  9CF1               	bcf	241,6,c	;volatile
   221   000034                     
   222                           ;main.c: 57: INTCON3bits.INT2E = 1;
   223   000034  88F0               	bsf	240,4,c	;volatile
   224   000036                     
   225                           ;main.c: 58: INTCON3bits.INT2F = 0;
   226   000036  92F0               	bcf	240,1,c	;volatile
   227   000038                     
   228                           ;main.c: 59: INTCON2bits.INTEDG2 = 1;
   229   000038  88F1               	bsf	241,4,c	;volatile
   230   00003A  0012               	return		;funcret
   231   00003C                     __end_of_Configurations:
   232                           	callstack 0
   233                           
   234 ;; *************** function _INT_UART_TX *****************
   235 ;; Defined at:
   236 ;;		line 63 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		status,2, status,0
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         0       0       0       0       0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels used: 1
   256 ;; This function calls:
   257 ;;		Nothing
   258 ;; This function is called by:
   259 ;;		Interrupt level 2
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	intcode
   264   000008                     __pintcode:
   265                           	callstack 0
   266   000008                     _INT_UART_TX:
   267                           	callstack 29
   268                           
   269                           ;incstack = 0
   270   000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   271   00000A  ED1E  F000         	call	int_func,f	;refresh shadow registers
   272                           
   273                           	psect	intcode_body
   274   00003C                     __pintcode_body:
   275                           	callstack 29
   276   00003C                     int_func:
   277                           	callstack 29
   278   00003C  0006               	pop		; remove dummy address from shadow register refresh
   279   00003E                     
   280                           ;main.c: 65: if (INTCONbits.INT0IF) {
   281   00003E  A2F2               	btfss	242,1,c	;volatile
   282   000040  EF24  F000         	goto	i2u1_41
   283   000044  EF26  F000         	goto	i2u1_40
   284   000048                     i2u1_41:
   285   000048  EF28  F000         	goto	i2l822
   286   00004C                     i2u1_40:
   287   00004C                     
   288                           ;main.c: 67: INTCONbits.INT0IF = 0;
   289   00004C  92F2               	bcf	242,1,c	;volatile
   290   00004E                     
   291                           ;main.c: 68: Counter_Button1++;
   292   00004E  2A02               	incf	_Counter_Button1^0,f,c
   293   000050                     i2l822:
   294                           
   295                           ;main.c: 71: };main.c: 72: if (INTCON3bits.INT2F) {
   296   000050  A2F0               	btfss	240,1,c	;volatile
   297   000052  EF2D  F000         	goto	i2u2_41
   298   000056  EF2F  F000         	goto	i2u2_40
   299   00005A                     i2u2_41:
   300   00005A  EF31  F000         	goto	i2l44
   301   00005E                     i2u2_40:
   302   00005E                     
   303                           ;main.c: 74: INTCON3bits.INT2F = 0;
   304   00005E  92F0               	bcf	240,1,c	;volatile
   305   000060                     
   306                           ;main.c: 75: Counter_Button2++;
   307   000060  2A01               	incf	_Counter_Button2^0,f,c
   308   000062                     i2l44:
   309   000062  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310   000064  0011               	retfie		f
   311   000066                     __end_of_INT_UART_TX:
   312                           	callstack 0
   313   000000                     
   314                           	psect	rparam
   315   000000                     
   316                           	psect	temp
   317   000003                     btemp:
   318                           	callstack 0
   319   000003                     	ds	1
   320   000000                     int$flags	set	btemp
   321   000000                     wtemp8	set	btemp+1
   322   000000                     ttemp5	set	btemp+1
   323   000000                     ttemp6	set	btemp+4
   324   000000                     ttemp7	set	btemp+8
   325                           
   326                           	psect	config
   327                           
   328                           ;Config register CONFIG1L @ 0x300000
   329                           ;	PLL Prescaler Selection bits
   330                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   331                           ;	System Clock Postscaler Selection bits
   332                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   333                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   334                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   335   300000                     	org	3145728
   336   300000  00                 	db	0
   337                           
   338                           ;Config register CONFIG1H @ 0x300001
   339                           ;	Oscillator Selection bits
   340                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   341                           ;	Fail-Safe Clock Monitor Enable bit
   342                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   343                           ;	Internal/External Oscillator Switchover bit
   344                           ;	IESO = OFF, Oscillator Switchover mode disabled
   345   300001                     	org	3145729
   346   300001  0B                 	db	11
   347                           
   348                           ;Config register CONFIG2L @ 0x300002
   349                           ;	Power-up Timer Enable bit
   350                           ;	PWRT = OFF, PWRT disabled
   351                           ;	Brown-out Reset Enable bits
   352                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   353                           ;	Brown-out Reset Voltage bits
   354                           ;	BORV = 3, Minimum setting 2.05V
   355                           ;	USB Voltage Regulator Enable bit
   356                           ;	VREGEN = OFF, USB voltage regulator disabled
   357   300002                     	org	3145730
   358   300002  19                 	db	25
   359                           
   360                           ;Config register CONFIG2H @ 0x300003
   361                           ;	Watchdog Timer Enable bit
   362                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   363                           ;	Watchdog Timer Postscale Select bits
   364                           ;	WDTPS = 32768, 1:32768
   365   300003                     	org	3145731
   366   300003  1E                 	db	30
   367                           
   368                           ; Padding undefined space
   369   300004                     	org	3145732
   370   300004  FF                 	db	255
   371                           
   372                           ;Config register CONFIG3H @ 0x300005
   373                           ;	CCP2 MUX bit
   374                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   375                           ;	PORTB A/D Enable bit
   376                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   377                           ;	Low-Power Timer 1 Oscillator Enable bit
   378                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   379                           ;	MCLR Pin Enable bit
   380                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   381   300005                     	org	3145733
   382   300005  83                 	db	131
   383                           
   384                           ;Config register CONFIG4L @ 0x300006
   385                           ;	Stack Full/Underflow Reset Enable bit
   386                           ;	STVREN = ON, Stack full/underflow will cause Reset
   387                           ;	Single-Supply ICSP Enable bit
   388                           ;	LVP = OFF, Single-Supply ICSP disabled
   389                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   390                           ;	ICPRT = OFF, ICPORT disabled
   391                           ;	Extended Instruction Set Enable bit
   392                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   393                           ;	Background Debugger Enable bit
   394                           ;	DEBUG = 0x1, unprogrammed default
   395   300006                     	org	3145734
   396   300006  81                 	db	129
   397                           
   398                           ; Padding undefined space
   399   300007                     	org	3145735
   400   300007  FF                 	db	255
   401                           
   402                           ;Config register CONFIG5L @ 0x300008
   403                           ;	Code Protection bit
   404                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   405                           ;	Code Protection bit
   406                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   407                           ;	Code Protection bit
   408                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   409                           ;	Code Protection bit
   410                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   411   300008                     	org	3145736
   412   300008  0F                 	db	15
   413                           
   414                           ;Config register CONFIG5H @ 0x300009
   415                           ;	Boot Block Code Protection bit
   416                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   417                           ;	Data EEPROM Code Protection bit
   418                           ;	CPD = OFF, Data EEPROM is not code-protected
   419   300009                     	org	3145737
   420   300009  C0                 	db	192
   421                           
   422                           ;Config register CONFIG6L @ 0x30000A
   423                           ;	Write Protection bit
   424                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   425                           ;	Write Protection bit
   426                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   427                           ;	Write Protection bit
   428                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   429                           ;	Write Protection bit
   430                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   431   30000A                     	org	3145738
   432   30000A  0F                 	db	15
   433                           
   434                           ;Config register CONFIG6H @ 0x30000B
   435                           ;	Configuration Register Write Protection bit
   436                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   437                           ;	Boot Block Write Protection bit
   438                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   439                           ;	Data EEPROM Write Protection bit
   440                           ;	WRTD = OFF, Data EEPROM is not write-protected
   441   30000B                     	org	3145739
   442   30000B  E0                 	db	224
   443                           
   444                           ;Config register CONFIG7L @ 0x30000C
   445                           ;	Table Read Protection bit
   446                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   447                           ;	Table Read Protection bit
   448                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   449                           ;	Table Read Protection bit
   450                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   451                           ;	Table Read Protection bit
   452                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   453   30000C                     	org	3145740
   454   30000C  0F                 	db	15
   455                           
   456                           ;Config register CONFIG7H @ 0x30000D
   457                           ;	Boot Block Table Read Protection bit
   458                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   459   30000D                     	org	3145741
   460   30000D  40                 	db	64
   461                           tosu	equ	0xFFF
   462                           tosh	equ	0xFFE
   463                           tosl	equ	0xFFD
   464                           stkptr	equ	0xFFC
   465                           pclatu	equ	0xFFB
   466                           pclath	equ	0xFFA
   467                           pcl	equ	0xFF9
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           prodh	equ	0xFF4
   473                           prodl	equ	0xFF3
   474                           indf0	equ	0xFEF
   475                           postinc0	equ	0xFEE
   476                           postdec0	equ	0xFED
   477                           preinc0	equ	0xFEC
   478                           plusw0	equ	0xFEB
   479                           fsr0h	equ	0xFEA
   480                           fsr0l	equ	0xFE9
   481                           wreg	equ	0xFE8
   482                           indf1	equ	0xFE7
   483                           postinc1	equ	0xFE6
   484                           postdec1	equ	0xFE5
   485                           preinc1	equ	0xFE4
   486                           plusw1	equ	0xFE3
   487                           fsr1h	equ	0xFE2
   488                           fsr1l	equ	0xFE1
   489                           bsr	equ	0xFE0
   490                           indf2	equ	0xFDF
   491                           postinc2	equ	0xFDE
   492                           postdec2	equ	0xFDD
   493                           preinc2	equ	0xFDC
   494                           plusw2	equ	0xFDB
   495                           fsr2h	equ	0xFDA
   496                           fsr2l	equ	0xFD9
   497                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_UART_TX in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_UART_TX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_UART_TX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_UART_TX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_UART_TX in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_UART_TX in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_UART_TX in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_UART_TX in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_UART_TX in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_UART_TX                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations

 _INT_UART_TX (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       2       1        2.1%
BITBIGSFRlll        34      0       0      27        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRllhll      16      0       0      26        0.0%
BITBIGSFRllhh       11      0       0      24        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRllhlh       2      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      28        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jan 11 00:23:23 2024

                     l31 0078                       l32 0078                       l37 003A  
                    l800 002C                      l810 0036                      l802 002E  
                    l812 0038                      l804 0030                      l806 0032  
                    l814 0074                      l808 0034                      l792 0012  
                    l794 001A                      l796 001C                      l798 002A  
                   i2l44 0062                     _main 0074                     btemp 0003  
                   start 000E             ___param_bank 0000                    ?_main 0000  
                  i2l820 004E                    i2l822 0050                    i2l824 005E  
                  i2l816 003E                    i2l826 0060                    i2l818 004C  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _TXSTA 0FAC  
           ?_INT_UART_TX 0000                    ttemp5 0004                    ttemp6 0007  
                  ttemp7 000B                    wtemp8 0004          __initialization 0066  
           __end_of_main 0080                   ??_main 0000            __activetblptr 0000  
                 _ADCON1 0FC1                   _OSCCON 0FD3                   i2u1_40 004C  
                 i2u1_41 0048                   i2u2_40 005E                   i2u2_41 005A  
                 isa$std 0001               __accesstop 0060  __end_of__initialization 006A  
          ___rparam_used 0001           __pcstackCOMRAM 0000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0066                  __ramtop 0800  
                __ptext0 0074                  __ptext1 0012           __pintcode_body 003C  
   end_of_initialization 006A                  int_func 003C                _TRISCbits 0F94  
    start_initialization 0066           _Configurations 0012              __pbssCOMRAM 0001  
 __end_of_Configurations 003C            ??_INT_UART_TX 0000                __pintcode 0008  
        ?_Configurations 0000      __end_of_INT_UART_TX 0066                 _RCONbits 0FD0  
            _INTCON2bits 0FF1              _INTCON3bits 0FF0                 __Hrparam 0000  
               __Lrparam 0000              _INT_UART_TX 0008                 isa$xinst 0000  
               int$flags 0003               _INTCONbits 0FF2                 intlevel2 0000  
       ??_Configurations 0000          _Counter_Button1 0002          _Counter_Button2 0001  
