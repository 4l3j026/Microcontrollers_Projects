

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jan 16 11:53:33 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 23/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	smallconst
    59   000800                     __psmallconst:
    60                           	callstack 0
    61   000800  00                 	db	0
    62   000801                     _dpowers:
    63                           	callstack 0
    64   000801  0001               	dw	1
    65   000803  000A               	dw	10
    66   000805  0064               	dw	100
    67   000807  03E8               	dw	1000
    68   000809  2710               	dw	10000
    69   00080B                     __end_of_dpowers:
    70                           	callstack 0
    71   000000                     _TRISCbits	set	3988
    72   000000                     _ADCON1	set	4033
    73   000000                     _OSCCON	set	4051
    74   000000                     _INTCON3bits	set	4080
    75   000000                     _INTCON2bits	set	4081
    76   000000                     _INTCONbits	set	4082
    77   000000                     _RCONbits	set	4048
    78   000000                     _PIR1bits	set	3998
    79   000000                     _RCSTA	set	4011
    80   000000                     _SPBRG	set	4015
    81   000000                     _TXREG	set	4013
    82   000000                     _TXSTA	set	4012
    83   00080B                     STR_1:
    84   00080B  54                 	db	84	;'T'
    85   00080C  68                 	db	104	;'h'
    86   00080D  65                 	db	101	;'e'
    87   00080E  20                 	db	32
    88   00080F  76                 	db	118	;'v'
    89   000810  61                 	db	97	;'a'
    90   000811  6C                 	db	108	;'l'
    91   000812  75                 	db	117	;'u'
    92   000813  65                 	db	101	;'e'
    93   000814  20                 	db	32
    94   000815  6F                 	db	111	;'o'
    95   000816  66                 	db	102	;'f'
    96   000817  20                 	db	32
    97   000818  63                 	db	99	;'c'
    98   000819  6F                 	db	111	;'o'
    99   00081A  75                 	db	117	;'u'
   100   00081B  6E                 	db	110	;'n'
   101   00081C  74                 	db	116	;'t'
   102   00081D  65                 	db	101	;'e'
   103   00081E  72                 	db	114	;'r'
   104   00081F  20                 	db	32
   105   000820  69                 	db	105	;'i'
   106   000821  73                 	db	115	;'s'
   107   000822  3A                 	db	58	;':'
   108   000823  20                 	db	32
   109   000824  25                 	db	37
   110   000825  64                 	db	100	;'d'
   111   000826  00                 	db	0
   112   000827  00                 	db	0	; dummy byte at the end
   113   000000                     
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117   000C08                     __pcinit:
   118                           	callstack 0
   119   000C08                     start_initialization:
   120                           	callstack 0
   121   000C08                     __initialization:
   122                           	callstack 0
   123                           
   124                           ; Clear objects allocated to COMRAM (29 bytes)
   125   000C08  EE00  F025         	lfsr	0,__pbssCOMRAM
   126   000C0C  0E1D               	movlw	29
   127   000C0E                     clear_0:
   128   000C0E  6AEE               	clrf	postinc0,c
   129   000C10  06E8               	decf	wreg,f,c
   130   000C12  E1FD               	bnz	clear_0
   131   000C14                     end_of_initialization:
   132                           	callstack 0
   133   000C14                     __end_of__initialization:
   134                           	callstack 0
   135   000C14  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136   000C16  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137   000C18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138   000C1A  6EF8               	movwf	tblptru,c
   139   000C1C  0100               	movlb	0
   140   000C1E  EF11  F006         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143   000025                     __pbssCOMRAM:
   144                           	callstack 0
   145   000025                     _value:
   146                           	callstack 0
   147   000025                     	ds	1
   148   000026                     _Data:
   149                           	callstack 0
   150   000026                     	ds	1
   151   000027                     _Counter_Button1:
   152                           	callstack 0
   153   000027                     	ds	1
   154   000028                     _Text1:
   155                           	callstack 0
   156   000028                     	ds	26
   157                           
   158                           	psect	cstackBANK0
   159   000000                     __pcstackBANK0:
   160                           	callstack 0
   161   000000                     
   162                           ; 1 bytes @ 0x0
   163                           
   164                           	psect	cstackCOMRAM
   165   000001                     __pcstackCOMRAM:
   166                           	callstack 0
   167   000001                     ?_strlen:
   168                           	callstack 0
   169   000001                     ?___lwdiv:
   170                           	callstack 0
   171   000001                     ___lwdiv@dividend:
   172                           	callstack 0
   173   000001                     strlen@s:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177   000001                     	ds	2
   178   000003                     ___lwdiv@divisor:
   179                           	callstack 0
   180   000003                     strlen@cp:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x2
   184   000003                     	ds	2
   185   000005                     ___lwdiv@quotient:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x4
   189   000005                     	ds	2
   190   000007                     ___lwdiv@counter:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x6
   194   000007                     	ds	1
   195   000008                     ?___lwmod:
   196                           	callstack 0
   197   000008                     ___lwmod@dividend:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x7
   201   000008                     	ds	2
   202   00000A                     ___lwmod@divisor:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x9
   206   00000A                     	ds	2
   207   00000C                     ___lwmod@counter:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0xB
   211   00000C                     	ds	1
   212   00000D                     ?_sprintf:
   213                           	callstack 0
   214   00000D                     sprintf@sp:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0xC
   218   00000D                     	ds	2
   219   00000F                     sprintf@f:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0xE
   223   00000F                     	ds	4
   224   000013                     ??_sprintf:
   225                           
   226                           ; 1 bytes @ 0x12
   227   000013                     	ds	1
   228   000014                     sprintf@ap:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x13
   232   000014                     	ds	2
   233   000016                     sprintf@flag:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x15
   237   000016                     	ds	1
   238   000017                     sprintf@prec:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x16
   242   000017                     	ds	1
   243   000018                     sprintf@val:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x17
   247   000018                     	ds	2
   248   00001A                     sprintf@c:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x19
   252   00001A                     	ds	1
   253   00001B                     ??_INT_UART_TX:
   254                           
   255                           ; 1 bytes @ 0x1A
   256   00001B                     	ds	8
   257   000023                     INT_UART_TX@i:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x22
   261   000023                     	ds	2
   262                           
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 39 in file "main.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   282 ;;      Params:         0       0       0       0       0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0       0       0
   285 ;;      Totals:         0       0       0       0       0       0       0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels required when called: 4
   288 ;; This function calls:
   289 ;;		_Configurations
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296   000C22                     __ptext0:
   297                           	callstack 0
   298   000C22                     _main:
   299                           	callstack 27
   300   000C22                     
   301                           ;main.c: 42: Configurations();
   302   000C22  ECEF  F005         	call	_Configurations	;wreg free
   303   000C26                     l43:
   304   000C26  EF13  F006         	goto	l43
   305   000C2A  EF07  F000         	goto	start
   306   000C2E                     __end_of_main:
   307                           	callstack 0
   308                           
   309 ;; *************** function _Configurations *****************
   310 ;; Defined at:
   311 ;;		line 53 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 3
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340   000BDE                     __ptext1:
   341                           	callstack 0
   342   000BDE                     _Configurations:
   343                           	callstack 27
   344   000BDE                     
   345                           ;main.c: 55: OSCCON = 0x72;
   346   000BDE  0E72               	movlw	114
   347   000BE0  6ED3               	movwf	211,c	;volatile
   348                           
   349                           ;main.c: 56: ADCON1 = 0x0F;
   350   000BE2  0E0F               	movlw	15
   351   000BE4  6EC1               	movwf	193,c	;volatile
   352   000BE6                     
   353                           ;main.c: 58: TRISCbits.RC6 = 0;
   354   000BE6  9C94               	bcf	148,6,c	;volatile
   355   000BE8                     
   356                           ;main.c: 59: TRISCbits.RC7 = 1;
   357   000BE8  8E94               	bsf	148,7,c	;volatile
   358                           
   359                           ;main.c: 62: SPBRG = 0X0C;
   360   000BEA  0E0C               	movlw	12
   361   000BEC  6EAF               	movwf	175,c	;volatile
   362                           
   363                           ;main.c: 63: RCSTA = 0x90;
   364   000BEE  0E90               	movlw	144
   365   000BF0  6EAB               	movwf	171,c	;volatile
   366                           
   367                           ;main.c: 64: TXSTA = 0x20;
   368   000BF2  0E20               	movlw	32
   369   000BF4  6EAC               	movwf	172,c	;volatile
   370   000BF6                     
   371                           ;main.c: 67: INTCONbits.GIE = 1;
   372   000BF6  8EF2               	bsf	242,7,c	;volatile
   373   000BF8                     
   374                           ;main.c: 68: RCONbits.IPEN = 0;
   375   000BF8  9ED0               	bcf	208,7,c	;volatile
   376   000BFA                     
   377                           ;main.c: 70: INTCONbits.INT0E = 1;
   378   000BFA  88F2               	bsf	242,4,c	;volatile
   379   000BFC                     
   380                           ;main.c: 71: INTCONbits.INT0F = 0;
   381   000BFC  92F2               	bcf	242,1,c	;volatile
   382   000BFE                     
   383                           ;main.c: 72: INTCON2bits.INTEDG0 = 0;
   384   000BFE  9CF1               	bcf	241,6,c	;volatile
   385   000C00                     
   386                           ;main.c: 74: INTCON3bits.INT2E = 1;
   387   000C00  88F0               	bsf	240,4,c	;volatile
   388   000C02                     
   389                           ;main.c: 75: INTCON3bits.INT2F = 0;
   390   000C02  92F0               	bcf	240,1,c	;volatile
   391   000C04                     
   392                           ;main.c: 76: INTCON2bits.INTEDG2 = 1;
   393   000C04  88F1               	bsf	241,4,c	;volatile
   394   000C06  0012               	return		;funcret
   395   000C08                     __end_of_Configurations:
   396                           	callstack 0
   397                           
   398 ;; *************** function _INT_UART_TX *****************
   399 ;; Defined at:
   400 ;;		line 80 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  i               2   34[COMRAM] int 
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         0       0       0       0       0       0       0       0       0
   415 ;;      Locals:         2       0       0       0       0       0       0       0       0
   416 ;;      Temps:          8       0       0       0       0       0       0       0       0
   417 ;;      Totals:        10       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:       10 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; Hardware stack levels required when called: 2
   421 ;; This function calls:
   422 ;;		_sprintf
   423 ;;		_strlen
   424 ;; This function is called by:
   425 ;;		Interrupt level 2
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	intcode
   430   000008                     __pintcode:
   431                           	callstack 0
   432   000008                     _INT_UART_TX:
   433                           	callstack 27
   434                           
   435                           ;incstack = 0
   436   000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   437   00000A  EDE3  F004         	call	int_func,f	;refresh shadow registers
   438                           
   439                           	psect	intcode_body
   440   0009C6                     __pintcode_body:
   441                           	callstack 27
   442   0009C6                     int_func:
   443                           	callstack 27
   444   0009C6  0006               	pop		; remove dummy address from shadow register refresh
   445   0009C8  CFD9 F01B          	movff	fsr2l,??_INT_UART_TX
   446   0009CC  CFDA F01C          	movff	fsr2h,??_INT_UART_TX+1
   447   0009D0  CFF3 F01D          	movff	prodl,??_INT_UART_TX+2
   448   0009D4  CFF4 F01E          	movff	prodh,??_INT_UART_TX+3
   449   0009D8  CFF6 F01F          	movff	tblptrl,??_INT_UART_TX+4
   450   0009DC  CFF7 F020          	movff	tblptrh,??_INT_UART_TX+5
   451   0009E0  CFF8 F021          	movff	tblptru,??_INT_UART_TX+6
   452   0009E4  CFF5 F022          	movff	tablat,??_INT_UART_TX+7
   453   0009E8                     
   454                           ;main.c: 82: if (INTCONbits.INT0IF) {
   455   0009E8  A2F2               	btfss	242,1,c	;volatile
   456   0009EA  EFF9  F004         	goto	i2u36_41
   457   0009EE  EFFB  F004         	goto	i2u36_40
   458   0009F2                     i2u36_41:
   459   0009F2  EF0F  F005         	goto	i2l1127
   460   0009F6                     i2u36_40:
   461   0009F6                     
   462                           ;main.c: 84: Data.Int_Value [0]++;
   463   0009F6  2A26               	incf	_Data^0,f,c
   464   0009F8                     
   465                           ;main.c: 85: INTCONbits.INT0IF = 0;
   466   0009F8  92F2               	bcf	242,1,c	;volatile
   467   0009FA                     i2l55:
   468   0009FA  A89E               	btfss	158,4,c	;volatile
   469   0009FC  EF02  F005         	goto	i2u37_41
   470   000A00  EF04  F005         	goto	i2u37_40
   471   000A04                     i2u37_41:
   472   000A04  EFFD  F004         	goto	i2l55
   473   000A08                     i2u37_40:
   474   000A08                     
   475                           ;main.c: 87: TXREG = Data.Char_Value[0];
   476   000A08  C026  FFAD         	movff	_Data,4013	;volatile
   477   000A0C                     i2l58:
   478   000A0C  A89E               	btfss	158,4,c	;volatile
   479   000A0E  EF0B  F005         	goto	i2u38_41
   480   000A12  EF0D  F005         	goto	i2u38_40
   481   000A16                     i2u38_41:
   482   000A16  EF06  F005         	goto	i2l58
   483   000A1A                     i2u38_40:
   484   000A1A                     
   485                           ;main.c: 89: TXREG = 0x0D;
   486   000A1A  0E0D               	movlw	13
   487   000A1C  6EAD               	movwf	173,c	;volatile
   488   000A1E                     i2l1127:
   489                           
   490                           ;main.c: 91: };main.c: 92: if (INTCON3bits.INT2F) {
   491   000A1E  A2F0               	btfss	240,1,c	;volatile
   492   000A20  EF14  F005         	goto	i2u39_41
   493   000A24  EF16  F005         	goto	i2u39_40
   494   000A28                     i2u39_41:
   495   000A28  EF56  F005         	goto	i2l71
   496   000A2C                     i2u39_40:
   497   000A2C                     
   498                           ;main.c: 94: Counter_Button1++;
   499   000A2C  2A27               	incf	_Counter_Button1^0,f,c
   500   000A2E                     
   501                           ;main.c: 95: INTCON3bits.INT2F = 0;
   502   000A2E  92F0               	bcf	240,1,c	;volatile
   503   000A30                     
   504                           ;main.c: 96: sprintf(Text1, "The value of counter is: %d", Counter_Button1);
   505   000A30  0E28               	movlw	low _Text1
   506   000A32  6E0D               	movwf	sprintf@sp^0,c
   507   000A34  0E00               	movlw	high _Text1
   508   000A36  6E0E               	movwf	(sprintf@sp+1)^0,c
   509   000A38  0E0B               	movlw	low STR_1
   510   000A3A  6E0F               	movwf	sprintf@f^0,c
   511   000A3C  0E08               	movlw	high STR_1
   512   000A3E  6E10               	movwf	(sprintf@f+1)^0,c
   513   000A40  C027  F011         	movff	_Counter_Button1,?_sprintf+4
   514   000A44  6A12               	clrf	(?_sprintf+5)^0,c
   515   000A46  EC14  F004         	call	_sprintf	;wreg free
   516   000A4A                     
   517                           ;main.c: 98: for (int i = 0; i < strlen(Text1); i++) {
   518   000A4A  0E00               	movlw	0
   519   000A4C  6E24               	movwf	(INT_UART_TX@i+1)^0,c
   520   000A4E  0E00               	movlw	0
   521   000A50  6E23               	movwf	INT_UART_TX@i^0,c
   522   000A52  EF3C  F005         	goto	i2l1141
   523   000A56                     i2l64:
   524   000A56  A89E               	btfss	158,4,c	;volatile
   525   000A58  EF30  F005         	goto	i2u40_41
   526   000A5C  EF32  F005         	goto	i2u40_40
   527   000A60                     i2u40_41:
   528   000A60  EF2B  F005         	goto	i2l64
   529   000A64                     i2u40_40:
   530   000A64                     
   531                           ;main.c: 101: TXREG = Text1[i];
   532   000A64  0E28               	movlw	low _Text1
   533   000A66  2423               	addwf	INT_UART_TX@i^0,w,c
   534   000A68  6ED9               	movwf	fsr2l,c
   535   000A6A  0E00               	movlw	high _Text1
   536   000A6C  2024               	addwfc	(INT_UART_TX@i+1)^0,w,c
   537   000A6E  6EDA               	movwf	fsr2h,c
   538   000A70  50DF               	movf	indf2,w,c
   539   000A72  6EAD               	movwf	173,c	;volatile
   540   000A74  4A23               	infsnz	INT_UART_TX@i^0,f,c
   541   000A76  2A24               	incf	(INT_UART_TX@i+1)^0,f,c
   542   000A78                     i2l1141:
   543   000A78  0E28               	movlw	low _Text1
   544   000A7A  6E01               	movwf	strlen@s^0,c
   545   000A7C  0E00               	movlw	high _Text1
   546   000A7E  6E02               	movwf	(strlen@s+1)^0,c
   547   000A80  ECD4  F005         	call	_strlen	;wreg free
   548   000A84  5001               	movf	?_strlen^0,w,c
   549   000A86  5C23               	subwf	INT_UART_TX@i^0,w,c
   550   000A88  5002               	movf	(?_strlen+1)^0,w,c
   551   000A8A  5824               	subwfb	(INT_UART_TX@i+1)^0,w,c
   552   000A8C  A0D8               	btfss	status,0,c
   553   000A8E  EF4B  F005         	goto	i2u41_41
   554   000A92  EF4D  F005         	goto	i2u41_40
   555   000A96                     i2u41_41:
   556   000A96  EF2B  F005         	goto	i2l64
   557   000A9A                     i2u41_40:
   558   000A9A                     i2l68:
   559   000A9A  A89E               	btfss	158,4,c	;volatile
   560   000A9C  EF52  F005         	goto	i2u42_41
   561   000AA0  EF54  F005         	goto	i2u42_40
   562   000AA4                     i2u42_41:
   563   000AA4  EF4D  F005         	goto	i2l68
   564   000AA8                     i2u42_40:
   565   000AA8                     
   566                           ;main.c: 105: TXREG = 0x0D;
   567   000AA8  0E0D               	movlw	13
   568   000AAA  6EAD               	movwf	173,c	;volatile
   569   000AAC                     i2l71:
   570   000AAC  C022  FFF5         	movff	??_INT_UART_TX+7,tablat
   571   000AB0  C021  FFF8         	movff	??_INT_UART_TX+6,tblptru
   572   000AB4  C020  FFF7         	movff	??_INT_UART_TX+5,tblptrh
   573   000AB8  C01F  FFF6         	movff	??_INT_UART_TX+4,tblptrl
   574   000ABC  C01E  FFF4         	movff	??_INT_UART_TX+3,prodh
   575   000AC0  C01D  FFF3         	movff	??_INT_UART_TX+2,prodl
   576   000AC4  C01C  FFDA         	movff	??_INT_UART_TX+1,fsr2h
   577   000AC8  C01B  FFD9         	movff	??_INT_UART_TX,fsr2l
   578   000ACC  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   579   000ACE  0011               	retfie		f
   580   000AD0                     __end_of_INT_UART_TX:
   581                           	callstack 0
   582                           
   583 ;; *************** function _strlen *****************
   584 ;; Defined at:
   585 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  s               2    0[COMRAM] PTR const unsigned char 
   588 ;;		 -> Text1(26), 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  cp              2    2[COMRAM] PTR const unsigned char 
   591 ;;		 -> Text1(26), 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2    0[COMRAM] unsigned int 
   594 ;; Registers used:
   595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         2       0       0       0       0       0       0       0       0
   602 ;;      Locals:         2       0       0       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0
   604 ;;      Totals:         4       0       0       0       0       0       0       0       0
   605 ;;Total ram usage:        4 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_INT_UART_TX
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text3
   615   000BA8                     __ptext3:
   616                           	callstack 0
   617   000BA8                     _strlen:
   618                           	callstack 28
   619   000BA8  C001  F003         	movff	strlen@s,strlen@cp
   620   000BAC  C002  F004         	movff	strlen@s+1,strlen@cp+1
   621   000BB0  EFDC  F005         	goto	i2l1113
   622   000BB4                     i2l1111:
   623   000BB4  4A03               	infsnz	strlen@cp^0,f,c
   624   000BB6  2A04               	incf	(strlen@cp+1)^0,f,c
   625   000BB8                     i2l1113:
   626   000BB8  C003  FFD9         	movff	strlen@cp,fsr2l
   627   000BBC  C004  FFDA         	movff	strlen@cp+1,fsr2h
   628   000BC0  50DF               	movf	indf2,w,c
   629   000BC2  A4D8               	btfss	status,2,c
   630   000BC4  EFE6  F005         	goto	i2u35_41
   631   000BC8  EFE8  F005         	goto	i2u35_40
   632   000BCC                     i2u35_41:
   633   000BCC  EFDA  F005         	goto	i2l1111
   634   000BD0                     i2u35_40:
   635   000BD0  5001               	movf	strlen@s^0,w,c
   636   000BD2  5C03               	subwf	strlen@cp^0,w,c
   637   000BD4  6E01               	movwf	?_strlen^0,c
   638   000BD6  5002               	movf	(strlen@s+1)^0,w,c
   639   000BD8  5804               	subwfb	(strlen@cp+1)^0,w,c
   640   000BDA  6E02               	movwf	(?_strlen+1)^0,c
   641   000BDC  0012               	return		;funcret
   642   000BDE                     __end_of_strlen:
   643                           	callstack 0
   644                           
   645 ;; *************** function _sprintf *****************
   646 ;; Defined at:
   647 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  sp              2   12[COMRAM] PTR unsigned char 
   650 ;;		 -> Text1(26), 
   651 ;;  f               2   14[COMRAM] PTR const unsigned char 
   652 ;;		 -> STR_1(28), 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  tmpval          4    0        struct .
   655 ;;  cp              3    0        PTR const unsigned char 
   656 ;;  val             2   23[COMRAM] unsigned int 
   657 ;;  ap              2   19[COMRAM] PTR void [1]
   658 ;;		 -> ?_sprintf(2), 
   659 ;;  len             2    0        unsigned int 
   660 ;;  c               1   25[COMRAM] unsigned char 
   661 ;;  prec            1   22[COMRAM] char 
   662 ;;  flag            1   21[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  2   12[COMRAM] int 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         6       0       0       0       0       0       0       0       0
   673 ;;      Locals:         7       0       0       0       0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0       0       0       0       0
   675 ;;      Totals:        14       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:       14 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 1
   679 ;; This function calls:
   680 ;;		___lwdiv
   681 ;;		___lwmod
   682 ;; This function is called by:
   683 ;;		_INT_UART_TX
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text4
   688   000828                     __ptext4:
   689                           	callstack 0
   690   000828                     _sprintf:
   691                           	callstack 27
   692   000828                     
   693                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   694   000828  0E11               	movlw	low (?_sprintf+4)
   695   00082A  6E14               	movwf	sprintf@ap^0,c
   696   00082C  0E00               	movlw	high (?_sprintf+4)
   697   00082E  6E15               	movwf	(sprintf@ap+1)^0,c
   698                           
   699                           ;doprnt.c: 553: while((c = *f++)) {
   700   000830  EFCC  F004         	goto	i2l1103
   701   000834                     i2l1051:
   702                           
   703                           ;doprnt.c: 555: if(c != '%')
   704   000834  0E25               	movlw	37
   705   000836  181A               	xorwf	sprintf@c^0,w,c
   706   000838  B4D8               	btfsc	status,2,c
   707   00083A  EF21  F004         	goto	i2u28_41
   708   00083E  EF23  F004         	goto	i2u28_40
   709   000842                     i2u28_41:
   710   000842  EF2D  F004         	goto	i2l1057
   711   000846                     i2u28_40:
   712   000846                     
   713                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   714   000846  C00D  FFD9         	movff	sprintf@sp,fsr2l
   715   00084A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   716   00084E  C01A  FFDF         	movff	sprintf@c,indf2
   717   000852  4A0D               	infsnz	sprintf@sp^0,f,c
   718   000854  2A0E               	incf	(sprintf@sp+1)^0,f,c
   719                           
   720                           ;doprnt.c: 559: continue;
   721   000856  EFCC  F004         	goto	i2l1103
   722   00085A                     i2l1057:
   723                           
   724                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   725   00085A  0E00               	movlw	0
   726   00085C  6E16               	movwf	sprintf@flag^0,c
   727   00085E  C00F  FFF6         	movff	sprintf@f,tblptrl
   728   000862  C010  FFF7         	movff	sprintf@f+1,tblptrh
   729   000866  4A0F               	infsnz	sprintf@f^0,f,c
   730   000868  2A10               	incf	(sprintf@f+1)^0,f,c
   731   00086A                     	if	0	;tblptru may be non-zero
   732   00086A                     	endif
   733   00086A                     	if	0	;tblptru may be non-zero
   734   00086A                     	endif
   735   00086A  0008               	tblrd		*
   736   00086C  CFF5 F01A          	movff	tablat,sprintf@c
   737   000870  501A               	movf	sprintf@c^0,w,c
   738                           
   739                           ; Switch size 1, requested type "simple"
   740                           ; Number of cases is 3, Range of values is 0 to 105
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           10     6 (average)
   744                           ;	Chosen strategy is simple_byte
   745   000872  0A00               	xorlw	0	; case 0
   746   000874  B4D8               	btfsc	status,2,c
   747   000876  EFDD  F004         	goto	i2l1105
   748   00087A  0A64               	xorlw	100	; case 100
   749   00087C  B4D8               	btfsc	status,2,c
   750   00087E  EF47  F004         	goto	i2l1063
   751   000882  0A0D               	xorlw	13	; case 105
   752   000884  B4D8               	btfsc	status,2,c
   753   000886  EF47  F004         	goto	i2l1063
   754   00088A  EFCC  F004         	goto	i2l1103
   755   00088E                     i2l1063:
   756                           
   757                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
   758   00088E  C014  FFD9         	movff	sprintf@ap,fsr2l
   759   000892  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   760   000896  CFDE F018          	movff	postinc2,sprintf@val
   761   00089A  CFDD F019          	movff	postdec2,sprintf@val+1
   762   00089E  0E02               	movlw	2
   763   0008A0  2614               	addwf	sprintf@ap^0,f,c
   764   0008A2  0E00               	movlw	0
   765   0008A4  2215               	addwfc	(sprintf@ap+1)^0,f,c
   766   0008A6                     
   767                           ;doprnt.c: 1287: if((int)val < 0) {
   768   0008A6  BE19               	btfsc	(sprintf@val+1)^0,7,c
   769   0008A8  EF5A  F004         	goto	i2u29_40
   770   0008AC  EF58  F004         	goto	i2u29_41
   771   0008B0                     i2u29_41:
   772   0008B0  EF60  F004         	goto	i2l1073
   773   0008B4                     i2u29_40:
   774   0008B4                     
   775                           ;doprnt.c: 1288: flag |= 0x03;
   776   0008B4  0E03               	movlw	3
   777   0008B6  1216               	iorwf	sprintf@flag^0,f,c
   778   0008B8                     
   779                           ;doprnt.c: 1289: val = -val;
   780   0008B8  6C18               	negf	sprintf@val^0,c
   781   0008BA  1E19               	comf	(sprintf@val+1)^0,f,c
   782   0008BC  B0D8               	btfsc	status,0,c
   783   0008BE  2A19               	incf	(sprintf@val+1)^0,f,c
   784   0008C0                     i2l1073:
   785                           
   786                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
   787   0008C0  0E01               	movlw	1
   788   0008C2  6E1A               	movwf	sprintf@c^0,c
   789   0008C4                     i2l1079:
   790                           
   791                           ;doprnt.c: 1332: if(val < dpowers[c])
   792   0008C4  501A               	movf	sprintf@c^0,w,c
   793   0008C6  0D02               	mullw	2
   794   0008C8  0E01               	movlw	low _dpowers
   795   0008CA  24F3               	addwf	243,w,c
   796   0008CC  6EF6               	movwf	tblptrl,c
   797   0008CE  0E08               	movlw	high _dpowers
   798   0008D0  20F4               	addwfc	244,w,c
   799   0008D2  6EF7               	movwf	tblptrh,c
   800   0008D4                     	if	0	;There are less than 3 active tblptr bytes
   801   0008D4                     	endif
   802   0008D4  0009               	tblrd		*+
   803   0008D6  50F5               	movf	tablat,w,c
   804   0008D8  5C18               	subwf	sprintf@val^0,w,c
   805   0008DA  0009               	tblrd		*+
   806   0008DC  50F5               	movf	tablat,w,c
   807   0008DE  5819               	subwfb	(sprintf@val+1)^0,w,c
   808   0008E0  B0D8               	btfsc	status,0,c
   809   0008E2  EF75  F004         	goto	i2u30_41
   810   0008E6  EF77  F004         	goto	i2u30_40
   811   0008EA                     i2u30_41:
   812   0008EA  EF79  F004         	goto	i2l1083
   813   0008EE                     i2u30_40:
   814   0008EE  EF83  F004         	goto	i2l1087
   815   0008F2                     i2l1083:
   816   0008F2  2A1A               	incf	sprintf@c^0,f,c
   817   0008F4  0E05               	movlw	5
   818   0008F6  181A               	xorwf	sprintf@c^0,w,c
   819   0008F8  A4D8               	btfss	status,2,c
   820   0008FA  EF81  F004         	goto	i2u31_41
   821   0008FE  EF83  F004         	goto	i2u31_40
   822   000902                     i2u31_41:
   823   000902  EF62  F004         	goto	i2l1079
   824   000906                     i2u31_40:
   825   000906                     i2l1087:
   826                           
   827                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
   828   000906  C016  F013         	movff	sprintf@flag,??_sprintf
   829   00090A  0E03               	movlw	3
   830   00090C  1613               	andwf	??_sprintf^0,f,c
   831   00090E  B4D8               	btfsc	status,2,c
   832   000910  EF8C  F004         	goto	i2u32_41
   833   000914  EF8E  F004         	goto	i2u32_40
   834   000918                     i2u32_41:
   835   000918  EF96  F004         	goto	i2l1093
   836   00091C                     i2u32_40:
   837   00091C                     
   838                           ;doprnt.c: 1465: ((*sp++ = ('-')));
   839   00091C  C00D  FFD9         	movff	sprintf@sp,fsr2l
   840   000920  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   841   000924  0E2D               	movlw	45
   842   000926  6EDF               	movwf	indf2,c
   843   000928  4A0D               	infsnz	sprintf@sp^0,f,c
   844   00092A  2A0E               	incf	(sprintf@sp+1)^0,f,c
   845   00092C                     i2l1093:
   846                           
   847                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   848   00092C  C01A  F017         	movff	sprintf@c,sprintf@prec
   849                           
   850                           ;doprnt.c: 1500: while(prec--) {
   851   000930  EFC3  F004         	goto	i2l1101
   852   000934                     i2l1095:
   853                           
   854                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   855   000934  5017               	movf	sprintf@prec^0,w,c
   856   000936  0D02               	mullw	2
   857   000938  0E01               	movlw	low _dpowers
   858   00093A  24F3               	addwf	243,w,c
   859   00093C  6EF6               	movwf	tblptrl,c
   860   00093E  0E08               	movlw	high _dpowers
   861   000940  20F4               	addwfc	244,w,c
   862   000942  6EF7               	movwf	tblptrh,c
   863   000944                     	if	0	;There are less than 3 active tblptr bytes
   864   000944                     	endif
   865   000944  0009               	tblrd		*+
   866   000946  CFF5 F003          	movff	tablat,___lwdiv@divisor
   867   00094A  000A               	tblrd		*-
   868   00094C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   869   000950  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   870   000954  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   871   000958  EC68  F005         	call	___lwdiv	;wreg free
   872   00095C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   873   000960  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   874   000964  0E00               	movlw	0
   875   000966  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   876   000968  0E0A               	movlw	10
   877   00096A  6E0A               	movwf	___lwmod@divisor^0,c
   878   00096C  ECA2  F005         	call	___lwmod	;wreg free
   879   000970  5008               	movf	?___lwmod^0,w,c
   880   000972  0F30               	addlw	48
   881   000974  6E1A               	movwf	sprintf@c^0,c
   882   000976                     
   883                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
   884   000976  C00D  FFD9         	movff	sprintf@sp,fsr2l
   885   00097A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   886   00097E  C01A  FFDF         	movff	sprintf@c,indf2
   887   000982  4A0D               	infsnz	sprintf@sp^0,f,c
   888   000984  2A0E               	incf	(sprintf@sp+1)^0,f,c
   889   000986                     i2l1101:
   890   000986  0617               	decf	sprintf@prec^0,f,c
   891   000988  2817               	incf	sprintf@prec^0,w,c
   892   00098A  A4D8               	btfss	status,2,c
   893   00098C  EFCA  F004         	goto	i2u33_41
   894   000990  EFCC  F004         	goto	i2u33_40
   895   000994                     i2u33_41:
   896   000994  EF9A  F004         	goto	i2l1095
   897   000998                     i2u33_40:
   898   000998                     i2l1103:
   899   000998  C00F  FFF6         	movff	sprintf@f,tblptrl
   900   00099C  C010  FFF7         	movff	sprintf@f+1,tblptrh
   901   0009A0  4A0F               	infsnz	sprintf@f^0,f,c
   902   0009A2  2A10               	incf	(sprintf@f+1)^0,f,c
   903   0009A4                     	if	0	;tblptru may be non-zero
   904   0009A4                     	endif
   905   0009A4                     	if	0	;tblptru may be non-zero
   906   0009A4                     	endif
   907   0009A4  0008               	tblrd		*
   908   0009A6  CFF5 F01A          	movff	tablat,sprintf@c
   909   0009AA  501A               	movf	sprintf@c^0,w,c
   910   0009AC  A4D8               	btfss	status,2,c
   911   0009AE  EFDB  F004         	goto	i2u34_41
   912   0009B2  EFDD  F004         	goto	i2u34_40
   913   0009B6                     i2u34_41:
   914   0009B6  EF1A  F004         	goto	i2l1051
   915   0009BA                     i2u34_40:
   916   0009BA                     i2l1105:
   917                           
   918                           ;doprnt.c: 1564: *sp = 0;
   919   0009BA  C00D  FFD9         	movff	sprintf@sp,fsr2l
   920   0009BE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   921   0009C2  6ADF               	clrf	indf2,c
   922   0009C4  0012               	return		;funcret
   923   0009C6                     __end_of_sprintf:
   924                           	callstack 0
   925                           
   926 ;; *************** function ___lwmod *****************
   927 ;; Defined at:
   928 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  dividend        2    7[COMRAM] unsigned int 
   931 ;;  divisor         2    9[COMRAM] unsigned int 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  counter         1   11[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    7[COMRAM] unsigned int 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   943 ;;      Params:         4       0       0       0       0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         5       0       0       0       0       0       0       0       0
   947 ;;Total ram usage:        5 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_sprintf
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text5
   957   000B44                     __ptext5:
   958                           	callstack 0
   959   000B44                     ___lwmod:
   960                           	callstack 27
   961   000B44  500A               	movf	___lwmod@divisor^0,w,c
   962   000B46  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
   963   000B48  B4D8               	btfsc	status,2,c
   964   000B4A  EFA9  F005         	goto	i2u25_41
   965   000B4E  EFAB  F005         	goto	i2u25_40
   966   000B52                     i2u25_41:
   967   000B52  EFCF  F005         	goto	i2l591
   968   000B56                     i2u25_40:
   969   000B56  0E01               	movlw	1
   970   000B58  6E0C               	movwf	___lwmod@counter^0,c
   971   000B5A  EFB3  F005         	goto	i2l1039
   972   000B5E                     i2l1037:
   973   000B5E  90D8               	bcf	status,0,c
   974   000B60  360A               	rlcf	___lwmod@divisor^0,f,c
   975   000B62  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
   976   000B64  2A0C               	incf	___lwmod@counter^0,f,c
   977   000B66                     i2l1039:
   978   000B66  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
   979   000B68  EFB8  F005         	goto	i2u26_41
   980   000B6C  EFBA  F005         	goto	i2u26_40
   981   000B70                     i2u26_41:
   982   000B70  EFAF  F005         	goto	i2l1037
   983   000B74                     i2u26_40:
   984   000B74                     i2l1041:
   985   000B74  500A               	movf	___lwmod@divisor^0,w,c
   986   000B76  5C08               	subwf	___lwmod@dividend^0,w,c
   987   000B78  500B               	movf	(___lwmod@divisor+1)^0,w,c
   988   000B7A  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
   989   000B7C  A0D8               	btfss	status,0,c
   990   000B7E  EFC3  F005         	goto	i2u27_41
   991   000B82  EFC5  F005         	goto	i2u27_40
   992   000B86                     i2u27_41:
   993   000B86  EFC9  F005         	goto	i2l1045
   994   000B8A                     i2u27_40:
   995   000B8A  500A               	movf	___lwmod@divisor^0,w,c
   996   000B8C  5E08               	subwf	___lwmod@dividend^0,f,c
   997   000B8E  500B               	movf	(___lwmod@divisor+1)^0,w,c
   998   000B90  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
   999   000B92                     i2l1045:
  1000   000B92  90D8               	bcf	status,0,c
  1001   000B94  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1002   000B96  320A               	rrcf	___lwmod@divisor^0,f,c
  1003   000B98  2E0C               	decfsz	___lwmod@counter^0,f,c
  1004   000B9A  EFBA  F005         	goto	i2l1041
  1005   000B9E                     i2l591:
  1006   000B9E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1007   000BA2  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1008   000BA6  0012               	return		;funcret
  1009   000BA8                     __end_of___lwmod:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function ___lwdiv *****************
  1013 ;; Defined at:
  1014 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  dividend        2    0[COMRAM] unsigned int 
  1017 ;;  divisor         2    2[COMRAM] unsigned int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  quotient        2    4[COMRAM] unsigned int 
  1020 ;;  counter         1    6[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2    0[COMRAM] unsigned int 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         4       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        7 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_sprintf
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text6
  1044   000AD0                     __ptext6:
  1045                           	callstack 0
  1046   000AD0                     ___lwdiv:
  1047                           	callstack 27
  1048   000AD0  0E00               	movlw	0
  1049   000AD2  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1050   000AD4  0E00               	movlw	0
  1051   000AD6  6E05               	movwf	___lwdiv@quotient^0,c
  1052   000AD8  5003               	movf	___lwdiv@divisor^0,w,c
  1053   000ADA  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1054   000ADC  B4D8               	btfsc	status,2,c
  1055   000ADE  EF73  F005         	goto	i2u22_41
  1056   000AE2  EF75  F005         	goto	i2u22_40
  1057   000AE6                     i2u22_41:
  1058   000AE6  EF9D  F005         	goto	i2l581
  1059   000AEA                     i2u22_40:
  1060   000AEA  0E01               	movlw	1
  1061   000AEC  6E07               	movwf	___lwdiv@counter^0,c
  1062   000AEE  EF7D  F005         	goto	i2l1019
  1063   000AF2                     i2l1017:
  1064   000AF2  90D8               	bcf	status,0,c
  1065   000AF4  3603               	rlcf	___lwdiv@divisor^0,f,c
  1066   000AF6  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1067   000AF8  2A07               	incf	___lwdiv@counter^0,f,c
  1068   000AFA                     i2l1019:
  1069   000AFA  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1070   000AFC  EF82  F005         	goto	i2u23_41
  1071   000B00  EF84  F005         	goto	i2u23_40
  1072   000B04                     i2u23_41:
  1073   000B04  EF79  F005         	goto	i2l1017
  1074   000B08                     i2u23_40:
  1075   000B08                     i2l1021:
  1076   000B08  90D8               	bcf	status,0,c
  1077   000B0A  3605               	rlcf	___lwdiv@quotient^0,f,c
  1078   000B0C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1079   000B0E  5003               	movf	___lwdiv@divisor^0,w,c
  1080   000B10  5C01               	subwf	___lwdiv@dividend^0,w,c
  1081   000B12  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1082   000B14  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1083   000B16  A0D8               	btfss	status,0,c
  1084   000B18  EF90  F005         	goto	i2u24_41
  1085   000B1C  EF92  F005         	goto	i2u24_40
  1086   000B20                     i2u24_41:
  1087   000B20  EF97  F005         	goto	i2l1029
  1088   000B24                     i2u24_40:
  1089   000B24  5003               	movf	___lwdiv@divisor^0,w,c
  1090   000B26  5E01               	subwf	___lwdiv@dividend^0,f,c
  1091   000B28  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1092   000B2A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1093   000B2C  8005               	bsf	___lwdiv@quotient^0,0,c
  1094   000B2E                     i2l1029:
  1095   000B2E  90D8               	bcf	status,0,c
  1096   000B30  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1097   000B32  3203               	rrcf	___lwdiv@divisor^0,f,c
  1098   000B34  2E07               	decfsz	___lwdiv@counter^0,f,c
  1099   000B36  EF84  F005         	goto	i2l1021
  1100   000B3A                     i2l581:
  1101   000B3A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1102   000B3E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1103   000B42  0012               	return		;funcret
  1104   000B44                     __end_of___lwdiv:
  1105                           	callstack 0
  1106                           
  1107                           	psect	rparam
  1108   000000                     
  1109                           	psect	temp
  1110   000042                     btemp:
  1111                           	callstack 0
  1112   000042                     	ds	1
  1113   000000                     int$flags	set	btemp
  1114   000000                     wtemp8	set	btemp+1
  1115   000000                     ttemp5	set	btemp+1
  1116   000000                     ttemp6	set	btemp+4
  1117   000000                     ttemp7	set	btemp+8
  1118                           
  1119                           	psect	config
  1120                           
  1121                           ;Config register CONFIG1L @ 0x300000
  1122                           ;	PLL Prescaler Selection bits
  1123                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1124                           ;	System Clock Postscaler Selection bits
  1125                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1126                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1127                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1128   300000                     	org	3145728
  1129   300000  00                 	db	0
  1130                           
  1131                           ;Config register CONFIG1H @ 0x300001
  1132                           ;	Oscillator Selection bits
  1133                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  1134                           ;	Fail-Safe Clock Monitor Enable bit
  1135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1136                           ;	Internal/External Oscillator Switchover bit
  1137                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1138   300001                     	org	3145729
  1139   300001  0B                 	db	11
  1140                           
  1141                           ;Config register CONFIG2L @ 0x300002
  1142                           ;	Power-up Timer Enable bit
  1143                           ;	PWRT = OFF, PWRT disabled
  1144                           ;	Brown-out Reset Enable bits
  1145                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1146                           ;	Brown-out Reset Voltage bits
  1147                           ;	BORV = 3, Minimum setting 2.05V
  1148                           ;	USB Voltage Regulator Enable bit
  1149                           ;	VREGEN = OFF, USB voltage regulator disabled
  1150   300002                     	org	3145730
  1151   300002  19                 	db	25
  1152                           
  1153                           ;Config register CONFIG2H @ 0x300003
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1156                           ;	Watchdog Timer Postscale Select bits
  1157                           ;	WDTPS = 32768, 1:32768
  1158   300003                     	org	3145731
  1159   300003  1E                 	db	30
  1160                           
  1161                           ; Padding undefined space
  1162   300004                     	org	3145732
  1163   300004  FF                 	db	255
  1164                           
  1165                           ;Config register CONFIG3H @ 0x300005
  1166                           ;	CCP2 MUX bit
  1167                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1168                           ;	PORTB A/D Enable bit
  1169                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1170                           ;	Low-Power Timer 1 Oscillator Enable bit
  1171                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1172                           ;	MCLR Pin Enable bit
  1173                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1174   300005                     	org	3145733
  1175   300005  83                 	db	131
  1176                           
  1177                           ;Config register CONFIG4L @ 0x300006
  1178                           ;	Stack Full/Underflow Reset Enable bit
  1179                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1180                           ;	Single-Supply ICSP Enable bit
  1181                           ;	LVP = OFF, Single-Supply ICSP disabled
  1182                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1183                           ;	ICPRT = OFF, ICPORT disabled
  1184                           ;	Extended Instruction Set Enable bit
  1185                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1186                           ;	Background Debugger Enable bit
  1187                           ;	DEBUG = 0x1, unprogrammed default
  1188   300006                     	org	3145734
  1189   300006  81                 	db	129
  1190                           
  1191                           ; Padding undefined space
  1192   300007                     	org	3145735
  1193   300007  FF                 	db	255
  1194                           
  1195                           ;Config register CONFIG5L @ 0x300008
  1196                           ;	Code Protection bit
  1197                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1198                           ;	Code Protection bit
  1199                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1200                           ;	Code Protection bit
  1201                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1202                           ;	Code Protection bit
  1203                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1204   300008                     	org	3145736
  1205   300008  0F                 	db	15
  1206                           
  1207                           ;Config register CONFIG5H @ 0x300009
  1208                           ;	Boot Block Code Protection bit
  1209                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1210                           ;	Data EEPROM Code Protection bit
  1211                           ;	CPD = OFF, Data EEPROM is not code-protected
  1212   300009                     	org	3145737
  1213   300009  C0                 	db	192
  1214                           
  1215                           ;Config register CONFIG6L @ 0x30000A
  1216                           ;	Write Protection bit
  1217                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1218                           ;	Write Protection bit
  1219                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1220                           ;	Write Protection bit
  1221                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1222                           ;	Write Protection bit
  1223                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1224   30000A                     	org	3145738
  1225   30000A  0F                 	db	15
  1226                           
  1227                           ;Config register CONFIG6H @ 0x30000B
  1228                           ;	Configuration Register Write Protection bit
  1229                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1230                           ;	Boot Block Write Protection bit
  1231                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1232                           ;	Data EEPROM Write Protection bit
  1233                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1234   30000B                     	org	3145739
  1235   30000B  E0                 	db	224
  1236                           
  1237                           ;Config register CONFIG7L @ 0x30000C
  1238                           ;	Table Read Protection bit
  1239                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1240                           ;	Table Read Protection bit
  1241                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1242                           ;	Table Read Protection bit
  1243                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1244                           ;	Table Read Protection bit
  1245                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1246   30000C                     	org	3145740
  1247   30000C  0F                 	db	15
  1248                           
  1249                           ;Config register CONFIG7H @ 0x30000D
  1250                           ;	Boot Block Table Read Protection bit
  1251                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1252   30000D                     	org	3145741
  1253   30000D  40                 	db	64
  1254                           tosu	equ	0xFFF
  1255                           tosh	equ	0xFFE
  1256                           tosl	equ	0xFFD
  1257                           stkptr	equ	0xFFC
  1258                           pclatu	equ	0xFFB
  1259                           pclath	equ	0xFFA
  1260                           pcl	equ	0xFF9
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           prodh	equ	0xFF4
  1266                           prodl	equ	0xFF3
  1267                           indf0	equ	0xFEF
  1268                           postinc0	equ	0xFEE
  1269                           postdec0	equ	0xFED
  1270                           preinc0	equ	0xFEC
  1271                           plusw0	equ	0xFEB
  1272                           fsr0h	equ	0xFEA
  1273                           fsr0l	equ	0xFE9
  1274                           wreg	equ	0xFE8
  1275                           indf1	equ	0xFE7
  1276                           postinc1	equ	0xFE6
  1277                           postdec1	equ	0xFE5
  1278                           preinc1	equ	0xFE4
  1279                           plusw1	equ	0xFE3
  1280                           fsr1h	equ	0xFE2
  1281                           fsr1l	equ	0xFE1
  1282                           bsr	equ	0xFE0
  1283                           indf2	equ	0xFDF
  1284                           postinc2	equ	0xFDE
  1285                           postdec2	equ	0xFDD
  1286                           preinc2	equ	0xFDC
  1287                           plusw2	equ	0xFDB
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 26
		 -> Text1(COMRAM[26]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 26
		 -> Text1(COMRAM[26]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[28]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 26
		 -> Text1(COMRAM[26]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_UART_TX in COMRAM

    _INT_UART_TX->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_UART_TX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_UART_TX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_UART_TX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_UART_TX in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_UART_TX in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_UART_TX in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_UART_TX in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_UART_TX in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_UART_TX                                         10    10      0    1466
                                             26 COMRAM    10    10      0
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations

 _INT_UART_TX (ROOT)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      41       1       69.1%
BITBIGSFRlll        34      0       0      28        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRllhh       11      0       0      24        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRllhllh      C      0       0      26        0.0%
BITBIGSFRllhlll      9      0       0      27        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRllhlh       1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      29        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jan 16 11:53:33 2024

                     l43 0C26                       l44 0C26                       l49 0C06  
                    wreg 0FE8                     l1151 0BF6                     l1161 0C00  
                   l1153 0BF8                     l1145 0BDE                     l1163 0C02  
                   l1155 0BFA                     l1147 0BE6                     l1165 0C04  
                   l1157 0BFC                     l1149 0BE8                     l1159 0BFE  
                   l1167 0C22                     STR_1 080B                     i2l71 0AAC  
                   i2l55 09FA                     i2l64 0A56                     i2l57 0A08  
                   i2l58 0A0C                     i2l68 0A9A                     i2l99 09C4  
                   _Data 0026                     _main 0C22                     fsr2h 0FDA  
                   indf2 0FDF                     fsr2l 0FD9                     btemp 0042  
                   prodh 0FF4                     prodl 0FF3                     start 000E  
           ___param_bank 0000                    ?_main 0001          __end_of___lwdiv 0B44  
        __end_of___lwmod 0BA8                    i2l581 0B3A                    i2l591 0B9E  
                  i2l588 0B42                    i2l598 0BA6                    i2l767 0BDC  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _TXREG 0FAD  
                  _TXSTA 0FAC                    _Text1 0028             ?_INT_UART_TX 0001  
        __end_of_dpowers 080B                    _value 0025                    tablat 0FF5  
                  ttemp5 0043                    ttemp6 0046                    ttemp7 004A  
                  status 0FD8                    wtemp8 0043          __end_of_sprintf 09C6  
        __initialization 0C08             __end_of_main 0C2E                   ??_main 0000  
          __activetblptr 0002                   _ADCON1 0FC1                   i2l1011 0AD0  
                 i2l1021 0B08                   i2l1013 0AD8                   i2l1101 0986  
                 i2l1031 0B34                   i2l1023 0B0E                   i2l1015 0AEA  
                 i2l1103 0998                   i2l1111 0BB4                   i2l1025 0B24  
                 i2l1017 0AF2                   i2l1041 0B74                   i2l1033 0B44  
                 i2l1105 09BA                   i2l1113 0BB8                   i2l1121 09F6  
                 i2l1027 0B2C                   i2l1019 0AFA                   i2l1043 0B8A  
                 i2l1035 0B56                   i2l1051 0834                   i2l1115 0BD0  
                 i2l1131 0A2E                   i2l1123 09F8                   i2l1029 0B2E  
                 i2l1045 0B92                   i2l1037 0B5E                   i2l1061 085E  
                 i2l1053 0846                   i2l1109 0BA8                   i2l1141 0A78  
                 i2l1133 0A30                   i2l1125 0A1A                   i2l1047 0B98  
                 i2l1039 0B66                   i2l1071 08B8                   i2l1063 088E  
                 i2l1055 0852                   i2l1143 0AA8                   i2l1135 0A4A  
                 i2l1127 0A1E                   i2l1119 09E8                   i2l1073 08C0  
                 i2l1065 089E                   i2l1057 085A                   i2l1049 0828  
                 i2l1137 0A64                   i2l1129 0A2C                   i2l1091 0928  
                 i2l1083 08F2                   i2l1067 08A6                   i2l1139 0A74  
                 i2l1093 092C                   i2l1085 08F4                   i2l1069 08B4  
                 i2l1095 0934                   i2l1087 0906                   i2l1079 08C4  
                 i2l1097 0976                   i2l1089 091C                   i2l1099 0982  
                 _OSCCON 0FD3                ??___lwdiv 0005                ??___lwmod 000C  
                 clear_0 0C0E                   isa$std 0001                   _strlen 0BA8  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8                ??_sprintf 0013               __accesstop 0060  
__end_of__initialization 0C14            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?_strlen 0001                  i2u22_40 0AEA                  i2u30_40 08EE  
                i2u22_41 0AE6                  i2u30_41 08EA                  i2u23_40 0B08  
                i2u31_40 0906                  i2u23_41 0B04                  i2u31_41 0902  
                i2u24_40 0B24                  i2u32_40 091C                  i2u40_40 0A64  
                i2u24_41 0B20                  i2u32_41 0918                  i2u40_41 0A60  
                i2u25_40 0B56                  i2u33_40 0998                  i2u41_40 0A9A  
                i2u25_41 0B52                  i2u33_41 0994                  i2u41_41 0A96  
                i2u26_40 0B74                  i2u34_40 09BA                  i2u42_40 0AA8  
                i2u26_41 0B70                  i2u34_41 09B6                  i2u42_41 0AA4  
                i2u27_40 0B8A                  i2u35_40 0BD0                  i2u27_41 0B86  
                i2u35_41 0BCC                  i2u28_40 0846                  i2u36_40 09F6  
                i2u28_41 0842                  i2u36_41 09F2                  i2u29_40 08B4  
                i2u37_40 0A08                  i2u29_41 08B0                  i2u37_41 0A04  
                i2u38_40 0A1A                  i2u38_41 0A16                  i2u39_40 0A2C  
                i2u39_41 0A28                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0AD0                  ___lwmod 0B44             __psmallconst 0800  
                __pcinit 0C08                  __ramtop 0800                  __ptext0 0C22  
                __ptext1 0BDE                  __ptext3 0BA8                  __ptext4 0828  
                __ptext5 0B44                  __ptext6 0AD0                  _dpowers 0801  
                _sprintf 0828           __pintcode_body 09C6     end_of_initialization 0C14  
          __Lmediumconst 0000                  int_func 09C6                  postdec2 0FDD  
                postinc0 0FEE                  postinc2 0FDE                  strlen@s 0001  
           INT_UART_TX@i 0023                _TRISCbits 0F94           __end_of_strlen 0BDE  
    start_initialization 0C08           _Configurations 0BDE                 ??_strlen 0003  
            __pbssCOMRAM 0025   __end_of_Configurations 0C08            __pcstackBANK0 0000  
          ??_INT_UART_TX 001B              sprintf@flag 0016              sprintf@prec 0017  
       ___lwdiv@dividend 0001                __pintcode 0008                 ?___lwdiv 0001  
               ?___lwmod 0008              __smallconst 0800          ?_Configurations 0001  
       ___lwdiv@quotient 0005                 ?_sprintf 000D      __end_of_INT_UART_TX 0AD0  
               _PIR1bits 0F9E                 _RCONbits 0FD0              _INTCON2bits 0FF1  
            _INTCON3bits 0FF0                 __Hrparam 0000                 __Lrparam 0000  
             sprintf@val 0018          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
            _INT_UART_TX 0008                 isa$xinst 0000                 int$flags 0042  
             _INTCONbits 0FF2                 intlevel2 0000                sprintf@ap 0014  
              sprintf@sp 000D         ___lwmod@dividend 0008         ??_Configurations 0000  
               sprintf@c 001A                 sprintf@f 000F          ___lwmod@divisor 000A  
               strlen@cp 0003          ___lwmod@counter 000C          _Counter_Button1 0027  
