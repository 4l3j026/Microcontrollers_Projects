

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 15 01:05:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _PORTBbits	set	3969
    50   000000                     _TRISB	set	3987
    51   000000                     _TRISD	set	3989
    52   000000                     _ADCON1	set	4033
    53   000000                     _OSCCON	set	4051
    54   000000                     _TRISE	set	3990
    55   000000                     _LATD	set	3980
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60   007F9C                     __pcinit:
    61                           	callstack 0
    62   007F9C                     start_initialization:
    63                           	callstack 0
    64   007F9C                     __initialization:
    65                           	callstack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (4 bytes)
    68   007F9C  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    69   007F9E  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    70   007FA0  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    71   007FA2  6A01               	clrf	__pbssCOMRAM& (0+255),c
    72   007FA4                     end_of_initialization:
    73                           	callstack 0
    74   007FA4                     __end_of__initialization:
    75                           	callstack 0
    76   007FA4  0100               	movlb	0
    77   007FA6  EFD5  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	bssCOMRAM
    80   000001                     __pbssCOMRAM:
    81                           	callstack 0
    82   000001                     _Counter_Pull_Up:
    83                           	callstack 0
    84   000001                     	ds	2
    85   000003                     _Counter_Pull_Down:
    86                           	callstack 0
    87   000003                     	ds	2
    88                           
    89                           	psect	cstackCOMRAM
    90   000005                     __pcstackCOMRAM:
    91                           	callstack 0
    92   000005                     ??_Counter:
    93   000005                     
    94                           ; 1 bytes @ 0x0
    95   000005                     	ds	2
    96   000007                     
    97                           ; 1 bytes @ 0x2
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 22 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called: 1
   123 ;; This function calls:
   124 ;;		_Conf_Reg
   125 ;;		_Counter
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132   007FAA                     __ptext0:
   133                           	callstack 0
   134   007FAA                     _main:
   135                           	callstack 30
   136   007FAA                     
   137                           ;main.c: 25:     Conf_Reg();
   138   007FAA  ECDD  F03F         	call	_Conf_Reg	;wreg free
   139   007FAE                     l727:
   140                           
   141                           ;main.c: 29:         Counter();
   142   007FAE  ECE8  F03F         	call	_Counter	;wreg free
   143   007FB2  EFD7  F03F         	goto	l727
   144   007FB6  EF00  F000         	goto	start
   145   007FBA                     __end_of_main:
   146                           	callstack 0
   147                           
   148 ;; *************** function _Counter *****************
   149 ;; Defined at:
   150 ;;		line 51 in file "main.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         0       0       0       0       0       0       0       0       0
   166 ;;      Temps:          2       0       0       0       0       0       0       0       0
   167 ;;      Totals:         2       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        2 bytes
   169 ;; Hardware stack levels used: 1
   170 ;; This function calls:
   171 ;;		Nothing
   172 ;; This function is called by:
   173 ;;		_main
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text1
   178   007FD0                     __ptext1:
   179                           	callstack 0
   180   007FD0                     _Counter:
   181                           	callstack 30
   182   007FD0                     
   183                           ;main.c: 53:     if (!PORTBbits.RB0) {
   184   007FD0  B081               	btfsc	129,0,c	;volatile
   185   007FD2  EFED  F03F         	goto	u11
   186   007FD6  EFEF  F03F         	goto	u10
   187   007FDA                     u11:
   188   007FDA  EFFF  F03F         	goto	l39
   189   007FDE                     u10:
   190   007FDE                     
   191                           ;main.c: 55:         _delay((unsigned long)((200)*(8000000/4000.0)));
   192   007FDE  0E03               	movlw	3
   193   007FE0  6E06               	movwf	(??_Counter+1)^0,c
   194   007FE2  0E08               	movlw	8
   195   007FE4  6E05               	movwf	??_Counter^0,c
   196   007FE6  0E77               	movlw	119
   197   007FE8                     u27:
   198   007FE8  2EE8               	decfsz	wreg,f,c
   199   007FEA  D7FE               	bra	u27
   200   007FEC  2E05               	decfsz	??_Counter^0,f,c
   201   007FEE  D7FC               	bra	u27
   202   007FF0  2E06               	decfsz	(??_Counter+1)^0,f,c
   203   007FF2  D7FA               	bra	u27
   204   007FF4  F000               	nop	
   205   007FF6                     
   206                           ;main.c: 56:         Counter_Pull_Down++;
   207   007FF6  4A03               	infsnz	_Counter_Pull_Down^0,f,c
   208   007FF8  2A04               	incf	(_Counter_Pull_Down+1)^0,f,c
   209   007FFA                     
   210                           ;main.c: 57:         LATD = Counter_Pull_Down;
   211   007FFA  C003  FF8C         	movff	_Counter_Pull_Down,3980	;volatile
   212   007FFE                     l39:
   213   007FFE  0012               	return		;funcret
   214   008000                     __end_of_Counter:
   215                           	callstack 0
   216                           
   217 ;; *************** function _Conf_Reg *****************
   218 ;; Defined at:
   219 ;;		line 37 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   233 ;;      Params:         0       0       0       0       0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0       0       0       0       0
   236 ;;      Totals:         0       0       0       0       0       0       0       0       0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels used: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		_main
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text2
   247   007FBA                     __ptext2:
   248                           	callstack 0
   249   007FBA                     _Conf_Reg:
   250                           	callstack 30
   251   007FBA                     
   252                           ;main.c: 39:     OSCCON = 0x72;
   253   007FBA  0E72               	movlw	114
   254   007FBC  6ED3               	movwf	211,c	;volatile
   255                           
   256                           ;main.c: 40:     ADCON1 = 0x0F;
   257   007FBE  0E0F               	movlw	15
   258   007FC0  6EC1               	movwf	193,c	;volatile
   259                           
   260                           ;main.c: 42:     TRISD = 0x00;
   261   007FC2  0E00               	movlw	0
   262   007FC4  6E95               	movwf	149,c	;volatile
   263                           
   264                           ;main.c: 43:     TRISE = 0x00;
   265   007FC6  0E00               	movlw	0
   266   007FC8  6E96               	movwf	150,c	;volatile
   267                           
   268                           ;main.c: 45:     TRISB = 0x03;
   269   007FCA  0E03               	movlw	3
   270   007FCC  6E93               	movwf	147,c	;volatile
   271   007FCE  0012               	return		;funcret
   272   007FD0                     __end_of_Conf_Reg:
   273                           	callstack 0
   274   000000                     
   275                           	psect	rparam
   276   000000                     
   277                           	psect	config
   278                           
   279                           ;Config register CONFIG1L @ 0x300000
   280                           ;	PLL Prescaler Selection bits
   281                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   282                           ;	System Clock Postscaler Selection bits
   283                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   284                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   285                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   286   300000                     	org	3145728
   287   300000  00                 	db	0
   288                           
   289                           ;Config register CONFIG1H @ 0x300001
   290                           ;	Oscillator Selection bits
   291                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   292                           ;	Fail-Safe Clock Monitor Enable bit
   293                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   294                           ;	Internal/External Oscillator Switchover bit
   295                           ;	IESO = OFF, Oscillator Switchover mode disabled
   296   300001                     	org	3145729
   297   300001  0B                 	db	11
   298                           
   299                           ;Config register CONFIG2L @ 0x300002
   300                           ;	Power-up Timer Enable bit
   301                           ;	PWRT = OFF, PWRT disabled
   302                           ;	Brown-out Reset Enable bits
   303                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   304                           ;	Brown-out Reset Voltage bits
   305                           ;	BORV = 3, Minimum setting 2.05V
   306                           ;	USB Voltage Regulator Enable bit
   307                           ;	VREGEN = OFF, USB voltage regulator disabled
   308   300002                     	org	3145730
   309   300002  19                 	db	25
   310                           
   311                           ;Config register CONFIG2H @ 0x300003
   312                           ;	Watchdog Timer Enable bit
   313                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   314                           ;	Watchdog Timer Postscale Select bits
   315                           ;	WDTPS = 32768, 1:32768
   316   300003                     	org	3145731
   317   300003  1E                 	db	30
   318                           
   319                           ; Padding undefined space
   320   300004                     	org	3145732
   321   300004  FF                 	db	255
   322                           
   323                           ;Config register CONFIG3H @ 0x300005
   324                           ;	CCP2 MUX bit
   325                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   326                           ;	PORTB A/D Enable bit
   327                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   328                           ;	Low-Power Timer 1 Oscillator Enable bit
   329                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   330                           ;	MCLR Pin Enable bit
   331                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   332   300005                     	org	3145733
   333   300005  83                 	db	131
   334                           
   335                           ;Config register CONFIG4L @ 0x300006
   336                           ;	Stack Full/Underflow Reset Enable bit
   337                           ;	STVREN = ON, Stack full/underflow will cause Reset
   338                           ;	Single-Supply ICSP Enable bit
   339                           ;	LVP = OFF, Single-Supply ICSP disabled
   340                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   341                           ;	ICPRT = OFF, ICPORT disabled
   342                           ;	Extended Instruction Set Enable bit
   343                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   344                           ;	Background Debugger Enable bit
   345                           ;	DEBUG = 0x1, unprogrammed default
   346   300006                     	org	3145734
   347   300006  81                 	db	129
   348                           
   349                           ; Padding undefined space
   350   300007                     	org	3145735
   351   300007  FF                 	db	255
   352                           
   353                           ;Config register CONFIG5L @ 0x300008
   354                           ;	Code Protection bit
   355                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   356                           ;	Code Protection bit
   357                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   358                           ;	Code Protection bit
   359                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   360                           ;	Code Protection bit
   361                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   362   300008                     	org	3145736
   363   300008  0F                 	db	15
   364                           
   365                           ;Config register CONFIG5H @ 0x300009
   366                           ;	Boot Block Code Protection bit
   367                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   368                           ;	Data EEPROM Code Protection bit
   369                           ;	CPD = OFF, Data EEPROM is not code-protected
   370   300009                     	org	3145737
   371   300009  C0                 	db	192
   372                           
   373                           ;Config register CONFIG6L @ 0x30000A
   374                           ;	Write Protection bit
   375                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   376                           ;	Write Protection bit
   377                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   378                           ;	Write Protection bit
   379                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   380                           ;	Write Protection bit
   381                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   382   30000A                     	org	3145738
   383   30000A  0F                 	db	15
   384                           
   385                           ;Config register CONFIG6H @ 0x30000B
   386                           ;	Configuration Register Write Protection bit
   387                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   388                           ;	Boot Block Write Protection bit
   389                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   390                           ;	Data EEPROM Write Protection bit
   391                           ;	WRTD = OFF, Data EEPROM is not write-protected
   392   30000B                     	org	3145739
   393   30000B  E0                 	db	224
   394                           
   395                           ;Config register CONFIG7L @ 0x30000C
   396                           ;	Table Read Protection bit
   397                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   398                           ;	Table Read Protection bit
   399                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   400                           ;	Table Read Protection bit
   401                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   402                           ;	Table Read Protection bit
   403                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   404   30000C                     	org	3145740
   405   30000C  0F                 	db	15
   406                           
   407                           ;Config register CONFIG7H @ 0x30000D
   408                           ;	Boot Block Table Read Protection bit
   409                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   410   30000D                     	org	3145741
   411   30000D  40                 	db	64
   412                           tosu	equ	0xFFF
   413                           tosh	equ	0xFFE
   414                           tosl	equ	0xFFD
   415                           stkptr	equ	0xFFC
   416                           pclatu	equ	0xFFB
   417                           pclath	equ	0xFFA
   418                           pcl	equ	0xFF9
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           prodh	equ	0xFF4
   424                           prodl	equ	0xFF3
   425                           indf0	equ	0xFEF
   426                           postinc0	equ	0xFEE
   427                           postdec0	equ	0xFED
   428                           preinc0	equ	0xFEC
   429                           plusw0	equ	0xFEB
   430                           fsr0h	equ	0xFEA
   431                           fsr0l	equ	0xFE9
   432                           wreg	equ	0xFE8
   433                           indf1	equ	0xFE7
   434                           postinc1	equ	0xFE6
   435                           postdec1	equ	0xFE5
   436                           preinc1	equ	0xFE4
   437                           plusw1	equ	0xFE3
   438                           fsr1h	equ	0xFE2
   439                           fsr1l	equ	0xFE1
   440                           bsr	equ	0xFE0
   441                           indf2	equ	0xFDF
   442                           postinc2	equ	0xFDE
   443                           postdec2	equ	0xFDD
   444                           preinc2	equ	0xFDC
   445                           plusw2	equ	0xFDB
   446                           fsr2h	equ	0xFDA
   447                           fsr2l	equ	0xFD9
   448                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Counter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Conf_Reg
                            _Counter
 ---------------------------------------------------------------------------------
 (1) _Counter                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Conf_Reg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conf_Reg
   _Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllh        2A      0       0      22        0.0%
BITBIGSFRlllll      21      0       0      26        0.0%
BITBIGSFRlh         11      0       0      21        0.0%
BITBIGSFRllllhl      A      0       0      25        0.0%
BITBIGSFRllllhh      6      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      27        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 15 01:05:34 2023

                     l35 7FCE                       l39 7FFE                       u10 7FDE  
                     u11 7FDA                       u27 7FE8                      l721 7FF6  
                    l715 7FBA                      l723 7FFA                      l717 7FD0  
                    l725 7FAA                      l719 7FDE                      l727 7FAE  
                    wreg 0FE8                     _LATD 0F8C                     _main 7FAA  
                   start 0000             ___param_bank 0000          __end_of_Counter 8000  
                  ?_main 0005                    _TRISB 0F93                    _TRISD 0F95  
                  _TRISE 0F96         __end_of_Conf_Reg 7FD0          __initialization 7F9C  
           __end_of_main 7FBA                   ??_main 0007            __activetblptr 0000  
                 _ADCON1 0FC1                   _OSCCON 0FD3                ??_Counter 0005  
                 isa$std 0001               __accesstop 0060  __end_of__initialization 7FA4  
          ___rparam_used 0001           __pcstackCOMRAM 0005                ?_Conf_Reg 0005  
             ??_Conf_Reg 0005                  _Counter 7FD0                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F9C                  __ramtop 0800  
                __ptext0 7FAA                  __ptext1 7FD0                  __ptext2 7FBA  
   end_of_initialization 7FA4                _PORTBbits 0F81      start_initialization 7F9C  
            __pbssCOMRAM 0001                 ?_Counter 0005                 _Conf_Reg 7FBA  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
      _Counter_Pull_Down 0003          _Counter_Pull_Up 0001  
