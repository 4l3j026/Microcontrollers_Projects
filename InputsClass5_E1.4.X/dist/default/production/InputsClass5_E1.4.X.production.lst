

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 18 21:07:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _PORTBbits	set	3969
    50   000000                     _TRISB	set	3987
    51   000000                     _TRISD	set	3989
    52   000000                     _ADCON1	set	4033
    53   000000                     _OSCCON	set	4051
    54   000000                     _TRISE	set	3990
    55   000000                     _LATBbits	set	3978
    56   000000                     _LATD	set	3980
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   007F0E                     __pcinit:
    62                           	callstack 0
    63   007F0E                     start_initialization:
    64                           	callstack 0
    65   007F0E                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (6 bytes)
    69   007F0E  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    70   007F10  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    71   007F12  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    72   007F14  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    73   007F16  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74   007F18  6A01               	clrf	__pbssCOMRAM& (0+255),c
    75   007F1A                     end_of_initialization:
    76                           	callstack 0
    77   007F1A                     __end_of__initialization:
    78                           	callstack 0
    79   007F1A  0100               	movlb	0
    80   007F1C  EF7F  F03F         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssCOMRAM
    83   000001                     __pbssCOMRAM:
    84                           	callstack 0
    85   000001                     _State:
    86                           	callstack 0
    87   000001                     	ds	2
    88   000003                     _Counter_Pull_Up:
    89                           	callstack 0
    90   000003                     	ds	2
    91   000005                     _Counter_Pull_Down:
    92                           	callstack 0
    93   000005                     	ds	2
    94                           
    95                           	psect	cstackCOMRAM
    96   000007                     __pcstackCOMRAM:
    97                           	callstack 0
    98   000007                     ??_Counter:
    99   000007                     
   100                           ; 1 bytes @ 0x0
   101   000007                     	ds	2
   102   000009                     
   103                           ; 1 bytes @ 0x2
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 26 in file "main.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   123 ;;      Params:         0       0       0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0       0       0
   126 ;;      Totals:         0       0       0       0       0       0       0       0       0
   127 ;;Total ram usage:        0 bytes
   128 ;; Hardware stack levels required when called: 1
   129 ;; This function calls:
   130 ;;		_Conf_Reg
   131 ;;		_Counter
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138   007EFE                     __ptext0:
   139                           	callstack 0
   140   007EFE                     _main:
   141                           	callstack 30
   142   007EFE                     
   143                           ;main.c: 29:     Conf_Reg();
   144   007EFE  EC90  F03F         	call	_Conf_Reg	;wreg free
   145   007F02                     l751:
   146                           
   147                           ;main.c: 33:         Counter();
   148   007F02  EC9B  F03F         	call	_Counter	;wreg free
   149   007F06  EF81  F03F         	goto	l751
   150   007F0A  EF00  F000         	goto	start
   151   007F0E                     __end_of_main:
   152                           	callstack 0
   153                           
   154 ;; *************** function _Counter *****************
   155 ;; Defined at:
   156 ;;		line 55 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0
   172 ;;      Temps:          2       0       0       0       0       0       0       0       0
   173 ;;      Totals:         2       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        2 bytes
   175 ;; Hardware stack levels used: 1
   176 ;; This function calls:
   177 ;;		Nothing
   178 ;; This function is called by:
   179 ;;		_main
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text1
   184   007F36                     __ptext1:
   185                           	callstack 0
   186   007F36                     _Counter:
   187                           	callstack 30
   188   007F36                     
   189                           ;main.c: 57:     if (!PORTBbits.RB0) {
   190   007F36  B081               	btfsc	129,0,c	;volatile
   191   007F38  EFA0  F03F         	goto	u11
   192   007F3C  EFA2  F03F         	goto	u10
   193   007F40                     u11:
   194   007F40  EFCE  F03F         	goto	l42
   195   007F44                     u10:
   196   007F44                     
   197                           ;main.c: 59:         _delay((unsigned long)((100)*(8000000/4000.0)));
   198   007F44  0E02               	movlw	2
   199   007F46  6E08               	movwf	(??_Counter+1)^0,c
   200   007F48  0E04               	movlw	4
   201   007F4A  6E07               	movwf	??_Counter^0,c
   202   007F4C  0EBA               	movlw	186
   203   007F4E                     u97:
   204   007F4E  2EE8               	decfsz	wreg,f,c
   205   007F50  D7FE               	bra	u97
   206   007F52  2E07               	decfsz	??_Counter^0,f,c
   207   007F54  D7FC               	bra	u97
   208   007F56  2E08               	decfsz	(??_Counter+1)^0,f,c
   209   007F58  D7FA               	bra	u97
   210   007F5A  D000               	nop2	
   211   007F5C                     
   212                           ;main.c: 60:         Counter_Pull_Down++;
   213   007F5C  4A05               	infsnz	_Counter_Pull_Down^0,f,c
   214   007F5E  2A06               	incf	(_Counter_Pull_Down+1)^0,f,c
   215   007F60                     
   216                           ;main.c: 61:         State = Counter_Pull_Down;
   217   007F60  C005  F001         	movff	_Counter_Pull_Down,_State
   218   007F64  C006  F002         	movff	_Counter_Pull_Down+1,_State+1
   219   007F68                     
   220                           ;main.c: 62:         LATD = State;
   221   007F68  C001  FF8C         	movff	_State,3980	;volatile
   222   007F6C                     l43:
   223   007F6C  A081               	btfss	129,0,c	;volatile
   224   007F6E  EFBB  F03F         	goto	u21
   225   007F72  EFBD  F03F         	goto	u20
   226   007F76                     u21:
   227   007F76  EFB6  F03F         	goto	l43
   228   007F7A                     u20:
   229   007F7A                     
   230                           ;main.c: 64:         LATBbits.LATB0 = !LATBbits.LATB0;
   231   007F7A  A08A               	btfss	138,0,c	;volatile
   232   007F7C  EFC2  F03F         	goto	u31
   233   007F80  EFC6  F03F         	goto	u30
   234   007F84                     u31:
   235   007F84  6A07               	clrf	??_Counter^0,c
   236   007F86  2A07               	incf	??_Counter^0,f,c
   237   007F88  EFC7  F03F         	goto	u48
   238   007F8C                     u30:
   239   007F8C  6A07               	clrf	??_Counter^0,c
   240   007F8E                     u48:
   241   007F8E  508A               	movf	138,w,c	;volatile
   242   007F90  1807               	xorwf	??_Counter^0,w,c
   243   007F92  0BFE               	andlw	-2
   244   007F94  1807               	xorwf	??_Counter^0,w,c
   245   007F96  6E8A               	movwf	138,c	;volatile
   246                           
   247                           ;main.c: 66:     } else if (PORTBbits.RB1) {
   248   007F98  EFFF  F03F         	goto	l51
   249   007F9C                     l42:
   250   007F9C  A281               	btfss	129,1,c	;volatile
   251   007F9E  EFD3  F03F         	goto	u51
   252   007FA2  EFD5  F03F         	goto	u50
   253   007FA6                     u51:
   254   007FA6  EFFF  F03F         	goto	l51
   255   007FAA                     u50:
   256   007FAA                     
   257                           ;main.c: 68:         _delay((unsigned long)((100)*(8000000/4000.0)));
   258   007FAA  0E02               	movlw	2
   259   007FAC  6E08               	movwf	(??_Counter+1)^0,c
   260   007FAE  0E04               	movlw	4
   261   007FB0  6E07               	movwf	??_Counter^0,c
   262   007FB2  0EBA               	movlw	186
   263   007FB4                     u107:
   264   007FB4  2EE8               	decfsz	wreg,f,c
   265   007FB6  D7FE               	bra	u107
   266   007FB8  2E07               	decfsz	??_Counter^0,f,c
   267   007FBA  D7FC               	bra	u107
   268   007FBC  2E08               	decfsz	(??_Counter+1)^0,f,c
   269   007FBE  D7FA               	bra	u107
   270   007FC0  D000               	nop2	
   271   007FC2                     
   272                           ;main.c: 69:         Counter_Pull_Up++;
   273   007FC2  4A03               	infsnz	_Counter_Pull_Up^0,f,c
   274   007FC4  2A04               	incf	(_Counter_Pull_Up+1)^0,f,c
   275                           
   276                           ;main.c: 70:         LATD = (Counter_Pull_Down - Counter_Pull_Up);
   277   007FC6  5003               	movf	_Counter_Pull_Up^0,w,c
   278   007FC8  5C05               	subwf	_Counter_Pull_Down^0,w,c
   279   007FCA  6E8C               	movwf	140,c	;volatile
   280                           
   281                           ;main.c: 71:         while (PORTBbits.RB1) {
   282   007FCC  EFF8  F03F         	goto	l747
   283   007FD0                     l745:
   284                           
   285                           ;main.c: 72:             LATBbits.LB1 = !LATBbits.LB1;
   286   007FD0  A28A               	btfss	138,1,c	;volatile
   287   007FD2  EFED  F03F         	goto	u61
   288   007FD6  EFF1  F03F         	goto	u60
   289   007FDA                     u61:
   290   007FDA  6A07               	clrf	??_Counter^0,c
   291   007FDC  2A07               	incf	??_Counter^0,f,c
   292   007FDE  EFF2  F03F         	goto	u78
   293   007FE2                     u60:
   294   007FE2  6A07               	clrf	??_Counter^0,c
   295   007FE4                     u78:
   296   007FE4  4607               	rlncf	??_Counter^0,f,c
   297   007FE6  508A               	movf	138,w,c	;volatile
   298   007FE8  1807               	xorwf	??_Counter^0,w,c
   299   007FEA  0BFD               	andlw	-3
   300   007FEC  1807               	xorwf	??_Counter^0,w,c
   301   007FEE  6E8A               	movwf	138,c	;volatile
   302   007FF0                     l747:
   303                           
   304                           ;main.c: 71:         while (PORTBbits.RB1) {
   305   007FF0  B281               	btfsc	129,1,c	;volatile
   306   007FF2  EFFD  F03F         	goto	u81
   307   007FF6  EFFF  F03F         	goto	u80
   308   007FFA                     u81:
   309   007FFA  EFE8  F03F         	goto	l745
   310   007FFE                     u80:
   311   007FFE                     l51:
   312   007FFE  0012               	return		;funcret
   313   008000                     __end_of_Counter:
   314                           	callstack 0
   315                           
   316 ;; *************** function _Conf_Reg *****************
   317 ;; Defined at:
   318 ;;		line 41 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346   007F20                     __ptext2:
   347                           	callstack 0
   348   007F20                     _Conf_Reg:
   349                           	callstack 30
   350   007F20                     
   351                           ;main.c: 43:     OSCCON = 0x72;
   352   007F20  0E72               	movlw	114
   353   007F22  6ED3               	movwf	211,c	;volatile
   354                           
   355                           ;main.c: 44:     ADCON1 = 0x0F;
   356   007F24  0E0F               	movlw	15
   357   007F26  6EC1               	movwf	193,c	;volatile
   358                           
   359                           ;main.c: 46:     TRISD = 0x00;
   360   007F28  0E00               	movlw	0
   361   007F2A  6E95               	movwf	149,c	;volatile
   362                           
   363                           ;main.c: 47:     TRISE = 0x00;
   364   007F2C  0E00               	movlw	0
   365   007F2E  6E96               	movwf	150,c	;volatile
   366                           
   367                           ;main.c: 49:     TRISB = 0x03;
   368   007F30  0E03               	movlw	3
   369   007F32  6E93               	movwf	147,c	;volatile
   370   007F34  0012               	return		;funcret
   371   007F36                     __end_of_Conf_Reg:
   372                           	callstack 0
   373   000000                     
   374                           	psect	rparam
   375   000000                     
   376                           	psect	config
   377                           
   378                           ;Config register CONFIG1L @ 0x300000
   379                           ;	PLL Prescaler Selection bits
   380                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   381                           ;	System Clock Postscaler Selection bits
   382                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   383                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   384                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   385   300000                     	org	3145728
   386   300000  00                 	db	0
   387                           
   388                           ;Config register CONFIG1H @ 0x300001
   389                           ;	Oscillator Selection bits
   390                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   391                           ;	Fail-Safe Clock Monitor Enable bit
   392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   393                           ;	Internal/External Oscillator Switchover bit
   394                           ;	IESO = OFF, Oscillator Switchover mode disabled
   395   300001                     	org	3145729
   396   300001  0B                 	db	11
   397                           
   398                           ;Config register CONFIG2L @ 0x300002
   399                           ;	Power-up Timer Enable bit
   400                           ;	PWRT = OFF, PWRT disabled
   401                           ;	Brown-out Reset Enable bits
   402                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   403                           ;	Brown-out Reset Voltage bits
   404                           ;	BORV = 3, Minimum setting 2.05V
   405                           ;	USB Voltage Regulator Enable bit
   406                           ;	VREGEN = OFF, USB voltage regulator disabled
   407   300002                     	org	3145730
   408   300002  19                 	db	25
   409                           
   410                           ;Config register CONFIG2H @ 0x300003
   411                           ;	Watchdog Timer Enable bit
   412                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   413                           ;	Watchdog Timer Postscale Select bits
   414                           ;	WDTPS = 32768, 1:32768
   415   300003                     	org	3145731
   416   300003  1E                 	db	30
   417                           
   418                           ; Padding undefined space
   419   300004                     	org	3145732
   420   300004  FF                 	db	255
   421                           
   422                           ;Config register CONFIG3H @ 0x300005
   423                           ;	CCP2 MUX bit
   424                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   425                           ;	PORTB A/D Enable bit
   426                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   427                           ;	Low-Power Timer 1 Oscillator Enable bit
   428                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   429                           ;	MCLR Pin Enable bit
   430                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   431   300005                     	org	3145733
   432   300005  83                 	db	131
   433                           
   434                           ;Config register CONFIG4L @ 0x300006
   435                           ;	Stack Full/Underflow Reset Enable bit
   436                           ;	STVREN = ON, Stack full/underflow will cause Reset
   437                           ;	Single-Supply ICSP Enable bit
   438                           ;	LVP = OFF, Single-Supply ICSP disabled
   439                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   440                           ;	ICPRT = OFF, ICPORT disabled
   441                           ;	Extended Instruction Set Enable bit
   442                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   443                           ;	Background Debugger Enable bit
   444                           ;	DEBUG = 0x1, unprogrammed default
   445   300006                     	org	3145734
   446   300006  81                 	db	129
   447                           
   448                           ; Padding undefined space
   449   300007                     	org	3145735
   450   300007  FF                 	db	255
   451                           
   452                           ;Config register CONFIG5L @ 0x300008
   453                           ;	Code Protection bit
   454                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   455                           ;	Code Protection bit
   456                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   457                           ;	Code Protection bit
   458                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   459                           ;	Code Protection bit
   460                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   461   300008                     	org	3145736
   462   300008  0F                 	db	15
   463                           
   464                           ;Config register CONFIG5H @ 0x300009
   465                           ;	Boot Block Code Protection bit
   466                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   467                           ;	Data EEPROM Code Protection bit
   468                           ;	CPD = OFF, Data EEPROM is not code-protected
   469   300009                     	org	3145737
   470   300009  C0                 	db	192
   471                           
   472                           ;Config register CONFIG6L @ 0x30000A
   473                           ;	Write Protection bit
   474                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   475                           ;	Write Protection bit
   476                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   477                           ;	Write Protection bit
   478                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   479                           ;	Write Protection bit
   480                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   481   30000A                     	org	3145738
   482   30000A  0F                 	db	15
   483                           
   484                           ;Config register CONFIG6H @ 0x30000B
   485                           ;	Configuration Register Write Protection bit
   486                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   487                           ;	Boot Block Write Protection bit
   488                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   489                           ;	Data EEPROM Write Protection bit
   490                           ;	WRTD = OFF, Data EEPROM is not write-protected
   491   30000B                     	org	3145739
   492   30000B  E0                 	db	224
   493                           
   494                           ;Config register CONFIG7L @ 0x30000C
   495                           ;	Table Read Protection bit
   496                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   497                           ;	Table Read Protection bit
   498                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   499                           ;	Table Read Protection bit
   500                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   501                           ;	Table Read Protection bit
   502                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   503   30000C                     	org	3145740
   504   30000C  0F                 	db	15
   505                           
   506                           ;Config register CONFIG7H @ 0x30000D
   507                           ;	Boot Block Table Read Protection bit
   508                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   509   30000D                     	org	3145741
   510   30000D  40                 	db	64
   511                           tosu	equ	0xFFF
   512                           tosh	equ	0xFFE
   513                           tosl	equ	0xFFD
   514                           stkptr	equ	0xFFC
   515                           pclatu	equ	0xFFB
   516                           pclath	equ	0xFFA
   517                           pcl	equ	0xFF9
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           prodh	equ	0xFF4
   523                           prodl	equ	0xFF3
   524                           indf0	equ	0xFEF
   525                           postinc0	equ	0xFEE
   526                           postdec0	equ	0xFED
   527                           preinc0	equ	0xFEC
   528                           plusw0	equ	0xFEB
   529                           fsr0h	equ	0xFEA
   530                           fsr0l	equ	0xFE9
   531                           wreg	equ	0xFE8
   532                           indf1	equ	0xFE7
   533                           postinc1	equ	0xFE6
   534                           postdec1	equ	0xFE5
   535                           preinc1	equ	0xFE4
   536                           plusw1	equ	0xFE3
   537                           fsr1h	equ	0xFE2
   538                           fsr1l	equ	0xFE1
   539                           bsr	equ	0xFE0
   540                           indf2	equ	0xFDF
   541                           postinc2	equ	0xFDE
   542                           postdec2	equ	0xFDD
   543                           preinc2	equ	0xFDC
   544                           plusw2	equ	0xFDB
   545                           fsr2h	equ	0xFDA
   546                           fsr2l	equ	0xFD9
   547                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Counter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Conf_Reg
                            _Counter
 ---------------------------------------------------------------------------------
 (1) _Counter                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Conf_Reg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conf_Reg
   _Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       8       1        8.4%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllh        2A      0       0      22        0.0%
BITBIGSFRlllll      21      0       0      27        0.0%
BITBIGSFRlh         11      0       0      21        0.0%
BITBIGSFRllllhl      8      0       0      26        0.0%
BITBIGSFRllllhh      6      0       0      24        0.0%
BITBIGSFRllllhl      1      0       0      25        0.0%
BITBIGSFRlllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      28        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 18 21:07:42 2023

                     l42 7F9C                       l51 7FFE                       l43 7F6C  
                     l39 7F34                       u10 7F44                       u11 7F40  
                     u20 7F7A                       u21 7F76                       u30 7F8C  
                     u31 7F84                       u50 7FAA                       u51 7FA6  
                     u60 7FE2                       u61 7FDA                       u80 7FFE  
                     u48 7F8E                       u81 7FFA                       u78 7FE4  
                     u97 7F4E                      l731 7F44                      l741 7FAA  
                    l733 7F5C                      l727 7F20                      l743 7FC2  
                    l735 7F60                      l751 7F02                      l745 7FD0  
                    l737 7F68                      l729 7F36                      l747 7FF0  
                    l739 7F7A                      l749 7EFE                      u107 7FB4  
                    wreg 0FE8                     _LATD 0F8C                     _main 7EFE  
                   start 0000             ___param_bank 0000          __end_of_Counter 8000  
                  ?_main 0007                    _TRISB 0F93                    _TRISD 0F95  
                  _TRISE 0F96                    _State 0001         __end_of_Conf_Reg 7F36  
        __initialization 7F0E             __end_of_main 7F0E                   ??_main 0009  
          __activetblptr 0000                   _ADCON1 0FC1                   _OSCCON 0FD3  
              ??_Counter 0007                   isa$std 0001               __accesstop 0060  
__end_of__initialization 7F1A            ___rparam_used 0001           __pcstackCOMRAM 0007  
              ?_Conf_Reg 0007               ??_Conf_Reg 0007                  _Counter 7F36  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F0E  
                __ramtop 0800                  __ptext0 7EFE                  __ptext1 7F36  
                __ptext2 7F20     end_of_initialization 7F1A                _PORTBbits 0F81  
    start_initialization 7F0E              __pbssCOMRAM 0001                 ?_Counter 0007  
               _LATBbits 0F8A                 _Conf_Reg 7F20                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000        _Counter_Pull_Down 0005  
        _Counter_Pull_Up 0003  
