

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 18 20:16:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _PORTBbits	set	3969
    50   000000                     _TRISB	set	3987
    51   000000                     _TRISD	set	3989
    52   000000                     _ADCON1	set	4033
    53   000000                     _OSCCON	set	4051
    54   000000                     _TRISE	set	3990
    55   000000                     _LATBbits	set	3978
    56   000000                     _LATD	set	3980
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   007F70                     __pcinit:
    62                           	callstack 0
    63   007F70                     start_initialization:
    64                           	callstack 0
    65   007F70                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (4 bytes)
    69   007F70  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    70   007F72  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    71   007F74  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    72   007F76  6A01               	clrf	__pbssCOMRAM& (0+255),c
    73   007F78                     end_of_initialization:
    74                           	callstack 0
    75   007F78                     __end_of__initialization:
    76                           	callstack 0
    77   007F78  0100               	movlb	0
    78   007F7A  EFBF  F03F         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81   000001                     __pbssCOMRAM:
    82                           	callstack 0
    83   000001                     _Counter_Pull_Up:
    84                           	callstack 0
    85   000001                     	ds	2
    86   000003                     _Counter_Pull_Down:
    87                           	callstack 0
    88   000003                     	ds	2
    89                           
    90                           	psect	cstackCOMRAM
    91   000005                     __pcstackCOMRAM:
    92                           	callstack 0
    93   000005                     ??_Counter:
    94   000005                     
    95                           ; 1 bytes @ 0x0
    96   000005                     	ds	2
    97   000007                     
    98                           ; 1 bytes @ 0x2
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 25 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, status,0, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called: 1
   124 ;; This function calls:
   125 ;;		_Conf_Reg
   126 ;;		_Counter
   127 ;; This function is called by:
   128 ;;		Startup code after reset
   129 ;; This function uses a non-reentrant model
   130 ;;
   131                           
   132                           	psect	text0
   133   007F7E                     __ptext0:
   134                           	callstack 0
   135   007F7E                     _main:
   136                           	callstack 30
   137   007F7E                     
   138                           ;main.c: 28:     Conf_Reg();
   139   007F7E  ECC7  F03F         	call	_Conf_Reg	;wreg free
   140   007F82                     l734:
   141                           
   142                           ;main.c: 32:         Counter();
   143   007F82  ECD2  F03F         	call	_Counter	;wreg free
   144   007F86  EFC1  F03F         	goto	l734
   145   007F8A  EF00  F000         	goto	start
   146   007F8E                     __end_of_main:
   147                           	callstack 0
   148                           
   149 ;; *************** function _Counter *****************
   150 ;; Defined at:
   151 ;;		line 54 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2, status,0
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0
   167 ;;      Temps:          2       0       0       0       0       0       0       0       0
   168 ;;      Totals:         2       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        2 bytes
   170 ;; Hardware stack levels used: 1
   171 ;; This function calls:
   172 ;;		Nothing
   173 ;; This function is called by:
   174 ;;		_main
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text1
   179   007FA4                     __ptext1:
   180                           	callstack 0
   181   007FA4                     _Counter:
   182                           	callstack 30
   183   007FA4                     
   184                           ;main.c: 56:     if (!PORTBbits.RB0) {
   185   007FA4  B081               	btfsc	129,0,c	;volatile
   186   007FA6  EFD7  F03F         	goto	u11
   187   007FAA  EFD9  F03F         	goto	u10
   188   007FAE                     u11:
   189   007FAE  EFFF  F03F         	goto	l44
   190   007FB2                     u10:
   191   007FB2                     
   192                           ;main.c: 58:         _delay((unsigned long)((100)*(8000000/4000.0)));
   193   007FB2  0E02               	movlw	2
   194   007FB4  6E06               	movwf	(??_Counter+1)^0,c
   195   007FB6  0E04               	movlw	4
   196   007FB8  6E05               	movwf	??_Counter^0,c
   197   007FBA  0EBA               	movlw	186
   198   007FBC                     u57:
   199   007FBC  2EE8               	decfsz	wreg,f,c
   200   007FBE  D7FE               	bra	u57
   201   007FC0  2E05               	decfsz	??_Counter^0,f,c
   202   007FC2  D7FC               	bra	u57
   203   007FC4  2E06               	decfsz	(??_Counter+1)^0,f,c
   204   007FC6  D7FA               	bra	u57
   205   007FC8  D000               	nop2	
   206   007FCA                     
   207                           ;main.c: 59:         Counter_Pull_Down++;
   208   007FCA  4A03               	infsnz	_Counter_Pull_Down^0,f,c
   209   007FCC  2A04               	incf	(_Counter_Pull_Down+1)^0,f,c
   210   007FCE                     
   211                           ;main.c: 60:         LATD = Counter_Pull_Down;
   212   007FCE  C003  FF8C         	movff	_Counter_Pull_Down,3980	;volatile
   213   007FD2                     l41:
   214   007FD2  A081               	btfss	129,0,c	;volatile
   215   007FD4  EFEE  F03F         	goto	u21
   216   007FD8  EFF0  F03F         	goto	u20
   217   007FDC                     u21:
   218   007FDC  EFE9  F03F         	goto	l41
   219   007FE0                     u20:
   220   007FE0                     
   221                           ;main.c: 62:         LATBbits.LATB0 = !LATBbits.LATB0;
   222   007FE0  A08A               	btfss	138,0,c	;volatile
   223   007FE2  EFF5  F03F         	goto	u31
   224   007FE6  EFF9  F03F         	goto	u30
   225   007FEA                     u31:
   226   007FEA  6A05               	clrf	??_Counter^0,c
   227   007FEC  2A05               	incf	??_Counter^0,f,c
   228   007FEE  EFFA  F03F         	goto	u48
   229   007FF2                     u30:
   230   007FF2  6A05               	clrf	??_Counter^0,c
   231   007FF4                     u48:
   232   007FF4  508A               	movf	138,w,c	;volatile
   233   007FF6  1805               	xorwf	??_Counter^0,w,c
   234   007FF8  0BFE               	andlw	-2
   235   007FFA  1805               	xorwf	??_Counter^0,w,c
   236   007FFC  6E8A               	movwf	138,c	;volatile
   237   007FFE                     l44:
   238   007FFE  0012               	return		;funcret
   239   008000                     __end_of_Counter:
   240                           	callstack 0
   241                           
   242 ;; *************** function _Conf_Reg *****************
   243 ;; Defined at:
   244 ;;		line 40 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   258 ;;      Params:         0       0       0       0       0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels used: 1
   264 ;; This function calls:
   265 ;;		Nothing
   266 ;; This function is called by:
   267 ;;		_main
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           	psect	text2
   272   007F8E                     __ptext2:
   273                           	callstack 0
   274   007F8E                     _Conf_Reg:
   275                           	callstack 30
   276   007F8E                     
   277                           ;main.c: 42:     OSCCON = 0x72;
   278   007F8E  0E72               	movlw	114
   279   007F90  6ED3               	movwf	211,c	;volatile
   280                           
   281                           ;main.c: 43:     ADCON1 = 0x0F;
   282   007F92  0E0F               	movlw	15
   283   007F94  6EC1               	movwf	193,c	;volatile
   284                           
   285                           ;main.c: 45:     TRISD = 0x00;
   286   007F96  0E00               	movlw	0
   287   007F98  6E95               	movwf	149,c	;volatile
   288                           
   289                           ;main.c: 46:     TRISE = 0x00;
   290   007F9A  0E00               	movlw	0
   291   007F9C  6E96               	movwf	150,c	;volatile
   292                           
   293                           ;main.c: 48:     TRISB = 0x03;
   294   007F9E  0E03               	movlw	3
   295   007FA0  6E93               	movwf	147,c	;volatile
   296   007FA2  0012               	return		;funcret
   297   007FA4                     __end_of_Conf_Reg:
   298                           	callstack 0
   299   000000                     
   300                           	psect	rparam
   301   000000                     
   302                           	psect	config
   303                           
   304                           ;Config register CONFIG1L @ 0x300000
   305                           ;	PLL Prescaler Selection bits
   306                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   307                           ;	System Clock Postscaler Selection bits
   308                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   309                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   310                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   311   300000                     	org	3145728
   312   300000  00                 	db	0
   313                           
   314                           ;Config register CONFIG1H @ 0x300001
   315                           ;	Oscillator Selection bits
   316                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   317                           ;	Fail-Safe Clock Monitor Enable bit
   318                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   319                           ;	Internal/External Oscillator Switchover bit
   320                           ;	IESO = OFF, Oscillator Switchover mode disabled
   321   300001                     	org	3145729
   322   300001  0B                 	db	11
   323                           
   324                           ;Config register CONFIG2L @ 0x300002
   325                           ;	Power-up Timer Enable bit
   326                           ;	PWRT = OFF, PWRT disabled
   327                           ;	Brown-out Reset Enable bits
   328                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   329                           ;	Brown-out Reset Voltage bits
   330                           ;	BORV = 3, Minimum setting 2.05V
   331                           ;	USB Voltage Regulator Enable bit
   332                           ;	VREGEN = OFF, USB voltage regulator disabled
   333   300002                     	org	3145730
   334   300002  19                 	db	25
   335                           
   336                           ;Config register CONFIG2H @ 0x300003
   337                           ;	Watchdog Timer Enable bit
   338                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   339                           ;	Watchdog Timer Postscale Select bits
   340                           ;	WDTPS = 32768, 1:32768
   341   300003                     	org	3145731
   342   300003  1E                 	db	30
   343                           
   344                           ; Padding undefined space
   345   300004                     	org	3145732
   346   300004  FF                 	db	255
   347                           
   348                           ;Config register CONFIG3H @ 0x300005
   349                           ;	CCP2 MUX bit
   350                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   351                           ;	PORTB A/D Enable bit
   352                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   353                           ;	Low-Power Timer 1 Oscillator Enable bit
   354                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   355                           ;	MCLR Pin Enable bit
   356                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   357   300005                     	org	3145733
   358   300005  83                 	db	131
   359                           
   360                           ;Config register CONFIG4L @ 0x300006
   361                           ;	Stack Full/Underflow Reset Enable bit
   362                           ;	STVREN = ON, Stack full/underflow will cause Reset
   363                           ;	Single-Supply ICSP Enable bit
   364                           ;	LVP = OFF, Single-Supply ICSP disabled
   365                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   366                           ;	ICPRT = OFF, ICPORT disabled
   367                           ;	Extended Instruction Set Enable bit
   368                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   369                           ;	Background Debugger Enable bit
   370                           ;	DEBUG = 0x1, unprogrammed default
   371   300006                     	org	3145734
   372   300006  81                 	db	129
   373                           
   374                           ; Padding undefined space
   375   300007                     	org	3145735
   376   300007  FF                 	db	255
   377                           
   378                           ;Config register CONFIG5L @ 0x300008
   379                           ;	Code Protection bit
   380                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   381                           ;	Code Protection bit
   382                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   383                           ;	Code Protection bit
   384                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   385                           ;	Code Protection bit
   386                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   387   300008                     	org	3145736
   388   300008  0F                 	db	15
   389                           
   390                           ;Config register CONFIG5H @ 0x300009
   391                           ;	Boot Block Code Protection bit
   392                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   393                           ;	Data EEPROM Code Protection bit
   394                           ;	CPD = OFF, Data EEPROM is not code-protected
   395   300009                     	org	3145737
   396   300009  C0                 	db	192
   397                           
   398                           ;Config register CONFIG6L @ 0x30000A
   399                           ;	Write Protection bit
   400                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   401                           ;	Write Protection bit
   402                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   403                           ;	Write Protection bit
   404                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   405                           ;	Write Protection bit
   406                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   407   30000A                     	org	3145738
   408   30000A  0F                 	db	15
   409                           
   410                           ;Config register CONFIG6H @ 0x30000B
   411                           ;	Configuration Register Write Protection bit
   412                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   413                           ;	Boot Block Write Protection bit
   414                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   415                           ;	Data EEPROM Write Protection bit
   416                           ;	WRTD = OFF, Data EEPROM is not write-protected
   417   30000B                     	org	3145739
   418   30000B  E0                 	db	224
   419                           
   420                           ;Config register CONFIG7L @ 0x30000C
   421                           ;	Table Read Protection bit
   422                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   423                           ;	Table Read Protection bit
   424                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   425                           ;	Table Read Protection bit
   426                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   427                           ;	Table Read Protection bit
   428                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   429   30000C                     	org	3145740
   430   30000C  0F                 	db	15
   431                           
   432                           ;Config register CONFIG7H @ 0x30000D
   433                           ;	Boot Block Table Read Protection bit
   434                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   435   30000D                     	org	3145741
   436   30000D  40                 	db	64
   437                           tosu	equ	0xFFF
   438                           tosh	equ	0xFFE
   439                           tosl	equ	0xFFD
   440                           stkptr	equ	0xFFC
   441                           pclatu	equ	0xFFB
   442                           pclath	equ	0xFFA
   443                           pcl	equ	0xFF9
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           prodh	equ	0xFF4
   449                           prodl	equ	0xFF3
   450                           indf0	equ	0xFEF
   451                           postinc0	equ	0xFEE
   452                           postdec0	equ	0xFED
   453                           preinc0	equ	0xFEC
   454                           plusw0	equ	0xFEB
   455                           fsr0h	equ	0xFEA
   456                           fsr0l	equ	0xFE9
   457                           wreg	equ	0xFE8
   458                           indf1	equ	0xFE7
   459                           postinc1	equ	0xFE6
   460                           postdec1	equ	0xFE5
   461                           preinc1	equ	0xFE4
   462                           plusw1	equ	0xFE3
   463                           fsr1h	equ	0xFE2
   464                           fsr1l	equ	0xFE1
   465                           bsr	equ	0xFE0
   466                           indf2	equ	0xFDF
   467                           postinc2	equ	0xFDE
   468                           postdec2	equ	0xFDD
   469                           preinc2	equ	0xFDC
   470                           plusw2	equ	0xFDB
   471                           fsr2h	equ	0xFDA
   472                           fsr2l	equ	0xFD9
   473                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Counter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Conf_Reg
                            _Counter
 ---------------------------------------------------------------------------------
 (1) _Counter                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Conf_Reg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conf_Reg
   _Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllh        2A      0       0      22        0.0%
BITBIGSFRlllll      21      0       0      27        0.0%
BITBIGSFRlh         11      0       0      21        0.0%
BITBIGSFRllllhl      8      0       0      26        0.0%
BITBIGSFRllllhh      6      0       0      24        0.0%
BITBIGSFRllllhl      1      0       0      25        0.0%
BITBIGSFRlllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      28        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 18 20:16:44 2023

                     l41 7FD2                       l44 7FFE                       l37 7FA2  
                     u10 7FB2                       u11 7FAE                       u20 7FE0  
                     u21 7FDC                       u30 7FF2                       u31 7FEA  
                     u48 7FF4                       u57 7FBC                      l720 7F8E  
                    l730 7FE0                      l722 7FA4                      l724 7FB2  
                    l732 7F7E                      l726 7FCA                      l734 7F82  
                    l728 7FCE                      wreg 0FE8                     _LATD 0F8C  
                   _main 7F7E                     start 0000             ___param_bank 0000  
        __end_of_Counter 8000                    ?_main 0005                    _TRISB 0F93  
                  _TRISD 0F95                    _TRISE 0F96         __end_of_Conf_Reg 7FA4  
        __initialization 7F70             __end_of_main 7F8E                   ??_main 0007  
          __activetblptr 0000                   _ADCON1 0FC1                   _OSCCON 0FD3  
              ??_Counter 0005                   isa$std 0001               __accesstop 0060  
__end_of__initialization 7F78            ___rparam_used 0001           __pcstackCOMRAM 0005  
              ?_Conf_Reg 0005               ??_Conf_Reg 0005                  _Counter 7FA4  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F70  
                __ramtop 0800                  __ptext0 7F7E                  __ptext1 7FA4  
                __ptext2 7F8E     end_of_initialization 7F78                _PORTBbits 0F81  
    start_initialization 7F70              __pbssCOMRAM 0001                 ?_Counter 0005  
               _LATBbits 0F8A                 _Conf_Reg 7F8E                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000        _Counter_Pull_Down 0003  
        _Counter_Pull_Up 0001  
