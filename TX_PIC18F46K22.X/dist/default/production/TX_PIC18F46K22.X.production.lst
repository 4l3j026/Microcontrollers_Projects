

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 07 16:12:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   00111A                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _Count0_Tens
    61   00111A  30                 	db	48
    62                           
    63                           ;initializer for _Count0_Units
    64   00111B  30                 	db	48
    65                           
    66                           ;initializer for _TX_Text_1
    67   00111C  30                 	db	48
    68   00111D  20                 	db	32
    69   00111E  49                 	db	73
    70   00111F  6E                 	db	110
    71   001120  74                 	db	116
    72   001121  20                 	db	32
    73   001122  43                 	db	67
    74   001123  6F                 	db	111
    75   001124  75                 	db	117
    76   001125  6E                 	db	110
    77   001126  74                 	db	116
    78   001127  65                 	db	101
    79   001128  72                 	db	114
    80   001129  20                 	db	32
    81   00112A  3A                 	db	58
    82   00112B  20                 	db	32
    83   00112C  00                 	db	0
    84   000000                     _ANSELBbits	set	3897
    85   000000                     _ANSELCbits	set	3898
    86   000000                     _OSCCON	set	4051
    87   000000                     _INTCON2bits	set	4081
    88   000000                     _INTCONbits	set	4082
    89   000000                     _TRISBbits	set	3987
    90   000000                     _TRISCbits	set	3988
    91   000000                     _PIE1bits	set	3997
    92   000000                     _RCONbits	set	4048
    93   000000                     _RCSTAbits	set	4011
    94   000000                     _TXSTA1bits	set	4012
    95   000000                     _SPBRG	set	4015
    96   000000                     _PIR1bits	set	3998
    97   000000                     _BAUDCON1bits	set	4024
    98   000000                     _TXREG1	set	4013
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103   0010F0                     __pcinit:
   104                           	callstack 0
   105   0010F0                     start_initialization:
   106                           	callstack 0
   107   0010F0                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Initialize objects allocated to COMRAM (19 bytes)
   111                           ; load TBLPTR registers with __pidataCOMRAM
   112   0010F0  0E1A               	movlw	low __pidataCOMRAM
   113   0010F2  6EF6               	movwf	tblptrl,c
   114   0010F4  0E11               	movlw	high __pidataCOMRAM
   115   0010F6  6EF7               	movwf	tblptrh,c
   116   0010F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   117   0010FA  6EF8               	movwf	tblptru,c
   118   0010FC  EE00  F001         	lfsr	0,__pdataCOMRAM
   119   001100  EE10 F013          	lfsr	1,19
   120   001104                     copy_data0:
   121   001104  0009               	tblrd		*+
   122   001106  CFF5 FFEE          	movff	tablat,postinc0
   123   00110A  50E5               	movf	postdec1,w,c
   124   00110C  50E1               	movf	fsr1l,w,c
   125   00110E  E1FA               	bnz	copy_data0
   126   001110                     end_of_initialization:
   127                           	callstack 0
   128   001110                     __end_of__initialization:
   129                           	callstack 0
   130   001110  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131   001112  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132   001114  0100               	movlb	0
   133   001116  EF97  F008         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	dataCOMRAM
   136   000001                     __pdataCOMRAM:
   137                           	callstack 0
   138   000001                     _Count0_Tens:
   139                           	callstack 0
   140   000001                     	ds	1
   141   000002                     _Count0_Units:
   142                           	callstack 0
   143   000002                     	ds	1
   144   000003                     _TX_Text_1:
   145                           	callstack 0
   146   000003                     	ds	17
   147                           
   148                           	psect	cstackCOMRAM
   149   000014                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000014                     ?_strlen:
   152                           	callstack 0
   153   000014                     strlen@s:
   154                           	callstack 0
   155   000014                     TX_Numbers@Tens:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159   000014                     	ds	2
   160   000016                     TX_Numbers@Units:
   161                           	callstack 0
   162   000016                     strlen@a:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x2
   166   000016                     	ds	1
   167   000017                     Counter_Message@i:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x3
   171   000017                     	ds	2
   172   000019                     ??_TX_EUSART:
   173                           
   174                           ; 1 bytes @ 0x5
   175   000019                     	ds	2
   176   00001B                     
   177                           ; 1 bytes @ 0x7
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 25 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels required when called: 4
   203 ;; This function calls:
   204 ;;		_Configuration
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text0
   211   00112E                     __ptext0:
   212                           	callstack 0
   213   00112E                     _main:
   214                           	callstack 27
   215   00112E                     
   216                           ;main.c: 28:     Configuration();
   217   00112E  EC26  F008         	call	_Configuration	;wreg free
   218   001132                     l49:
   219   001132  EF99  F008         	goto	l49
   220   001136  EF35  F000         	goto	start
   221   00113A                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _Configuration *****************
   225 ;; Defined at:
   226 ;;		line 38 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 3
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text1
   255   00104C                     __ptext1:
   256                           	callstack 0
   257   00104C                     _Configuration:
   258                           	callstack 27
   259   00104C                     
   260                           ;main.c: 40:     OSCCON = 0x72;
   261   00104C  0E72               	movlw	114
   262   00104E  6ED3               	movwf	211,c	;volatile
   263   001050                     
   264                           ;main.c: 42:     ANSELCbits.ANSC6 = 0;
   265   001050  010F               	movlb	15	; () banked
   266   001052  9D3A               	bcf	58,6,b	;volatile
   267   001054                     
   268                           ; BSR set to: 15
   269                           ;main.c: 43:     ANSELCbits.ANSC7 = 0;
   270   001054  9F3A               	bcf	58,7,b	;volatile
   271   001056                     
   272                           ; BSR set to: 15
   273                           ;main.c: 44:     ANSELBbits.ANSB0 = 0;
   274   001056  9139               	bcf	57,0,b	;volatile
   275   001058                     
   276                           ; BSR set to: 15
   277                           ;main.c: 46:     TRISBbits.RB0 = 1;
   278   001058  8093               	bsf	147,0,c	;volatile
   279   00105A                     
   280                           ; BSR set to: 15
   281                           ;main.c: 49:     INTCONbits.GIE = 1;
   282   00105A  8EF2               	bsf	242,7,c	;volatile
   283   00105C                     
   284                           ; BSR set to: 15
   285                           ;main.c: 50:     RCONbits.IPEN = 0;
   286   00105C  9ED0               	bcf	208,7,c	;volatile
   287   00105E                     
   288                           ; BSR set to: 15
   289                           ;main.c: 51:     INTCONbits.PEIE = 1;
   290   00105E  8CF2               	bsf	242,6,c	;volatile
   291   001060                     
   292                           ; BSR set to: 15
   293                           ;main.c: 52:     PIE1bits.RC1IE = 1;
   294   001060  8A9D               	bsf	157,5,c	;volatile
   295   001062                     
   296                           ; BSR set to: 15
   297                           ;main.c: 53:     PIE1bits.TX1IE = 1;
   298   001062  889D               	bsf	157,4,c	;volatile
   299   001064                     
   300                           ; BSR set to: 15
   301                           ;main.c: 54:     PIR1bits.TX1IF = 0;
   302   001064  989E               	bcf	158,4,c	;volatile
   303   001066                     
   304                           ; BSR set to: 15
   305                           ;main.c: 55:     PIR1bits.RC1IF = 0;
   306   001066  9A9E               	bcf	158,5,c	;volatile
   307   001068                     
   308                           ; BSR set to: 15
   309                           ;main.c: 56:     INTCONbits.INT0E = 1;
   310   001068  88F2               	bsf	242,4,c	;volatile
   311   00106A                     
   312                           ; BSR set to: 15
   313                           ;main.c: 57:     INTCONbits.INT0F = 0;
   314   00106A  92F2               	bcf	242,1,c	;volatile
   315   00106C                     
   316                           ; BSR set to: 15
   317                           ;main.c: 58:     INTCON2bits.INTEDG0 = 0;
   318   00106C  9CF1               	bcf	241,6,c	;volatile
   319                           
   320                           ;main.c: 61:     SPBRG = 103;
   321   00106E  0E67               	movlw	103
   322   001070  6EAF               	movwf	175,c	;volatile
   323   001072                     
   324                           ; BSR set to: 15
   325                           ;main.c: 62:     TRISCbits.RC6 = 1;
   326   001072  8C94               	bsf	148,6,c	;volatile
   327   001074                     
   328                           ; BSR set to: 15
   329                           ;main.c: 63:     TRISCbits.RC7 = 1;
   330   001074  8E94               	bsf	148,7,c	;volatile
   331   001076                     
   332                           ; BSR set to: 15
   333                           ;main.c: 66:     TXSTA1bits.TX91 = 0;
   334   001076  9CAC               	bcf	172,6,c	;volatile
   335   001078                     
   336                           ; BSR set to: 15
   337                           ;main.c: 67:     TXSTA1bits.TXEN1 = 1;
   338   001078  8AAC               	bsf	172,5,c	;volatile
   339   00107A                     
   340                           ; BSR set to: 15
   341                           ;main.c: 68:     TXSTA1bits.SYNC1 = 0;
   342   00107A  98AC               	bcf	172,4,c	;volatile
   343   00107C                     
   344                           ; BSR set to: 15
   345                           ;main.c: 69:     TXSTA1bits.BRGH1 = 1;
   346   00107C  84AC               	bsf	172,2,c	;volatile
   347   00107E                     
   348                           ; BSR set to: 15
   349                           ;main.c: 72:     RCSTAbits.SPEN1 = 1;
   350   00107E  8EAB               	bsf	171,7,c	;volatile
   351   001080                     
   352                           ; BSR set to: 15
   353                           ;main.c: 73:     RCSTAbits.RX91 = 0;
   354   001080  9CAB               	bcf	171,6,c	;volatile
   355   001082                     
   356                           ; BSR set to: 15
   357                           ;main.c: 74:     RCSTAbits.CREN1 = 1;
   358   001082  88AB               	bsf	171,4,c	;volatile
   359   001084                     
   360                           ; BSR set to: 15
   361                           ;main.c: 77:     BAUDCON1bits.BRG16 = 0;
   362   001084  96B8               	bcf	184,3,c	;volatile
   363   001086                     
   364                           ; BSR set to: 15
   365   001086  0012               	return		;funcret
   366   001088                     __end_of_Configuration:
   367                           	callstack 0
   368                           
   369 ;; *************** function _TX_EUSART *****************
   370 ;; Defined at:
   371 ;;		line 92 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;Total ram usage:        2 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 2
   392 ;; This function calls:
   393 ;;		_Counter_Message
   394 ;;		_TX_Numbers
   395 ;; This function is called by:
   396 ;;		Interrupt level 2
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	intcode
   401   000008                     __pintcode:
   402                           	callstack 0
   403   000008                     _TX_EUSART:
   404                           	callstack 27
   405                           
   406                           ; BSR set to: 15
   407                           ;incstack = 0
   408   000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   409   00000A  CFD9 F019          	movff	fsr2l,??_TX_EUSART
   410   00000E  CFDA F01A          	movff	fsr2h,??_TX_EUSART+1
   411   000012                     
   412                           ;main.c: 94:     if (INTCONbits.INT0F) {
   413   000012  A2F2               	btfss	242,1,c	;volatile
   414   000014  EF0E  F000         	goto	i2u16_41
   415   000018  EF10  F000         	goto	i2u16_40
   416   00001C                     i2u16_41:
   417   00001C  EF2F  F000         	goto	i2l65
   418   000020                     i2u16_40:
   419   000020                     
   420                           ;main.c: 96:         INTCONbits.INT0IF = 0;
   421   000020  92F2               	bcf	242,1,c	;volatile
   422   000022                     i2l61:
   423   000022  A89E               	btfss	158,4,c	;volatile
   424   000024  EF16  F000         	goto	i2u17_41
   425   000028  EF18  F000         	goto	i2u17_40
   426   00002C                     i2u17_41:
   427   00002C  EF11  F000         	goto	i2l61
   428   000030                     i2u17_40:
   429   000030                     
   430                           ;main.c: 99:         TXREG1 = 'A';
   431   000030  0E41               	movlw	65
   432   000032  6EAD               	movwf	173,c	;volatile
   433   000034                     
   434                           ;main.c: 101:         Counter_Message();
   435   000034  EC01  F008         	call	_Counter_Message	;wreg free
   436   000038                     
   437                           ;main.c: 103:         Count0_Units++;
   438   000038  2A02               	incf	_Count0_Units^0,f,c
   439   00003A                     
   440                           ;main.c: 105:         if (Count0_Units == ':') {
   441   00003A  0E3A               	movlw	58
   442   00003C  1802               	xorwf	_Count0_Units^0,w,c
   443   00003E  A4D8               	btfss	status,2,c
   444   000040  EF24  F000         	goto	i2u18_41
   445   000044  EF26  F000         	goto	i2u18_40
   446   000048                     i2u18_41:
   447   000048  EF29  F000         	goto	i2l902
   448   00004C                     i2u18_40:
   449   00004C                     
   450                           ;main.c: 107:             Count0_Units = 0x30;
   451   00004C  0E30               	movlw	48
   452   00004E  6E02               	movwf	_Count0_Units^0,c
   453   000050                     
   454                           ;main.c: 108:             Count0_Tens++;
   455   000050  2A01               	incf	_Count0_Tens^0,f,c
   456   000052                     i2l902:
   457                           
   458                           ;main.c: 112:         TX_Numbers(Count0_Tens, Count0_Units);
   459   000052  C002  F014         	movff	_Count0_Units,TX_Numbers@Tens
   460   000056  6A15               	clrf	(TX_Numbers@Tens+1)^0,c
   461   000058  5001               	movf	_Count0_Tens^0,w,c
   462   00005A  EC44  F008         	call	_TX_Numbers
   463   00005E                     i2l65:
   464   00005E  C01A  FFDA         	movff	??_TX_EUSART+1,fsr2h
   465   000062  C019  FFD9         	movff	??_TX_EUSART,fsr2l
   466   000066  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   467   000068  0011               	retfie		f
   468   00006A                     __end_of_TX_EUSART:
   469                           	callstack 0
   470                           
   471 ;; *************** function _TX_Numbers *****************
   472 ;; Defined at:
   473 ;;		line 118 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  Units           1    wreg     unsigned char 
   476 ;;  Tens            2    0[COMRAM] unsigned int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  Units           1    2[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_TX_EUSART
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text3
   502   001088                     __ptext3:
   503                           	callstack 0
   504   001088                     _TX_Numbers:
   505                           	callstack 28
   506                           
   507                           ;incstack = 0
   508                           ;TX_Numbers@Units stored from wreg
   509   001088  6E16               	movwf	TX_Numbers@Units^0,c
   510   00108A                     i2l68:
   511   00108A  A89E               	btfss	158,4,c	;volatile
   512   00108C  EF4A  F008         	goto	i2u13_41
   513   001090  EF4C  F008         	goto	i2u13_40
   514   001094                     i2u13_41:
   515   001094  EF45  F008         	goto	i2l68
   516   001098                     i2u13_40:
   517   001098                     
   518                           ;main.c: 121:     TXREG1 = Units;
   519   001098  C016  FFAD         	movff	TX_Numbers@Units,4013	;volatile
   520   00109C                     i2l71:
   521   00109C  A89E               	btfss	158,4,c	;volatile
   522   00109E  EF53  F008         	goto	i2u14_41
   523   0010A2  EF55  F008         	goto	i2u14_40
   524   0010A6                     i2u14_41:
   525   0010A6  EF4E  F008         	goto	i2l71
   526   0010AA                     i2u14_40:
   527   0010AA                     
   528                           ;main.c: 124:     TXREG1 = Tens;
   529   0010AA  C014  FFAD         	movff	TX_Numbers@Tens,4013	;volatile
   530   0010AE                     i2l74:
   531   0010AE  A89E               	btfss	158,4,c	;volatile
   532   0010B0  EF5C  F008         	goto	i2u15_41
   533   0010B4  EF5E  F008         	goto	i2u15_40
   534   0010B8                     i2u15_41:
   535   0010B8  EF57  F008         	goto	i2l74
   536   0010BC                     i2u15_40:
   537   0010BC                     
   538                           ;main.c: 127:     TXREG1 = 0x0D;
   539   0010BC  0E0D               	movlw	13
   540   0010BE  6EAD               	movwf	173,c	;volatile
   541   0010C0  0012               	return		;funcret
   542   0010C2                     __end_of_TX_Numbers:
   543                           	callstack 0
   544                           
   545 ;; *************** function _Counter_Message *****************
   546 ;; Defined at:
   547 ;;		line 131 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  i               2    3[COMRAM] int 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;Total ram usage:        2 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 1
   568 ;; This function calls:
   569 ;;		_strlen
   570 ;; This function is called by:
   571 ;;		_TX_EUSART
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text4
   576   001002                     __ptext4:
   577                           	callstack 0
   578   001002                     _Counter_Message:
   579                           	callstack 27
   580   001002                     
   581                           ;main.c: 133:     for (int i = 0; i < strlen(TX_Text_1); i++) {
   582   001002  0E00               	movlw	0
   583   001004  6E18               	movwf	(Counter_Message@i+1)^0,c
   584   001006  0E00               	movlw	0
   585   001008  6E17               	movwf	Counter_Message@i^0,c
   586   00100A  EF16  F008         	goto	i2l878
   587   00100E                     i2l82:
   588   00100E  A89E               	btfss	158,4,c	;volatile
   589   001010  EF0C  F008         	goto	i2u11_41
   590   001014  EF0E  F008         	goto	i2u11_40
   591   001018                     i2u11_41:
   592   001018  EF07  F008         	goto	i2l82
   593   00101C                     i2u11_40:
   594   00101C                     
   595                           ;main.c: 136:         TXREG1 = TX_Text_1[i];
   596   00101C  5017               	movf	Counter_Message@i^0,w,c
   597   00101E  0F03               	addlw	low _TX_Text_1
   598   001020  6ED9               	movwf	fsr2l,c
   599   001022  6ADA               	clrf	fsr2h,c
   600   001024  50DF               	movf	indf2,w,c
   601   001026  6EAD               	movwf	173,c	;volatile
   602   001028                     
   603                           ;main.c: 138:     }
   604   001028  4A17               	infsnz	Counter_Message@i^0,f,c
   605   00102A  2A18               	incf	(Counter_Message@i+1)^0,f,c
   606   00102C                     i2l878:
   607   00102C  0E03               	movlw	low _TX_Text_1
   608   00102E  6E14               	movwf	strlen@s^0,c
   609   001030  EC61  F008         	call	_strlen	;wreg free
   610   001034  5014               	movf	?_strlen^0,w,c
   611   001036  5C17               	subwf	Counter_Message@i^0,w,c
   612   001038  5015               	movf	(?_strlen+1)^0,w,c
   613   00103A  5818               	subwfb	(Counter_Message@i+1)^0,w,c
   614   00103C  A0D8               	btfss	status,0,c
   615   00103E  EF23  F008         	goto	i2u12_41
   616   001042  EF25  F008         	goto	i2u12_40
   617   001046                     i2u12_41:
   618   001046  EF07  F008         	goto	i2l82
   619   00104A                     i2u12_40:
   620   00104A  0012               	return		;funcret
   621   00104C                     __end_of_Counter_Message:
   622                           	callstack 0
   623                           
   624 ;; *************** function _strlen *****************
   625 ;; Defined at:
   626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  s               1    0[COMRAM] PTR const unsigned char 
   629 ;;		 -> TX_Text_1(17), 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  a               1    2[COMRAM] PTR const unsigned char 
   632 ;;		 -> TX_Text_1(17), 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2    0[COMRAM] unsigned int 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        3 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_Counter_Message
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text5
   656   0010C2                     __ptext5:
   657                           	callstack 0
   658   0010C2                     _strlen:
   659                           	callstack 27
   660   0010C2  C014  F016         	movff	strlen@s,strlen@a
   661   0010C6  EF66  F008         	goto	i2l866
   662   0010CA                     i2l864:
   663   0010CA  2A14               	incf	strlen@s^0,f,c
   664   0010CC                     i2l866:
   665   0010CC  5014               	movf	strlen@s^0,w,c
   666   0010CE  6ED9               	movwf	fsr2l,c
   667   0010D0  6ADA               	clrf	fsr2h,c
   668   0010D2  50DF               	movf	indf2,w,c
   669   0010D4  A4D8               	btfss	status,2,c
   670   0010D6  EF6F  F008         	goto	i2u10_41
   671   0010DA  EF71  F008         	goto	i2u10_40
   672   0010DE                     i2u10_41:
   673   0010DE  EF65  F008         	goto	i2l864
   674   0010E2                     i2u10_40:
   675   0010E2  5016               	movf	strlen@a^0,w,c
   676   0010E4  5C14               	subwf	strlen@s^0,w,c
   677   0010E6  6E14               	movwf	?_strlen^0,c
   678   0010E8  6A15               	clrf	(?_strlen+1)^0,c
   679   0010EA  BE14               	btfsc	?_strlen^0,7,c
   680   0010EC  0615               	decf	(?_strlen+1)^0,f,c
   681   0010EE  0012               	return		;funcret
   682   0010F0                     __end_of_strlen:
   683                           	callstack 0
   684                           
   685                           	psect	smallconst
   686   001000                     __psmallconst:
   687                           	callstack 0
   688   001000  00                 	db	0
   689   001001  00                 	db	0	; dummy byte at the end
   690   000000                     
   691                           	psect	rparam
   692   000000                     
   693                           	psect	temp
   694   00001B                     btemp:
   695                           	callstack 0
   696   00001B                     	ds	1
   697   000000                     int$flags	set	btemp
   698   000000                     wtemp8	set	btemp+1
   699   000000                     ttemp5	set	btemp+1
   700   000000                     ttemp6	set	btemp+4
   701   000000                     ttemp7	set	btemp+8
   702                           
   703                           	psect	config
   704                           
   705                           ; Padding undefined space
   706   300000                     	org	3145728
   707   300000  FF                 	db	255
   708                           
   709                           ;Config register CONFIG1H @ 0x300001
   710                           ;	Oscillator Selection bits
   711                           ;	FOSC = INTIO67, Internal oscillator block
   712                           ;	4X PLL Enable
   713                           ;	PLLCFG = OFF, Oscillator used directly
   714                           ;	Primary clock enable bit
   715                           ;	PRICLKEN = ON, Primary clock is always enabled
   716                           ;	Fail-Safe Clock Monitor Enable bit
   717                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   718                           ;	Internal/External Oscillator Switchover bit
   719                           ;	IESO = OFF, Oscillator Switchover mode disabled
   720   300001                     	org	3145729
   721   300001  28                 	db	40
   722                           
   723                           ;Config register CONFIG2L @ 0x300002
   724                           ;	Power-up Timer Enable bit
   725                           ;	PWRTEN = OFF, Power up timer disabled
   726                           ;	Brown-out Reset Enable bits
   727                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   728                           ;	Brown Out Reset Voltage bits
   729                           ;	BORV = 190, VBOR set to 1.90 V nominal
   730   300002                     	org	3145730
   731   300002  1F                 	db	31
   732                           
   733                           ;Config register CONFIG2H @ 0x300003
   734                           ;	Watchdog Timer Enable bits
   735                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   736                           ;	Watchdog Timer Postscale Select bits
   737                           ;	WDTPS = 32768, 1:32768
   738   300003                     	org	3145731
   739   300003  3C                 	db	60
   740                           
   741                           ; Padding undefined space
   742   300004                     	org	3145732
   743   300004  FF                 	db	255
   744                           
   745                           ;Config register CONFIG3H @ 0x300005
   746                           ;	CCP2 MUX bit
   747                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   748                           ;	PORTB A/D Enable bit
   749                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   750                           ;	P3A/CCP3 Mux bit
   751                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   752                           ;	HFINTOSC Fast Start-up
   753                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   754                           ;	Timer3 Clock input mux bit
   755                           ;	T3CMX = PORTC0, T3CKI is on RC0
   756                           ;	ECCP2 B output mux bit
   757                           ;	P2BMX = PORTD2, P2B is on RD2
   758                           ;	MCLR Pin Enable bit
   759                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   760   300005                     	org	3145733
   761   300005  BF                 	db	191
   762                           
   763                           ;Config register CONFIG4L @ 0x300006
   764                           ;	Stack Full/Underflow Reset Enable bit
   765                           ;	STVREN = ON, Stack full/underflow will cause Reset
   766                           ;	Single-Supply ICSP Enable bit
   767                           ;	LVP = OFF, Single-Supply ICSP disabled
   768                           ;	Extended Instruction Set Enable bit
   769                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   770                           ;	Background Debug
   771                           ;	DEBUG = 0x1, unprogrammed default
   772   300006                     	org	3145734
   773   300006  81                 	db	129
   774                           
   775                           ; Padding undefined space
   776   300007                     	org	3145735
   777   300007  FF                 	db	255
   778                           
   779                           ;Config register CONFIG5L @ 0x300008
   780                           ;	Code Protection Block 0
   781                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   782                           ;	Code Protection Block 1
   783                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   784                           ;	Code Protection Block 2
   785                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   786                           ;	Code Protection Block 3
   787                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   788   300008                     	org	3145736
   789   300008  0F                 	db	15
   790                           
   791                           ;Config register CONFIG5H @ 0x300009
   792                           ;	Boot Block Code Protection bit
   793                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   794                           ;	Data EEPROM Code Protection bit
   795                           ;	CPD = OFF, Data EEPROM not code-protected
   796   300009                     	org	3145737
   797   300009  C0                 	db	192
   798                           
   799                           ;Config register CONFIG6L @ 0x30000A
   800                           ;	Write Protection Block 0
   801                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   802                           ;	Write Protection Block 1
   803                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   804                           ;	Write Protection Block 2
   805                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   806                           ;	Write Protection Block 3
   807                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   808   30000A                     	org	3145738
   809   30000A  0F                 	db	15
   810                           
   811                           ;Config register CONFIG6H @ 0x30000B
   812                           ;	Configuration Register Write Protection bit
   813                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   814                           ;	Boot Block Write Protection bit
   815                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   816                           ;	Data EEPROM Write Protection bit
   817                           ;	WRTD = OFF, Data EEPROM not write-protected
   818   30000B                     	org	3145739
   819   30000B  E0                 	db	224
   820                           
   821                           ;Config register CONFIG7L @ 0x30000C
   822                           ;	Table Read Protection Block 0
   823                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   824                           ;	Table Read Protection Block 1
   825                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   826                           ;	Table Read Protection Block 2
   827                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   828                           ;	Table Read Protection Block 3
   829                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   830   30000C                     	org	3145740
   831   30000C  0F                 	db	15
   832                           
   833                           ;Config register CONFIG7H @ 0x30000D
   834                           ;	Boot Block Table Read Protection bit
   835                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   836   30000D                     	org	3145741
   837   30000D  40                 	db	64
   838                           tosu	equ	0xFFF
   839                           tosh	equ	0xFFE
   840                           tosl	equ	0xFFD
   841                           stkptr	equ	0xFFC
   842                           pclatu	equ	0xFFB
   843                           pclath	equ	0xFFA
   844                           pcl	equ	0xFF9
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           prodh	equ	0xFF4
   850                           prodl	equ	0xFF3
   851                           indf0	equ	0xFEF
   852                           postinc0	equ	0xFEE
   853                           postdec0	equ	0xFED
   854                           preinc0	equ	0xFEC
   855                           plusw0	equ	0xFEB
   856                           fsr0h	equ	0xFEA
   857                           fsr0l	equ	0xFE9
   858                           wreg	equ	0xFE8
   859                           indf1	equ	0xFE7
   860                           postinc1	equ	0xFE6
   861                           postdec1	equ	0xFE5
   862                           preinc1	equ	0xFE4
   863                           plusw1	equ	0xFE3
   864                           fsr1h	equ	0xFE2
   865                           fsr1l	equ	0xFE1
   866                           bsr	equ	0xFE0
   867                           indf2	equ	0xFDF
   868                           postinc2	equ	0xFDE
   869                           postdec2	equ	0xFDD
   870                           preinc2	equ	0xFDC
   871                           plusw2	equ	0xFDB
   872                           fsr2h	equ	0xFDA
   873                           fsr2l	equ	0xFD9
   874                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> TX_Text_1(COMRAM[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> TX_Text_1(COMRAM[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TX_EUSART in COMRAM

    _TX_EUSART->_Counter_Message
    _Counter_Message->_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _TX_EUSART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TX_EUSART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TX_EUSART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TX_EUSART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TX_EUSART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TX_EUSART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TX_EUSART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TX_EUSART in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TX_EUSART in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TX_EUSART in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TX_EUSART in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TX_EUSART in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TX_EUSART in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TX_EUSART in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TX_EUSART in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TX_EUSART in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _Configuration
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TX_EUSART                                            2     2      0     332
                                              5 COMRAM     2     2      0
                    _Counter_Message
                         _TX_Numbers
 ---------------------------------------------------------------------------------
 (3) _TX_Numbers                                           3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Counter_Message                                      2     2      0     212
                                              3 COMRAM     2     2      0
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration

 _TX_EUSART (ROOT)
   _Counter_Message
     _strlen
   _TX_Numbers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      1A       1       27.7%
BITBIGSFRlhl        58      0       0      44        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1D      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhhll       8      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BITBIGSFRll          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      46        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 07 16:12:47 2024

                     l50 1132                       l55 1086                       l49 1132  
                    l800 1066                      l810 1074                      l802 1068  
                    l820 107E                      l812 1076                      l804 106A  
                    l822 1080                      l814 1078                      l806 106C  
                    l824 1082                      l816 107A                      l808 1072  
                    l826 1084                      l818 107C                      l842 112E  
                    l780 1050                      l790 105C                      l782 1054  
                    l792 105E                      l784 1056                      l794 1060  
                    l786 1058                      l778 104C                      l796 1062  
                    l788 105A                      l798 1064               _TXSTA1bits 0FAC  
                   i2l61 0022                     i2l71 109C                     i2l73 10AA  
                   i2l65 005E                     i2l82 100E                     i2l74 10AE  
                   i2l68 108A                     i2l77 10C0                     i2l86 104A  
                   _main 112E                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     btemp 001B  
                   start 006A             ___param_bank 0000         Counter_Message@i 0017  
           _BAUDCON1bits 0FB8                    ?_main 0014                    i2l900 0050  
                  i2l902 0052                    i2l766 10EE                    i2l862 10C2  
                  i2l864 10CA                    i2l872 1002                    i2l880 108A  
                  i2l866 10CC                    i2l874 101C                    i2l882 1098  
                  i2l890 0030                    i2l868 10E2                    i2l876 1028  
                  i2l884 10BC                    i2l892 0034                    i2l878 102C  
                  i2l894 0038                    i2l886 0012                    i2l896 003A  
                  i2l888 0020                    i2l898 004C                    _SPBRG 0FAF  
             _TX_Numbers 1088  __end_of_Counter_Message 104C                    tablat 0FF5  
                  ttemp5 001C                    ttemp6 001F                    ttemp7 0023  
                  status 0FD8                    wtemp8 001C          __initialization 10F0  
           __end_of_main 113A                   ??_main 001B            __activetblptr 0000  
                 _OSCCON 0FD3                   _TXREG1 0FAD              _Count0_Tens 0001  
                 isa$std 0001                   _strlen 10C2              ?_TX_Numbers 0014  
           __pdataCOMRAM 0001             __mediumconst 0000         ?_Counter_Message 0014  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
      __end_of_TX_EUSART 006A               __accesstop 0060  __end_of__initialization 1110  
          ___rparam_used 0001           __pcstackCOMRAM 0014    __end_of_Configuration 1088  
                ?_strlen 0014                  i2u10_40 10E2                  i2u10_41 10DE  
                i2u11_40 101C                  i2u11_41 1018                  i2u12_40 104A  
                i2u12_41 1046                  i2u13_40 1098                  i2u13_41 1094  
                i2u14_40 10AA                  i2u14_41 10A6                  i2u15_40 10BC  
                i2u15_41 10B8                  i2u16_40 0020                  i2u16_41 001C  
                i2u17_40 0030                  i2u17_41 002C                  i2u18_40 004C  
                i2u18_41 0048                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 10F0                  __ramtop 1000  
                __ptext0 112E                  __ptext1 104C                  __ptext3 1088  
                __ptext4 1002                  __ptext5 10C2             _Count0_Units 0002  
   end_of_initialization 1110                _RCSTAbits 0FAB                  postdec1 0FE5  
                postinc0 0FEE                  strlen@a 0016                  strlen@s 0014  
           ??_TX_Numbers 0016           TX_Numbers@Tens 0014                _TRISBbits 0F93  
              _TRISCbits 0F94                _TX_EUSART 0008       __end_of_TX_Numbers 10C2  
              _TX_Text_1 0003            __pidataCOMRAM 111A           __end_of_strlen 10F0  
    start_initialization 10F0               ?_TX_EUSART 0014                 ??_strlen 0016  
              __pintcode 0008              __smallconst 1000                 _PIE1bits 0F9D  
            ??_TX_EUSART 0019                 _PIR1bits 0F9E        ??_Counter_Message 0017  
               _RCONbits 0FD0              _INTCON2bits 0FF1                copy_data0 1104  
          _Configuration 104C                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELBbits 0F39               _ANSELCbits 0F3A           ?_Configuration 0014  
               isa$xinst 0000                 int$flags 001B               _INTCONbits 0FF2  
               intlevel2 0000          ??_Configuration 001B          _Counter_Message 1002  
        TX_Numbers@Units 0016  
