

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Feb 02 22:16:53 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   00111A                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _Count0_Tens
    61   00111A  30                 	db	48
    62                           
    63                           ;initializer for _Count0_Units
    64   00111B  30                 	db	48
    65                           
    66                           ;initializer for _TX_Text_1
    67   00111C  30                 	db	48
    68   00111D  20                 	db	32
    69   00111E  49                 	db	73
    70   00111F  6E                 	db	110
    71   001120  74                 	db	116
    72   001121  65                 	db	101
    73   001122  72                 	db	114
    74   001123  72                 	db	114
    75   001124  75                 	db	117
    76   001125  70                 	db	112
    77   001126  74                 	db	116
    78   001127  20                 	db	32
    79   001128  43                 	db	67
    80   001129  6F                 	db	111
    81   00112A  75                 	db	117
    82   00112B  6E                 	db	110
    83   00112C  74                 	db	116
    84   00112D  65                 	db	101
    85   00112E  72                 	db	114
    86   00112F  20                 	db	32
    87   001130  3A                 	db	58
    88   001131  20                 	db	32
    89   001132  00                 	db	0
    90   000000                     _ANSELBbits	set	3897
    91   000000                     _ANSELCbits	set	3898
    92   000000                     _OSCCON	set	4051
    93   000000                     _INTCON2bits	set	4081
    94   000000                     _INTCONbits	set	4082
    95   000000                     _TRISBbits	set	3987
    96   000000                     _TRISCbits	set	3988
    97   000000                     _PIE1bits	set	3997
    98   000000                     _RCONbits	set	4048
    99   000000                     _RCSTAbits	set	4011
   100   000000                     _TXSTA1bits	set	4012
   101   000000                     _SPBRG	set	4015
   102   000000                     _PIR1bits	set	3998
   103   000000                     _BAUDCON1bits	set	4024
   104   000000                     _TXREG1	set	4013
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109   0010F0                     __pcinit:
   110                           	callstack 0
   111   0010F0                     start_initialization:
   112                           	callstack 0
   113   0010F0                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (25 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118   0010F0  0E1A               	movlw	low __pidataCOMRAM
   119   0010F2  6EF6               	movwf	tblptrl,c
   120   0010F4  0E11               	movlw	high __pidataCOMRAM
   121   0010F6  6EF7               	movwf	tblptrh,c
   122   0010F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123   0010FA  6EF8               	movwf	tblptru,c
   124   0010FC  EE00  F001         	lfsr	0,__pdataCOMRAM
   125   001100  EE10 F019          	lfsr	1,25
   126   001104                     copy_data0:
   127   001104  0009               	tblrd		*+
   128   001106  CFF5 FFEE          	movff	tablat,postinc0
   129   00110A  50E5               	movf	postdec1,w,c
   130   00110C  50E1               	movf	fsr1l,w,c
   131   00110E  E1FA               	bnz	copy_data0
   132   001110                     end_of_initialization:
   133                           	callstack 0
   134   001110                     __end_of__initialization:
   135                           	callstack 0
   136   001110  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137   001112  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138   001114  0100               	movlb	0
   139   001116  EF9A  F008         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	dataCOMRAM
   142   000001                     __pdataCOMRAM:
   143                           	callstack 0
   144   000001                     _Count0_Tens:
   145                           	callstack 0
   146   000001                     	ds	1
   147   000002                     _Count0_Units:
   148                           	callstack 0
   149   000002                     	ds	1
   150   000003                     _TX_Text_1:
   151                           	callstack 0
   152   000003                     	ds	23
   153                           
   154                           	psect	cstackCOMRAM
   155   00001A                     __pcstackCOMRAM:
   156                           	callstack 0
   157   00001A                     ?_strlen:
   158                           	callstack 0
   159   00001A                     strlen@s:
   160                           	callstack 0
   161   00001A                     TX_Numbers@Tens:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x0
   165   00001A                     	ds	2
   166   00001C                     TX_Numbers@Units:
   167                           	callstack 0
   168   00001C                     strlen@a:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0x2
   172   00001C                     	ds	1
   173   00001D                     Counter_Message@i:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x3
   177   00001D                     	ds	2
   178   00001F                     ??_TX_EUSART:
   179                           
   180                           ; 1 bytes @ 0x5
   181   00001F                     	ds	2
   182   000021                     
   183                           ; 1 bytes @ 0x7
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 25 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, status,2, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   207 ;;Total ram usage:        0 bytes
   208 ;; Hardware stack levels required when called: 4
   209 ;; This function calls:
   210 ;;		_Configuration
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217   001134                     __ptext0:
   218                           	callstack 0
   219   001134                     _main:
   220                           	callstack 27
   221   001134                     
   222                           ;main.c: 28:     Configuration();
   223   001134  EC26  F008         	call	_Configuration	;wreg free
   224   001138                     l49:
   225   001138  EF9C  F008         	goto	l49
   226   00113C  EF2C  F000         	goto	start
   227   001140                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _Configuration *****************
   231 ;; Defined at:
   232 ;;		line 38 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; Hardware stack levels required when called: 3
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261   00104C                     __ptext1:
   262                           	callstack 0
   263   00104C                     _Configuration:
   264                           	callstack 27
   265   00104C                     
   266                           ;main.c: 40:     OSCCON = 0x72;
   267   00104C  0E72               	movlw	114
   268   00104E  6ED3               	movwf	211,c	;volatile
   269   001050                     
   270                           ;main.c: 42:     ANSELCbits.ANSC6 = 0;
   271   001050  010F               	movlb	15	; () banked
   272   001052  9D3A               	bcf	58,6,b	;volatile
   273   001054                     
   274                           ; BSR set to: 15
   275                           ;main.c: 43:     ANSELCbits.ANSC7 = 0;
   276   001054  9F3A               	bcf	58,7,b	;volatile
   277   001056                     
   278                           ; BSR set to: 15
   279                           ;main.c: 44:     ANSELBbits.ANSB0 = 0;
   280   001056  9139               	bcf	57,0,b	;volatile
   281   001058                     
   282                           ; BSR set to: 15
   283                           ;main.c: 46:     TRISBbits.RB0 = 1;
   284   001058  8093               	bsf	147,0,c	;volatile
   285   00105A                     
   286                           ; BSR set to: 15
   287                           ;main.c: 49:     INTCONbits.GIE = 1;
   288   00105A  8EF2               	bsf	242,7,c	;volatile
   289   00105C                     
   290                           ; BSR set to: 15
   291                           ;main.c: 50:     RCONbits.IPEN = 0;
   292   00105C  9ED0               	bcf	208,7,c	;volatile
   293   00105E                     
   294                           ; BSR set to: 15
   295                           ;main.c: 51:     INTCONbits.PEIE = 1;
   296   00105E  8CF2               	bsf	242,6,c	;volatile
   297   001060                     
   298                           ; BSR set to: 15
   299                           ;main.c: 52:     PIE1bits.RC1IE = 1;
   300   001060  8A9D               	bsf	157,5,c	;volatile
   301   001062                     
   302                           ; BSR set to: 15
   303                           ;main.c: 53:     PIE1bits.TX1IE = 1;
   304   001062  889D               	bsf	157,4,c	;volatile
   305   001064                     
   306                           ; BSR set to: 15
   307                           ;main.c: 54:     PIR1bits.TX1IF = 0;
   308   001064  989E               	bcf	158,4,c	;volatile
   309   001066                     
   310                           ; BSR set to: 15
   311                           ;main.c: 55:     PIR1bits.RC1IF = 0;
   312   001066  9A9E               	bcf	158,5,c	;volatile
   313   001068                     
   314                           ; BSR set to: 15
   315                           ;main.c: 56:     INTCONbits.INT0E = 1;
   316   001068  88F2               	bsf	242,4,c	;volatile
   317   00106A                     
   318                           ; BSR set to: 15
   319                           ;main.c: 57:     INTCONbits.INT0F = 0;
   320   00106A  92F2               	bcf	242,1,c	;volatile
   321   00106C                     
   322                           ; BSR set to: 15
   323                           ;main.c: 58:     INTCON2bits.INTEDG0 = 0;
   324   00106C  9CF1               	bcf	241,6,c	;volatile
   325                           
   326                           ;main.c: 61:     SPBRG = 103;
   327   00106E  0E67               	movlw	103
   328   001070  6EAF               	movwf	175,c	;volatile
   329   001072                     
   330                           ; BSR set to: 15
   331                           ;main.c: 62:     TRISCbits.RC6 = 1;
   332   001072  8C94               	bsf	148,6,c	;volatile
   333   001074                     
   334                           ; BSR set to: 15
   335                           ;main.c: 63:     TRISCbits.RC7 = 1;
   336   001074  8E94               	bsf	148,7,c	;volatile
   337   001076                     
   338                           ; BSR set to: 15
   339                           ;main.c: 66:     TXSTA1bits.TX91 = 0;
   340   001076  9CAC               	bcf	172,6,c	;volatile
   341   001078                     
   342                           ; BSR set to: 15
   343                           ;main.c: 67:     TXSTA1bits.TXEN1 = 1;
   344   001078  8AAC               	bsf	172,5,c	;volatile
   345   00107A                     
   346                           ; BSR set to: 15
   347                           ;main.c: 68:     TXSTA1bits.SYNC1 = 0;
   348   00107A  98AC               	bcf	172,4,c	;volatile
   349   00107C                     
   350                           ; BSR set to: 15
   351                           ;main.c: 69:     TXSTA1bits.BRGH1 = 1;
   352   00107C  84AC               	bsf	172,2,c	;volatile
   353   00107E                     
   354                           ; BSR set to: 15
   355                           ;main.c: 72:     RCSTAbits.SPEN1 = 1;
   356   00107E  8EAB               	bsf	171,7,c	;volatile
   357   001080                     
   358                           ; BSR set to: 15
   359                           ;main.c: 73:     RCSTAbits.RX91 = 0;
   360   001080  9CAB               	bcf	171,6,c	;volatile
   361   001082                     
   362                           ; BSR set to: 15
   363                           ;main.c: 74:     RCSTAbits.CREN1 = 1;
   364   001082  88AB               	bsf	171,4,c	;volatile
   365   001084                     
   366                           ; BSR set to: 15
   367                           ;main.c: 77:     BAUDCON1bits.BRG16 = 0;
   368   001084  96B8               	bcf	184,3,c	;volatile
   369   001086                     
   370                           ; BSR set to: 15
   371   001086  0012               	return		;funcret
   372   001088                     __end_of_Configuration:
   373                           	callstack 0
   374                           
   375 ;; *************** function _TX_EUSART *****************
   376 ;; Defined at:
   377 ;;		line 92 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;Total ram usage:        2 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 2
   398 ;; This function calls:
   399 ;;		_Counter_Message
   400 ;;		_TX_Numbers
   401 ;; This function is called by:
   402 ;;		Interrupt level 2
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	intcode
   407   000008                     __pintcode:
   408                           	callstack 0
   409   000008                     _TX_EUSART:
   410                           	callstack 27
   411                           
   412                           ; BSR set to: 15
   413                           ;incstack = 0
   414   000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   415   00000A  CFD9 F01F          	movff	fsr2l,??_TX_EUSART
   416   00000E  CFDA F020          	movff	fsr2h,??_TX_EUSART+1
   417   000012                     
   418                           ;main.c: 94:     if (INTCONbits.INT0F) {
   419   000012  A2F2               	btfss	242,1,c	;volatile
   420   000014  EF0E  F000         	goto	i2u15_41
   421   000018  EF10  F000         	goto	i2u15_40
   422   00001C                     i2u15_41:
   423   00001C  EF26  F000         	goto	i2l62
   424   000020                     i2u15_40:
   425   000020                     
   426                           ;main.c: 96:         INTCONbits.INT0IF = 0;
   427   000020  92F2               	bcf	242,1,c	;volatile
   428   000022                     
   429                           ;main.c: 98:         Counter_Message();
   430   000022  EC01  F008         	call	_Counter_Message	;wreg free
   431   000026                     
   432                           ;main.c: 100:         Count0_Units++;
   433   000026  2A02               	incf	_Count0_Units^0,f,c
   434   000028                     
   435                           ;main.c: 102:         if (Count0_Units == ':') {
   436   000028  0E3A               	movlw	58
   437   00002A  1802               	xorwf	_Count0_Units^0,w,c
   438   00002C  A4D8               	btfss	status,2,c
   439   00002E  EF1B  F000         	goto	i2u16_41
   440   000032  EF1D  F000         	goto	i2u16_40
   441   000036                     i2u16_41:
   442   000036  EF20  F000         	goto	i2l895
   443   00003A                     i2u16_40:
   444   00003A                     
   445                           ;main.c: 104:             Count0_Units = 0x30;
   446   00003A  0E30               	movlw	48
   447   00003C  6E02               	movwf	_Count0_Units^0,c
   448   00003E                     
   449                           ;main.c: 105:             Count0_Tens++;
   450   00003E  2A01               	incf	_Count0_Tens^0,f,c
   451   000040                     i2l895:
   452                           
   453                           ;main.c: 109:         TX_Numbers(Count0_Tens, Count0_Units);
   454   000040  C002  F01A         	movff	_Count0_Units,TX_Numbers@Tens
   455   000044  6A1B               	clrf	(TX_Numbers@Tens+1)^0,c
   456   000046  5001               	movf	_Count0_Tens^0,w,c
   457   000048  EC44  F008         	call	_TX_Numbers
   458   00004C                     i2l62:
   459   00004C  C020  FFDA         	movff	??_TX_EUSART+1,fsr2h
   460   000050  C01F  FFD9         	movff	??_TX_EUSART,fsr2l
   461   000054  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   462   000056  0011               	retfie		f
   463   000058                     __end_of_TX_EUSART:
   464                           	callstack 0
   465                           
   466 ;; *************** function _TX_Numbers *****************
   467 ;; Defined at:
   468 ;;		line 115 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  Units           1    wreg     unsigned char 
   471 ;;  Tens            2    0[COMRAM] unsigned int 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  Units           1    2[COMRAM] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;Total ram usage:        3 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_TX_EUSART
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text3
   497   001088                     __ptext3:
   498                           	callstack 0
   499   001088                     _TX_Numbers:
   500                           	callstack 28
   501                           
   502                           ;incstack = 0
   503                           ;TX_Numbers@Units stored from wreg
   504   001088  6E1C               	movwf	TX_Numbers@Units^0,c
   505   00108A                     i2l65:
   506   00108A  A89E               	btfss	158,4,c	;volatile
   507   00108C  EF4A  F008         	goto	i2u12_41
   508   001090  EF4C  F008         	goto	i2u12_40
   509   001094                     i2u12_41:
   510   001094  EF45  F008         	goto	i2l65
   511   001098                     i2u12_40:
   512   001098                     
   513                           ;main.c: 118:     TXREG1 = Units;
   514   001098  C01C  FFAD         	movff	TX_Numbers@Units,4013	;volatile
   515   00109C                     i2l68:
   516   00109C  A89E               	btfss	158,4,c	;volatile
   517   00109E  EF53  F008         	goto	i2u13_41
   518   0010A2  EF55  F008         	goto	i2u13_40
   519   0010A6                     i2u13_41:
   520   0010A6  EF4E  F008         	goto	i2l68
   521   0010AA                     i2u13_40:
   522   0010AA                     
   523                           ;main.c: 121:     TXREG1 = Tens;
   524   0010AA  C01A  FFAD         	movff	TX_Numbers@Tens,4013	;volatile
   525   0010AE                     i2l71:
   526   0010AE  A89E               	btfss	158,4,c	;volatile
   527   0010B0  EF5C  F008         	goto	i2u14_41
   528   0010B4  EF5E  F008         	goto	i2u14_40
   529   0010B8                     i2u14_41:
   530   0010B8  EF57  F008         	goto	i2l71
   531   0010BC                     i2u14_40:
   532   0010BC                     
   533                           ;main.c: 124:     TXREG1 = 0x0D;
   534   0010BC  0E0D               	movlw	13
   535   0010BE  6EAD               	movwf	173,c	;volatile
   536   0010C0  0012               	return		;funcret
   537   0010C2                     __end_of_TX_Numbers:
   538                           	callstack 0
   539                           
   540 ;; *************** function _Counter_Message *****************
   541 ;; Defined at:
   542 ;;		line 128 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  i               2    3[COMRAM] int 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;Total ram usage:        2 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 1
   563 ;; This function calls:
   564 ;;		_strlen
   565 ;; This function is called by:
   566 ;;		_TX_EUSART
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text4
   571   001002                     __ptext4:
   572                           	callstack 0
   573   001002                     _Counter_Message:
   574                           	callstack 27
   575   001002                     
   576                           ;main.c: 130:     for (int i = 0; i < strlen(TX_Text_1); i++){
   577   001002  0E00               	movlw	0
   578   001004  6E1E               	movwf	(Counter_Message@i+1)^0,c
   579   001006  0E00               	movlw	0
   580   001008  6E1D               	movwf	Counter_Message@i^0,c
   581   00100A  EF16  F008         	goto	i2l873
   582   00100E                     i2l79:
   583   00100E  A89E               	btfss	158,4,c	;volatile
   584   001010  EF0C  F008         	goto	i2u10_41
   585   001014  EF0E  F008         	goto	i2u10_40
   586   001018                     i2u10_41:
   587   001018  EF07  F008         	goto	i2l79
   588   00101C                     i2u10_40:
   589   00101C                     
   590                           ;main.c: 133:        TXREG1 = TX_Text_1[i];
   591   00101C  501D               	movf	Counter_Message@i^0,w,c
   592   00101E  0F03               	addlw	low _TX_Text_1
   593   001020  6ED9               	movwf	fsr2l,c
   594   001022  6ADA               	clrf	fsr2h,c
   595   001024  50DF               	movf	indf2,w,c
   596   001026  6EAD               	movwf	173,c	;volatile
   597   001028                     
   598                           ;main.c: 135:     }
   599   001028  4A1D               	infsnz	Counter_Message@i^0,f,c
   600   00102A  2A1E               	incf	(Counter_Message@i+1)^0,f,c
   601   00102C                     i2l873:
   602   00102C  0E03               	movlw	low _TX_Text_1
   603   00102E  6E1A               	movwf	strlen@s^0,c
   604   001030  EC61  F008         	call	_strlen	;wreg free
   605   001034  501A               	movf	?_strlen^0,w,c
   606   001036  5C1D               	subwf	Counter_Message@i^0,w,c
   607   001038  501B               	movf	(?_strlen+1)^0,w,c
   608   00103A  581E               	subwfb	(Counter_Message@i+1)^0,w,c
   609   00103C  A0D8               	btfss	status,0,c
   610   00103E  EF23  F008         	goto	i2u11_41
   611   001042  EF25  F008         	goto	i2u11_40
   612   001046                     i2u11_41:
   613   001046  EF07  F008         	goto	i2l79
   614   00104A                     i2u11_40:
   615   00104A  0012               	return		;funcret
   616   00104C                     __end_of_Counter_Message:
   617                           	callstack 0
   618                           
   619 ;; *************** function _strlen *****************
   620 ;; Defined at:
   621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  s               1    0[COMRAM] PTR const unsigned char 
   624 ;;		 -> TX_Text_1(23), 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  a               1    2[COMRAM] PTR const unsigned char 
   627 ;;		 -> TX_Text_1(23), 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  2    0[COMRAM] unsigned int 
   630 ;; Registers used:
   631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        3 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_Counter_Message
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text5
   651   0010C2                     __ptext5:
   652                           	callstack 0
   653   0010C2                     _strlen:
   654                           	callstack 27
   655   0010C2  C01A  F01C         	movff	strlen@s,strlen@a
   656   0010C6  EF66  F008         	goto	i2l861
   657   0010CA                     i2l859:
   658   0010CA  2A1A               	incf	strlen@s^0,f,c
   659   0010CC                     i2l861:
   660   0010CC  501A               	movf	strlen@s^0,w,c
   661   0010CE  6ED9               	movwf	fsr2l,c
   662   0010D0  6ADA               	clrf	fsr2h,c
   663   0010D2  50DF               	movf	indf2,w,c
   664   0010D4  A4D8               	btfss	status,2,c
   665   0010D6  EF6F  F008         	goto	i2u9_41
   666   0010DA  EF71  F008         	goto	i2u9_40
   667   0010DE                     i2u9_41:
   668   0010DE  EF65  F008         	goto	i2l859
   669   0010E2                     i2u9_40:
   670   0010E2  501C               	movf	strlen@a^0,w,c
   671   0010E4  5C1A               	subwf	strlen@s^0,w,c
   672   0010E6  6E1A               	movwf	?_strlen^0,c
   673   0010E8  6A1B               	clrf	(?_strlen+1)^0,c
   674   0010EA  BE1A               	btfsc	?_strlen^0,7,c
   675   0010EC  061B               	decf	(?_strlen+1)^0,f,c
   676   0010EE  0012               	return		;funcret
   677   0010F0                     __end_of_strlen:
   678                           	callstack 0
   679                           
   680                           	psect	smallconst
   681   001000                     __psmallconst:
   682                           	callstack 0
   683   001000  00                 	db	0
   684   001001  00                 	db	0	; dummy byte at the end
   685   000000                     
   686                           	psect	rparam
   687   000000                     
   688                           	psect	temp
   689   000021                     btemp:
   690                           	callstack 0
   691   000021                     	ds	1
   692   000000                     int$flags	set	btemp
   693   000000                     wtemp8	set	btemp+1
   694   000000                     ttemp5	set	btemp+1
   695   000000                     ttemp6	set	btemp+4
   696   000000                     ttemp7	set	btemp+8
   697                           
   698                           	psect	config
   699                           
   700                           ; Padding undefined space
   701   300000                     	org	3145728
   702   300000  FF                 	db	255
   703                           
   704                           ;Config register CONFIG1H @ 0x300001
   705                           ;	Oscillator Selection bits
   706                           ;	FOSC = INTIO67, Internal oscillator block
   707                           ;	4X PLL Enable
   708                           ;	PLLCFG = OFF, Oscillator used directly
   709                           ;	Primary clock enable bit
   710                           ;	PRICLKEN = ON, Primary clock is always enabled
   711                           ;	Fail-Safe Clock Monitor Enable bit
   712                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   713                           ;	Internal/External Oscillator Switchover bit
   714                           ;	IESO = OFF, Oscillator Switchover mode disabled
   715   300001                     	org	3145729
   716   300001  28                 	db	40
   717                           
   718                           ;Config register CONFIG2L @ 0x300002
   719                           ;	Power-up Timer Enable bit
   720                           ;	PWRTEN = OFF, Power up timer disabled
   721                           ;	Brown-out Reset Enable bits
   722                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   723                           ;	Brown Out Reset Voltage bits
   724                           ;	BORV = 190, VBOR set to 1.90 V nominal
   725   300002                     	org	3145730
   726   300002  1F                 	db	31
   727                           
   728                           ;Config register CONFIG2H @ 0x300003
   729                           ;	Watchdog Timer Enable bits
   730                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   731                           ;	Watchdog Timer Postscale Select bits
   732                           ;	WDTPS = 32768, 1:32768
   733   300003                     	org	3145731
   734   300003  3C                 	db	60
   735                           
   736                           ; Padding undefined space
   737   300004                     	org	3145732
   738   300004  FF                 	db	255
   739                           
   740                           ;Config register CONFIG3H @ 0x300005
   741                           ;	CCP2 MUX bit
   742                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   743                           ;	PORTB A/D Enable bit
   744                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   745                           ;	P3A/CCP3 Mux bit
   746                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   747                           ;	HFINTOSC Fast Start-up
   748                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   749                           ;	Timer3 Clock input mux bit
   750                           ;	T3CMX = PORTC0, T3CKI is on RC0
   751                           ;	ECCP2 B output mux bit
   752                           ;	P2BMX = PORTD2, P2B is on RD2
   753                           ;	MCLR Pin Enable bit
   754                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   755   300005                     	org	3145733
   756   300005  BF                 	db	191
   757                           
   758                           ;Config register CONFIG4L @ 0x300006
   759                           ;	Stack Full/Underflow Reset Enable bit
   760                           ;	STVREN = ON, Stack full/underflow will cause Reset
   761                           ;	Single-Supply ICSP Enable bit
   762                           ;	LVP = OFF, Single-Supply ICSP disabled
   763                           ;	Extended Instruction Set Enable bit
   764                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   765                           ;	Background Debug
   766                           ;	DEBUG = 0x1, unprogrammed default
   767   300006                     	org	3145734
   768   300006  81                 	db	129
   769                           
   770                           ; Padding undefined space
   771   300007                     	org	3145735
   772   300007  FF                 	db	255
   773                           
   774                           ;Config register CONFIG5L @ 0x300008
   775                           ;	Code Protection Block 0
   776                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   777                           ;	Code Protection Block 1
   778                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   779                           ;	Code Protection Block 2
   780                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   781                           ;	Code Protection Block 3
   782                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   783   300008                     	org	3145736
   784   300008  0F                 	db	15
   785                           
   786                           ;Config register CONFIG5H @ 0x300009
   787                           ;	Boot Block Code Protection bit
   788                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   789                           ;	Data EEPROM Code Protection bit
   790                           ;	CPD = OFF, Data EEPROM not code-protected
   791   300009                     	org	3145737
   792   300009  C0                 	db	192
   793                           
   794                           ;Config register CONFIG6L @ 0x30000A
   795                           ;	Write Protection Block 0
   796                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   797                           ;	Write Protection Block 1
   798                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   799                           ;	Write Protection Block 2
   800                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   801                           ;	Write Protection Block 3
   802                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   803   30000A                     	org	3145738
   804   30000A  0F                 	db	15
   805                           
   806                           ;Config register CONFIG6H @ 0x30000B
   807                           ;	Configuration Register Write Protection bit
   808                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   809                           ;	Boot Block Write Protection bit
   810                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   811                           ;	Data EEPROM Write Protection bit
   812                           ;	WRTD = OFF, Data EEPROM not write-protected
   813   30000B                     	org	3145739
   814   30000B  E0                 	db	224
   815                           
   816                           ;Config register CONFIG7L @ 0x30000C
   817                           ;	Table Read Protection Block 0
   818                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   819                           ;	Table Read Protection Block 1
   820                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   821                           ;	Table Read Protection Block 2
   822                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   823                           ;	Table Read Protection Block 3
   824                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   825   30000C                     	org	3145740
   826   30000C  0F                 	db	15
   827                           
   828                           ;Config register CONFIG7H @ 0x30000D
   829                           ;	Boot Block Table Read Protection bit
   830                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   831   30000D                     	org	3145741
   832   30000D  40                 	db	64
   833                           tosu	equ	0xFFF
   834                           tosh	equ	0xFFE
   835                           tosl	equ	0xFFD
   836                           stkptr	equ	0xFFC
   837                           pclatu	equ	0xFFB
   838                           pclath	equ	0xFFA
   839                           pcl	equ	0xFF9
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           prodh	equ	0xFF4
   845                           prodl	equ	0xFF3
   846                           indf0	equ	0xFEF
   847                           postinc0	equ	0xFEE
   848                           postdec0	equ	0xFED
   849                           preinc0	equ	0xFEC
   850                           plusw0	equ	0xFEB
   851                           fsr0h	equ	0xFEA
   852                           fsr0l	equ	0xFE9
   853                           wreg	equ	0xFE8
   854                           indf1	equ	0xFE7
   855                           postinc1	equ	0xFE6
   856                           postdec1	equ	0xFE5
   857                           preinc1	equ	0xFE4
   858                           plusw1	equ	0xFE3
   859                           fsr1h	equ	0xFE2
   860                           fsr1l	equ	0xFE1
   861                           bsr	equ	0xFE0
   862                           indf2	equ	0xFDF
   863                           postinc2	equ	0xFDE
   864                           postdec2	equ	0xFDD
   865                           preinc2	equ	0xFDC
   866                           plusw2	equ	0xFDB
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        25
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@a	PTR const unsigned char  size(1) Largest target is 23
		 -> TX_Text_1(COMRAM[23]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 23
		 -> TX_Text_1(COMRAM[23]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TX_EUSART in COMRAM

    _TX_EUSART->_Counter_Message
    _Counter_Message->_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _TX_EUSART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TX_EUSART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TX_EUSART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TX_EUSART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TX_EUSART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TX_EUSART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TX_EUSART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TX_EUSART in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TX_EUSART in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TX_EUSART in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TX_EUSART in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TX_EUSART in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TX_EUSART in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TX_EUSART in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TX_EUSART in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TX_EUSART in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _Configuration
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TX_EUSART                                            2     2      0     332
                                              5 COMRAM     2     2      0
                    _Counter_Message
                         _TX_Numbers
 ---------------------------------------------------------------------------------
 (3) _TX_Numbers                                           3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Counter_Message                                      2     2      0     212
                                              3 COMRAM     2     2      0
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration

 _TX_EUSART (ROOT)
   _Counter_Message
     _strlen
   _TX_Numbers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      20       1       34.0%
BITBIGSFRlhl        58      0       0      44        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1D      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhhll       8      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BITBIGSFRll          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      46        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Feb 02 22:16:53 2024

                     l50 1138                       l55 1086                       l49 1138  
                    l801 106A                      l811 1078                      l803 106C  
                    l821 1082                      l813 107A                      l805 1072  
                    l823 1084                      l815 107C                      l807 1074  
                    l817 107E                      l809 1076                      l819 1080  
                    l781 1056                      l791 1060                      l783 1058  
                    l775 104C                      l839 1134                      l793 1062  
                    l785 105A                      l777 1050                      l795 1064  
                    l787 105C                      l779 1054                      l797 1066  
                    l789 105E                      l799 1068               _TXSTA1bits 0FAC  
                   i2l70 10AA                     i2l62 004C                     i2l71 10AE  
                   i2l65 108A                     i2l74 10C0                     i2l83 104A  
                   i2l68 109C                     i2l79 100E                     _main 1134  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0021                     start 0058  
           ___param_bank 0000         Counter_Message@i 001D             _BAUDCON1bits 0FB8  
                  ?_main 001A                    i2l763 10EE                    i2l861 10CC  
                  i2l863 10E2                    i2l871 1028                    i2l857 10C2  
                  i2l873 102C                    i2l881 0012                    i2l859 10CA  
                  i2l867 1002                    i2l875 108A                    i2l891 003A  
                  i2l883 0020                    i2l869 101C                    i2l877 1098  
                  i2l893 003E                    i2l885 0022                    i2l879 10BC  
                  i2l895 0040                    i2l887 0026                    i2l889 0028  
                  _SPBRG 0FAF               _TX_Numbers 1088  __end_of_Counter_Message 104C  
                  tablat 0FF5                    ttemp5 0022                    ttemp6 0025  
                  ttemp7 0029                    status 0FD8                    wtemp8 0022  
        __initialization 10F0             __end_of_main 1140                   ??_main 0021  
          __activetblptr 0000                   _OSCCON 0FD3                   i2u9_40 10E2  
                 i2u9_41 10DE                   _TXREG1 0FAD              _Count0_Tens 0001  
                 isa$std 0001                   _strlen 10C2              ?_TX_Numbers 001A  
           __pdataCOMRAM 0001             __mediumconst 0000         ?_Counter_Message 001A  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
      __end_of_TX_EUSART 0058               __accesstop 0060  __end_of__initialization 1110  
          ___rparam_used 0001           __pcstackCOMRAM 001A    __end_of_Configuration 1088  
                ?_strlen 001A                  i2u10_40 101C                  i2u10_41 1018  
                i2u11_40 104A                  i2u11_41 1046                  i2u12_40 1098  
                i2u12_41 1094                  i2u13_40 10AA                  i2u13_41 10A6  
                i2u14_40 10BC                  i2u14_41 10B8                  i2u15_40 0020  
                i2u15_41 001C                  i2u16_40 003A                  i2u16_41 0036  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 10F0                  __ramtop 1000                  __ptext0 1134  
                __ptext1 104C                  __ptext3 1088                  __ptext4 1002  
                __ptext5 10C2             _Count0_Units 0002     end_of_initialization 1110  
              _RCSTAbits 0FAB                  postdec1 0FE5                  postinc0 0FEE  
                strlen@a 001C                  strlen@s 001A             ??_TX_Numbers 001C  
         TX_Numbers@Tens 001A                _TRISBbits 0F93                _TRISCbits 0F94  
              _TX_EUSART 0008       __end_of_TX_Numbers 10C2                _TX_Text_1 0003  
          __pidataCOMRAM 111A           __end_of_strlen 10F0      start_initialization 10F0  
             ?_TX_EUSART 001A                 ??_strlen 001C                __pintcode 0008  
            __smallconst 1000                 _PIE1bits 0F9D              ??_TX_EUSART 001F  
               _PIR1bits 0F9E        ??_Counter_Message 001D                 _RCONbits 0FD0  
            _INTCON2bits 0FF1                copy_data0 1104            _Configuration 104C  
               __Hrparam 0000                 __Lrparam 0000               _ANSELBbits 0F39  
             _ANSELCbits 0F3A           ?_Configuration 001A                 isa$xinst 0000  
               int$flags 0021               _INTCONbits 0FF2                 intlevel2 0000  
        ??_Configuration 0021          _Counter_Message 1002          TX_Numbers@Units 001C  
