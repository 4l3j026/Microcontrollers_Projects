

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 26 22:14:53 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   007E3C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _Time
    58   007E3C  0190               	dw	400
    59   000000                     _LATA	set	3977
    60   000000                     _TRISA	set	3986
    61   000000                     _ADCON1	set	4033
    62   000000                     _OSCCON	set	4051
    63   000000                     _TRISE	set	3990
    64   000000                     _TRISD	set	3989
    65   000000                     _TRISC	set	3988
    66   000000                     _TRISB	set	3987
    67   000000                     _LATE	set	3981
    68   000000                     _LATD	set	3980
    69   000000                     _LATC	set	3979
    70   000000                     _LATB	set	3978
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   007E4E                     __pcinit:
    76                           	callstack 0
    77   007E4E                     start_initialization:
    78                           	callstack 0
    79   007E4E                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (2 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84   007E4E  0E3C               	movlw	low __pidataCOMRAM
    85   007E50  6EF6               	movwf	tblptrl,c
    86   007E52  0E7E               	movlw	high __pidataCOMRAM
    87   007E54  6EF7               	movwf	tblptrh,c
    88   007E56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89   007E58  6EF8               	movwf	tblptru,c
    90   007E5A  0009               	tblrd		*+	;fetch initializer
    91   007E5C  CFF5 F009          	movff	tablat,__pdataCOMRAM
    92   007E60  0009               	tblrd		*+	;fetch initializer
    93   007E62  CFF5 F00A          	movff	tablat,__pdataCOMRAM+1
    94   007E66                     end_of_initialization:
    95                           	callstack 0
    96   007E66                     __end_of__initialization:
    97                           	callstack 0
    98   007E66  0100               	movlb	0
    99   007E68  EF1F  F03F         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	dataCOMRAM
   102   000009                     __pdataCOMRAM:
   103                           	callstack 0
   104   000009                     _Time:
   105                           	callstack 0
   106   000009                     	ds	2
   107                           
   108                           	psect	cstackCOMRAM
   109   000001                     __pcstackCOMRAM:
   110                           	callstack 0
   111   000001                     ??_Bitwise:
   112   000001                     
   113                           ; 1 bytes @ 0x0
   114   000001                     	ds	2
   115   000003                     Bitwise@D:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x2
   119   000003                     	ds	2
   120   000005                     Bitwise@E:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x4
   124   000005                     	ds	2
   125   000007                     Bitwise@C:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x6
   129   000007                     	ds	2
   130   000009                     
   131                           ; 1 bytes @ 0x8
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 27 in file "main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   151 ;;      Params:         0       0       0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 1
   157 ;; This function calls:
   158 ;;		_Bitwise
   159 ;;		_Configuration
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166   007E3E                     __ptext0:
   167                           	callstack 0
   168   007E3E                     _main:
   169                           	callstack 30
   170   007E3E                     
   171                           ;main.c: 30:     Configuration();
   172   007E3E  EC36  F03F         	call	_Configuration	;wreg free
   173   007E42                     l779:
   174                           
   175                           ;main.c: 34:         Bitwise();
   176   007E42  EC4F  F03F         	call	_Bitwise	;wreg free
   177   007E46  EF21  F03F         	goto	l779
   178   007E4A  EF00  F000         	goto	start
   179   007E4E                     __end_of_main:
   180                           	callstack 0
   181                           
   182 ;; *************** function _Configuration *****************
   183 ;; Defined at:
   184 ;;		line 42 in file "main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels used: 1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		_main
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text1
   212   007E6C                     __ptext1:
   213                           	callstack 0
   214   007E6C                     _Configuration:
   215                           	callstack 30
   216   007E6C                     
   217                           ;main.c: 44:     OSCCON = 0x72;
   218   007E6C  0E72               	movlw	114
   219   007E6E  6ED3               	movwf	211,c	;volatile
   220                           
   221                           ;main.c: 45:     ADCON1 = 0x0F;
   222   007E70  0E0F               	movlw	15
   223   007E72  6EC1               	movwf	193,c	;volatile
   224                           
   225                           ;main.c: 48:     TRISA = 0x00;
   226   007E74  0E00               	movlw	0
   227   007E76  6E92               	movwf	146,c	;volatile
   228                           
   229                           ;main.c: 49:     TRISB = 0x00;
   230   007E78  0E00               	movlw	0
   231   007E7A  6E93               	movwf	147,c	;volatile
   232                           
   233                           ;main.c: 50:     TRISC = 0x00;
   234   007E7C  0E00               	movlw	0
   235   007E7E  6E94               	movwf	148,c	;volatile
   236                           
   237                           ;main.c: 51:     TRISD = 0x00;
   238   007E80  0E00               	movlw	0
   239   007E82  6E95               	movwf	149,c	;volatile
   240                           
   241                           ;main.c: 52:     TRISE = 0x00;
   242   007E84  0E00               	movlw	0
   243   007E86  6E96               	movwf	150,c	;volatile
   244                           
   245                           ;main.c: 55:     LATA = 0x00;
   246   007E88  0E00               	movlw	0
   247   007E8A  6E89               	movwf	137,c	;volatile
   248                           
   249                           ;main.c: 56:     LATB = 0x00;
   250   007E8C  0E00               	movlw	0
   251   007E8E  6E8A               	movwf	138,c	;volatile
   252                           
   253                           ;main.c: 57:     LATC = 0x00;
   254   007E90  0E00               	movlw	0
   255   007E92  6E8B               	movwf	139,c	;volatile
   256                           
   257                           ;main.c: 58:     LATD = 0x00;
   258   007E94  0E00               	movlw	0
   259   007E96  6E8C               	movwf	140,c	;volatile
   260                           
   261                           ;main.c: 59:     LATE = 0x00;
   262   007E98  0E00               	movlw	0
   263   007E9A  6E8D               	movwf	141,c	;volatile
   264   007E9C  0012               	return		;funcret
   265   007E9E                     __end_of_Configuration:
   266                           	callstack 0
   267                           
   268 ;; *************** function _Bitwise *****************
   269 ;; Defined at:
   270 ;;		line 65 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  E               2    4[COMRAM] int 
   275 ;;  D               2    2[COMRAM] int 
   276 ;;  C               2    6[COMRAM] int 
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   286 ;;      Params:         0       0       0       0       0       0       0       0       0
   287 ;;      Locals:         6       0       0       0       0       0       0       0       0
   288 ;;      Temps:          2       0       0       0       0       0       0       0       0
   289 ;;      Totals:         8       0       0       0       0       0       0       0       0
   290 ;;Total ram usage:        8 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text2
   300   007E9E                     __ptext2:
   301                           	callstack 0
   302   007E9E                     _Bitwise:
   303                           	callstack 30
   304   007E9E                     
   305                           ;main.c: 94:     for (int C = 0; C < 7; C++) {
   306   007E9E  0E00               	movlw	0
   307   007EA0  6E08               	movwf	(Bitwise@C+1)^0,c
   308   007EA2  0E00               	movlw	0
   309   007EA4  6E07               	movwf	Bitwise@C^0,c
   310   007EA6                     l733:
   311   007EA6  BE08               	btfsc	(Bitwise@C+1)^0,7,c
   312   007EA8  EF5F  F03F         	goto	u11
   313   007EAC  5008               	movf	(Bitwise@C+1)^0,w,c
   314   007EAE  E109               	bnz	u10
   315   007EB0  0E07               	movlw	7
   316   007EB2  5C07               	subwf	Bitwise@C^0,w,c
   317   007EB4  A0D8               	btfss	status,0,c
   318   007EB6  EF5F  F03F         	goto	u11
   319   007EBA  EF61  F03F         	goto	u10
   320   007EBE                     u11:
   321   007EBE  EF63  F03F         	goto	l737
   322   007EC2                     u10:
   323   007EC2  EF9B  F03F         	goto	l753
   324   007EC6                     l737:
   325                           
   326                           ;main.c: 96:         if (C == 2){
   327   007EC6  0E02               	movlw	2
   328   007EC8  1807               	xorwf	Bitwise@C^0,w,c
   329   007ECA  1008               	iorwf	(Bitwise@C+1)^0,w,c
   330   007ECC  A4D8               	btfss	status,2,c
   331   007ECE  EF6B  F03F         	goto	u21
   332   007ED2  EF6D  F03F         	goto	u20
   333   007ED6                     u21:
   334   007ED6  EF7B  F03F         	goto	l743
   335   007EDA                     u20:
   336   007EDA                     
   337                           ;main.c: 97:             LATC = 0x14;
   338   007EDA  0E14               	movlw	20
   339   007EDC  6E8B               	movwf	139,c	;volatile
   340   007EDE                     
   341                           ;main.c: 98:             _delay((unsigned long)((Time)*(8000000/4000.0)));
   342   007EDE  0E05               	movlw	5
   343   007EE0  6E02               	movwf	(??_Bitwise+1)^0,c
   344   007EE2  0E0F               	movlw	15
   345   007EE4  6E01               	movwf	??_Bitwise^0,c
   346   007EE6  0EF1               	movlw	241
   347   007EE8                     u447:
   348   007EE8  2EE8               	decfsz	wreg,f,c
   349   007EEA  D7FE               	bra	u447
   350   007EEC  2E01               	decfsz	??_Bitwise^0,f,c
   351   007EEE  D7FC               	bra	u447
   352   007EF0  2E02               	decfsz	(??_Bitwise+1)^0,f,c
   353   007EF2  D7FA               	bra	u447
   354   007EF4  F000               	nop	
   355   007EF6                     l743:
   356                           
   357                           ;main.c: 101:         LATB = 0x00;
   358   007EF6  0E00               	movlw	0
   359   007EF8  6E8A               	movwf	138,c	;volatile
   360   007EFA                     
   361                           ;main.c: 103:         LATC = (0x03 << C);
   362   007EFA  C007  F001         	movff	Bitwise@C,??_Bitwise
   363   007EFE  0E03               	movlw	3
   364   007F00  6E02               	movwf	(??_Bitwise+1)^0,c
   365   007F02  2A01               	incf	??_Bitwise^0,f,c
   366   007F04  EF86  F03F         	goto	u34
   367   007F08                     u35:
   368   007F08  90D8               	bcf	status,0,c
   369   007F0A  3602               	rlcf	(??_Bitwise+1)^0,f,c
   370   007F0C                     u34:
   371   007F0C  2E01               	decfsz	??_Bitwise^0,f,c
   372   007F0E  EF84  F03F         	goto	u35
   373   007F12  5002               	movf	(??_Bitwise+1)^0,w,c
   374   007F14  6E8B               	movwf	139,c	;volatile
   375   007F16                     
   376                           ;main.c: 104:         _delay((unsigned long)((Time)*(8000000/4000.0)));
   377   007F16  0E05               	movlw	5
   378   007F18  6E02               	movwf	(??_Bitwise+1)^0,c
   379   007F1A  0E0F               	movlw	15
   380   007F1C  6E01               	movwf	??_Bitwise^0,c
   381   007F1E  0EF1               	movlw	241
   382   007F20                     u457:
   383   007F20  2EE8               	decfsz	wreg,f,c
   384   007F22  D7FE               	bra	u457
   385   007F24  2E01               	decfsz	??_Bitwise^0,f,c
   386   007F26  D7FC               	bra	u457
   387   007F28  2E02               	decfsz	(??_Bitwise+1)^0,f,c
   388   007F2A  D7FA               	bra	u457
   389   007F2C  F000               	nop	
   390   007F2E                     
   391                           ;main.c: 106:     }
   392   007F2E  4A07               	infsnz	Bitwise@C^0,f,c
   393   007F30  2A08               	incf	(Bitwise@C+1)^0,f,c
   394   007F32  EF53  F03F         	goto	l733
   395   007F36                     l753:
   396                           
   397                           ;main.c: 109:     for (int D = 0; D < 7; D++) {
   398   007F36  0E00               	movlw	0
   399   007F38  6E04               	movwf	(Bitwise@D+1)^0,c
   400   007F3A  0E00               	movlw	0
   401   007F3C  6E03               	movwf	Bitwise@D^0,c
   402   007F3E                     l755:
   403   007F3E  BE04               	btfsc	(Bitwise@D+1)^0,7,c
   404   007F40  EFAB  F03F         	goto	u41
   405   007F44  5004               	movf	(Bitwise@D+1)^0,w,c
   406   007F46  E109               	bnz	u40
   407   007F48  0E07               	movlw	7
   408   007F4A  5C03               	subwf	Bitwise@D^0,w,c
   409   007F4C  A0D8               	btfss	status,0,c
   410   007F4E  EFAB  F03F         	goto	u41
   411   007F52  EFAD  F03F         	goto	u40
   412   007F56                     u41:
   413   007F56  EFAF  F03F         	goto	l759
   414   007F5A                     u40:
   415   007F5A  EFCD  F03F         	goto	l765
   416   007F5E                     l759:
   417                           
   418                           ;main.c: 110:         LATD = (0x03 << D);
   419   007F5E  C003  F001         	movff	Bitwise@D,??_Bitwise
   420   007F62  0E03               	movlw	3
   421   007F64  6E02               	movwf	(??_Bitwise+1)^0,c
   422   007F66  2A01               	incf	??_Bitwise^0,f,c
   423   007F68  EFB8  F03F         	goto	u54
   424   007F6C                     u55:
   425   007F6C  90D8               	bcf	status,0,c
   426   007F6E  3602               	rlcf	(??_Bitwise+1)^0,f,c
   427   007F70                     u54:
   428   007F70  2E01               	decfsz	??_Bitwise^0,f,c
   429   007F72  EFB6  F03F         	goto	u55
   430   007F76  5002               	movf	(??_Bitwise+1)^0,w,c
   431   007F78  6E8C               	movwf	140,c	;volatile
   432   007F7A                     
   433                           ;main.c: 111:         _delay((unsigned long)((Time)*(8000000/4000.0)));
   434   007F7A  0E05               	movlw	5
   435   007F7C  6E02               	movwf	(??_Bitwise+1)^0,c
   436   007F7E  0E0F               	movlw	15
   437   007F80  6E01               	movwf	??_Bitwise^0,c
   438   007F82  0EF1               	movlw	241
   439   007F84                     u467:
   440   007F84  2EE8               	decfsz	wreg,f,c
   441   007F86  D7FE               	bra	u467
   442   007F88  2E01               	decfsz	??_Bitwise^0,f,c
   443   007F8A  D7FC               	bra	u467
   444   007F8C  2E02               	decfsz	(??_Bitwise+1)^0,f,c
   445   007F8E  D7FA               	bra	u467
   446   007F90  F000               	nop	
   447                           
   448                           ;main.c: 112:     }
   449   007F92  4A03               	infsnz	Bitwise@D^0,f,c
   450   007F94  2A04               	incf	(Bitwise@D+1)^0,f,c
   451   007F96  EF9F  F03F         	goto	l755
   452   007F9A                     l765:
   453                           
   454                           ;main.c: 115:     for (int E = 0; E < 3; E++) {
   455   007F9A  0E00               	movlw	0
   456   007F9C  6E06               	movwf	(Bitwise@E+1)^0,c
   457   007F9E  0E00               	movlw	0
   458   007FA0  6E05               	movwf	Bitwise@E^0,c
   459   007FA2                     l767:
   460   007FA2  BE06               	btfsc	(Bitwise@E+1)^0,7,c
   461   007FA4  EFDD  F03F         	goto	u61
   462   007FA8  5006               	movf	(Bitwise@E+1)^0,w,c
   463   007FAA  E109               	bnz	u60
   464   007FAC  0E03               	movlw	3
   465   007FAE  5C05               	subwf	Bitwise@E^0,w,c
   466   007FB0  A0D8               	btfss	status,0,c
   467   007FB2  EFDD  F03F         	goto	u61
   468   007FB6  EFDF  F03F         	goto	u60
   469   007FBA                     u61:
   470   007FBA  EFE1  F03F         	goto	l771
   471   007FBE                     u60:
   472   007FBE  EFFF  F03F         	goto	l53
   473   007FC2                     l771:
   474                           
   475                           ;main.c: 116:         LATE = (0x01 << E);
   476   007FC2  C005  F001         	movff	Bitwise@E,??_Bitwise
   477   007FC6  0E01               	movlw	1
   478   007FC8  6E02               	movwf	(??_Bitwise+1)^0,c
   479   007FCA  2A01               	incf	??_Bitwise^0,f,c
   480   007FCC  EFEA  F03F         	goto	u74
   481   007FD0                     u75:
   482   007FD0  90D8               	bcf	status,0,c
   483   007FD2  3602               	rlcf	(??_Bitwise+1)^0,f,c
   484   007FD4                     u74:
   485   007FD4  2E01               	decfsz	??_Bitwise^0,f,c
   486   007FD6  EFE8  F03F         	goto	u75
   487   007FDA  5002               	movf	(??_Bitwise+1)^0,w,c
   488   007FDC  6E8D               	movwf	141,c	;volatile
   489   007FDE                     
   490                           ;main.c: 117:         _delay((unsigned long)((Time)*(8000000/4000.0)));
   491   007FDE  0E05               	movlw	5
   492   007FE0  6E02               	movwf	(??_Bitwise+1)^0,c
   493   007FE2  0E0F               	movlw	15
   494   007FE4  6E01               	movwf	??_Bitwise^0,c
   495   007FE6  0EF1               	movlw	241
   496   007FE8                     u477:
   497   007FE8  2EE8               	decfsz	wreg,f,c
   498   007FEA  D7FE               	bra	u477
   499   007FEC  2E01               	decfsz	??_Bitwise^0,f,c
   500   007FEE  D7FC               	bra	u477
   501   007FF0  2E02               	decfsz	(??_Bitwise+1)^0,f,c
   502   007FF2  D7FA               	bra	u477
   503   007FF4  F000               	nop	
   504                           
   505                           ;main.c: 118:     }
   506   007FF6  4A05               	infsnz	Bitwise@E^0,f,c
   507   007FF8  2A06               	incf	(Bitwise@E+1)^0,f,c
   508   007FFA  EFD1  F03F         	goto	l767
   509   007FFE                     l53:
   510   007FFE  0012               	return		;funcret
   511   008000                     __end_of_Bitwise:
   512                           	callstack 0
   513   000000                     
   514                           	psect	rparam
   515   000000                     
   516                           	psect	idloc
   517                           
   518                           ;Config register IDLOC0 @ 0x200000
   519                           ;	unspecified, using default values
   520   200000                     	org	2097152
   521   200000  FF                 	db	255
   522                           
   523                           ;Config register IDLOC1 @ 0x200001
   524                           ;	unspecified, using default values
   525   200001                     	org	2097153
   526   200001  FF                 	db	255
   527                           
   528                           ;Config register IDLOC2 @ 0x200002
   529                           ;	unspecified, using default values
   530   200002                     	org	2097154
   531   200002  FF                 	db	255
   532                           
   533                           ;Config register IDLOC3 @ 0x200003
   534                           ;	unspecified, using default values
   535   200003                     	org	2097155
   536   200003  FF                 	db	255
   537                           
   538                           ;Config register IDLOC4 @ 0x200004
   539                           ;	unspecified, using default values
   540   200004                     	org	2097156
   541   200004  FF                 	db	255
   542                           
   543                           ;Config register IDLOC5 @ 0x200005
   544                           ;	unspecified, using default values
   545   200005                     	org	2097157
   546   200005  FF                 	db	255
   547                           
   548                           ;Config register IDLOC6 @ 0x200006
   549                           ;	unspecified, using default values
   550   200006                     	org	2097158
   551   200006  FF                 	db	255
   552                           
   553                           ;Config register IDLOC7 @ 0x200007
   554                           ;	unspecified, using default values
   555   200007                     	org	2097159
   556   200007  FF                 	db	255
   557                           
   558                           	psect	config
   559                           
   560                           ;Config register CONFIG1L @ 0x300000
   561                           ;	PLL Prescaler Selection bits
   562                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   563                           ;	System Clock Postscaler Selection bits
   564                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   565                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   566                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   567   300000                     	org	3145728
   568   300000  00                 	db	0
   569                           
   570                           ;Config register CONFIG1H @ 0x300001
   571                           ;	Oscillator Selection bits
   572                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   573                           ;	Fail-Safe Clock Monitor Enable bit
   574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   575                           ;	Internal/External Oscillator Switchover bit
   576                           ;	IESO = OFF, Oscillator Switchover mode disabled
   577   300001                     	org	3145729
   578   300001  08                 	db	8
   579                           
   580                           ;Config register CONFIG2L @ 0x300002
   581                           ;	Power-up Timer Enable bit
   582                           ;	PWRT = OFF, PWRT disabled
   583                           ;	Brown-out Reset Enable bits
   584                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   585                           ;	Brown-out Reset Voltage bits
   586                           ;	BORV = 3, Minimum setting 2.05V
   587                           ;	USB Voltage Regulator Enable bit
   588                           ;	VREGEN = OFF, USB voltage regulator disabled
   589   300002                     	org	3145730
   590   300002  19                 	db	25
   591                           
   592                           ;Config register CONFIG2H @ 0x300003
   593                           ;	Watchdog Timer Enable bit
   594                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   595                           ;	Watchdog Timer Postscale Select bits
   596                           ;	WDTPS = 32768, 1:32768
   597   300003                     	org	3145731
   598   300003  1E                 	db	30
   599                           
   600                           ; Padding undefined space
   601   300004                     	org	3145732
   602   300004  FF                 	db	255
   603                           
   604                           ;Config register CONFIG3H @ 0x300005
   605                           ;	CCP2 MUX bit
   606                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   607                           ;	PORTB A/D Enable bit
   608                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   609                           ;	Low-Power Timer 1 Oscillator Enable bit
   610                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   611                           ;	MCLR Pin Enable bit
   612                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   613   300005                     	org	3145733
   614   300005  83                 	db	131
   615                           
   616                           ;Config register CONFIG4L @ 0x300006
   617                           ;	Stack Full/Underflow Reset Enable bit
   618                           ;	STVREN = ON, Stack full/underflow will cause Reset
   619                           ;	Single-Supply ICSP Enable bit
   620                           ;	LVP = OFF, Single-Supply ICSP disabled
   621                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   622                           ;	ICPRT = OFF, ICPORT disabled
   623                           ;	Extended Instruction Set Enable bit
   624                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   625                           ;	Background Debugger Enable bit
   626                           ;	DEBUG = 0x1, unprogrammed default
   627   300006                     	org	3145734
   628   300006  81                 	db	129
   629                           
   630                           ; Padding undefined space
   631   300007                     	org	3145735
   632   300007  FF                 	db	255
   633                           
   634                           ;Config register CONFIG5L @ 0x300008
   635                           ;	Code Protection bit
   636                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   637                           ;	Code Protection bit
   638                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   639                           ;	Code Protection bit
   640                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   641                           ;	Code Protection bit
   642                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   643   300008                     	org	3145736
   644   300008  0F                 	db	15
   645                           
   646                           ;Config register CONFIG5H @ 0x300009
   647                           ;	Boot Block Code Protection bit
   648                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   649                           ;	Data EEPROM Code Protection bit
   650                           ;	CPD = OFF, Data EEPROM is not code-protected
   651   300009                     	org	3145737
   652   300009  C0                 	db	192
   653                           
   654                           ;Config register CONFIG6L @ 0x30000A
   655                           ;	Write Protection bit
   656                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   657                           ;	Write Protection bit
   658                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   659                           ;	Write Protection bit
   660                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   661                           ;	Write Protection bit
   662                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   663   30000A                     	org	3145738
   664   30000A  0F                 	db	15
   665                           
   666                           ;Config register CONFIG6H @ 0x30000B
   667                           ;	Configuration Register Write Protection bit
   668                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   669                           ;	Boot Block Write Protection bit
   670                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   671                           ;	Data EEPROM Write Protection bit
   672                           ;	WRTD = OFF, Data EEPROM is not write-protected
   673   30000B                     	org	3145739
   674   30000B  E0                 	db	224
   675                           
   676                           ;Config register CONFIG7L @ 0x30000C
   677                           ;	Table Read Protection bit
   678                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   679                           ;	Table Read Protection bit
   680                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   681                           ;	Table Read Protection bit
   682                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   683                           ;	Table Read Protection bit
   684                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   685   30000C                     	org	3145740
   686   30000C  0F                 	db	15
   687                           
   688                           ;Config register CONFIG7H @ 0x30000D
   689                           ;	Boot Block Table Read Protection bit
   690                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   691   30000D                     	org	3145741
   692   30000D  40                 	db	64
   693                           tosu	equ	0xFFF
   694                           tosh	equ	0xFFE
   695                           tosl	equ	0xFFD
   696                           stkptr	equ	0xFFC
   697                           pclatu	equ	0xFFB
   698                           pclath	equ	0xFFA
   699                           pcl	equ	0xFF9
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           prodh	equ	0xFF4
   705                           prodl	equ	0xFF3
   706                           indf0	equ	0xFEF
   707                           postinc0	equ	0xFEE
   708                           postdec0	equ	0xFED
   709                           preinc0	equ	0xFEC
   710                           plusw0	equ	0xFEB
   711                           fsr0h	equ	0xFEA
   712                           fsr0l	equ	0xFE9
   713                           wreg	equ	0xFE8
   714                           indf1	equ	0xFE7
   715                           postinc1	equ	0xFE6
   716                           postdec1	equ	0xFE5
   717                           preinc1	equ	0xFE4
   718                           plusw1	equ	0xFE3
   719                           fsr1h	equ	0xFE2
   720                           fsr1l	equ	0xFE1
   721                           bsr	equ	0xFE0
   722                           indf2	equ	0xFDF
   723                           postinc2	equ	0xFDE
   724                           postdec2	equ	0xFDD
   725                           preinc2	equ	0xFDC
   726                           plusw2	equ	0xFDB
   727                           fsr2h	equ	0xFDA
   728                           fsr2l	equ	0xFD9
   729                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Bitwise

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                            _Bitwise
                      _Configuration
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bitwise                                              8     8      0     150
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bitwise
   _Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       A       1       10.5%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRllh        2A      0       0      23        0.0%
BITBIGSFRllll       29      0       0      25        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BITBIGSFRlllh        4      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A       3        0.0%
DATA                 0      0       A       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 26 22:14:53 2023

                     l43 7E9C                       l53 7FFE                       u10 7EC2  
                     u11 7EBE                       u20 7EDA                       u21 7ED6  
                     u40 7F5A                       u41 7F56                       u34 7F0C  
                     u35 7F08                       u60 7FBE                       u61 7FBA  
                     u54 7F70                       u55 7F6C                       u74 7FD4  
                     u75 7FD0                      l731 7E9E                      l741 7EDE  
                    l733 7EA6                      l743 7EF6                      l761 7F7A  
                    l745 7EFA                      l753 7F36                      l737 7EC6  
                    l729 7E6C                      l771 7FC2                      l755 7F3E  
                    l747 7F16                      l739 7EDA                      l773 7FDE  
                    l765 7F9A                      l749 7F2E                      l767 7FA2  
                    l759 7F5E                      l777 7E3E                      l779 7E42  
                    u447 7EE8                      u457 7F20                      u467 7F84  
                    u477 7FE8                      wreg 0FE8                     _LATA 0F89  
                   _LATB 0F8A                     _LATC 0F8B                     _LATD 0F8C  
                   _LATE 0F8D                     _Time 0009                     _main 7E3E  
                   start 0000          __end_of_Bitwise 8000             ___param_bank 0000  
                  ?_main 0001                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95                    _TRISE 0F96  
                  tablat 0FF5                    status 0FD8          __initialization 7E4E  
           __end_of_main 7E4E                   ??_main 0009            __activetblptr 0000  
                 _ADCON1 0FC1                   _OSCCON 0FD3                ??_Bitwise 0001  
                 isa$std 0001             __pdataCOMRAM 0009                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 7E66            ___rparam_used 0001           __pcstackCOMRAM 0001  
  __end_of_Configuration 7E9E                  _Bitwise 7E9E                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E4E                  __ramtop 0800  
                __ptext0 7E3E                  __ptext1 7E6C                  __ptext2 7E9E  
   end_of_initialization 7E66            __pidataCOMRAM 7E3C      start_initialization 7E4E  
               ?_Bitwise 0001                 Bitwise@C 0007                 Bitwise@D 0003  
               Bitwise@E 0005            _Configuration 7E6C                 __Hrparam 0000  
               __Lrparam 0000           ?_Configuration 0001                 isa$xinst 0000  
        ??_Configuration 0001  
