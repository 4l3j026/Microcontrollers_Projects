

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 17 00:19:41 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 09/02/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _INTCONbits	set	4082
    53   000000                     _INT0IF	set	32657
    54   000000                     _LATD	set	3980
    55   000000                     _TRISB	set	3987
    56   000000                     _TRISD	set	3989
    57   000000                     _ADCON1	set	4033
    58   000000                     _OSCCON	set	4051
    59   000000                     _INTCON3bits	set	4080
    60   000000                     _INTCON2bits	set	4081
    61   000000                     _INTCON	set	4082
    62   000000                     _RCONbits	set	4048
    63   000000                     _TRISE	set	3990
    64   000000                     _LATEbits	set	3981
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   00009A                     __pcinit:
    70                           	callstack 0
    71   00009A                     start_initialization:
    72                           	callstack 0
    73   00009A                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (1 bytes)
    77   00009A  6A05               	clrf	__pbssCOMRAM& (0+255),c
    78   00009C                     end_of_initialization:
    79                           	callstack 0
    80   00009C                     __end_of__initialization:
    81                           	callstack 0
    82   00009C  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83   00009E  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84   0000A0  0100               	movlb	0
    85   0000A2  EF45  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssCOMRAM
    88   000005                     __pbssCOMRAM:
    89                           	callstack 0
    90   000005                     _Counter:
    91                           	callstack 0
    92   000005                     	ds	1
    93                           
    94                           	psect	cstackCOMRAM
    95   000001                     __pcstackCOMRAM:
    96                           	callstack 0
    97   000001                     ??_INT:
    98                           
    99                           ; 1 bytes @ 0x0
   100   000001                     	ds	2
   101   000003                     ??_Led:
   102                           
   103                           ; 1 bytes @ 0x2
   104   000003                     	ds	2
   105   000005                     
   106                           ; 1 bytes @ 0x4
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 33 in file "main.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   126 ;;      Params:         0       0       0       0       0       0       0       0       0
   127 ;;      Locals:         0       0       0       0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0       0       0
   129 ;;      Totals:         0       0       0       0       0       0       0       0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called: 2
   132 ;; This function calls:
   133 ;;		_Conf_Reg
   134 ;;		_Led
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141   00008A                     __ptext0:
   142                           	callstack 0
   143   00008A                     _main:
   144                           	callstack 29
   145   00008A                     
   146                           ;main.c: 36:     Conf_Reg();
   147   00008A  EC23  F000         	call	_Conf_Reg	;wreg free
   148   00008E                     l754:
   149                           
   150                           ;main.c: 40:         Led();
   151   00008E  EC38  F000         	call	_Led	;wreg free
   152   000092  EF47  F000         	goto	l754
   153   000096  EF07  F000         	goto	start
   154   00009A                     __end_of_main:
   155                           	callstack 0
   156                           
   157 ;; *************** function _Led *****************
   158 ;; Defined at:
   159 ;;		line 115 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   173 ;;      Params:         0       0       0       0       0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0
   175 ;;      Temps:          2       0       0       0       0       0       0       0       0
   176 ;;      Totals:         2       0       0       0       0       0       0       0       0
   177 ;;Total ram usage:        2 bytes
   178 ;; Hardware stack levels used: 1
   179 ;; Hardware stack levels required when called: 1
   180 ;; This function calls:
   181 ;;		Nothing
   182 ;; This function is called by:
   183 ;;		_main
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text1
   188   000070                     __ptext1:
   189                           	callstack 0
   190   000070                     _Led:
   191                           	callstack 29
   192   000070                     
   193                           ;main.c: 117:     LATEbits.LATE0 ^= 1;
   194   000070  708D               	btg	141,0,c	;volatile
   195   000072                     
   196                           ;main.c: 118:     _delay((unsigned long)((500)*(8000000/4000.0)));
   197   000072  0E06               	movlw	6
   198   000074  6E04               	movwf	(??_Led+1)^0,c
   199   000076  0E13               	movlw	19
   200   000078  6E03               	movwf	??_Led^0,c
   201   00007A  0EAE               	movlw	174
   202   00007C                     u27:
   203   00007C  2EE8               	decfsz	wreg,f,c
   204   00007E  D7FE               	bra	u27
   205   000080  2E03               	decfsz	??_Led^0,f,c
   206   000082  D7FC               	bra	u27
   207   000084  2E04               	decfsz	(??_Led+1)^0,f,c
   208   000086  D7FA               	bra	u27
   209   000088  0012               	return		;funcret
   210   00008A                     __end_of_Led:
   211                           	callstack 0
   212                           
   213 ;; *************** function _Conf_Reg *****************
   214 ;; Defined at:
   215 ;;		line 48 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels used: 1
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text2
   244   000046                     __ptext2:
   245                           	callstack 0
   246   000046                     _Conf_Reg:
   247                           	callstack 29
   248   000046                     
   249                           ;main.c: 50:     OSCCON = 0x72;
   250   000046  0E72               	movlw	114
   251   000048  6ED3               	movwf	211,c	;volatile
   252                           
   253                           ;main.c: 51:     ADCON1 = 0x0F;
   254   00004A  0E0F               	movlw	15
   255   00004C  6EC1               	movwf	193,c	;volatile
   256                           
   257                           ;main.c: 53:     TRISD = 0x00;
   258   00004E  0E00               	movlw	0
   259   000050  6E95               	movwf	149,c	;volatile
   260                           
   261                           ;main.c: 54:     TRISE = 0x00;
   262   000052  0E00               	movlw	0
   263   000054  6E96               	movwf	150,c	;volatile
   264                           
   265                           ;main.c: 56:     TRISB = 0x03;
   266   000056  0E03               	movlw	3
   267   000058  6E93               	movwf	147,c	;volatile
   268   00005A                     
   269                           ;main.c: 64:     RCONbits.IPEN = 0;
   270   00005A  9ED0               	bcf	208,7,c	;volatile
   271                           
   272                           ;main.c: 70:     INTCON = 0x90;
   273   00005C  0E90               	movlw	144
   274   00005E  6EF2               	movwf	242,c	;volatile
   275   000060                     
   276                           ;main.c: 75:     INTCON2bits.RBPU = 0;
   277   000060  9EF1               	bcf	241,7,c	;volatile
   278   000062                     
   279                           ;main.c: 76:     INTCON2bits.INTEDG0 = 0;
   280   000062  9CF1               	bcf	241,6,c	;volatile
   281   000064                     
   282                           ;main.c: 77:     INTCON2bits.INTEDG1 = 1;
   283   000064  8AF1               	bsf	241,5,c	;volatile
   284   000066                     
   285                           ;main.c: 80:     INTCONbits.INT0E = 1;
   286   000066  88F2               	bsf	242,4,c	;volatile
   287   000068                     
   288                           ;main.c: 81:     INTCONbits.INT0F = 0;
   289   000068  92F2               	bcf	242,1,c	;volatile
   290   00006A                     
   291                           ;main.c: 84:     INTCON3bits.INT1E = 1;
   292   00006A  86F0               	bsf	240,3,c	;volatile
   293   00006C                     
   294                           ;main.c: 85:     INTCON3bits.INT1F = 0;
   295   00006C  90F0               	bcf	240,0,c	;volatile
   296   00006E  0012               	return		;funcret
   297   000070                     __end_of_Conf_Reg:
   298                           	callstack 0
   299                           
   300 ;; *************** function _INT *****************
   301 ;; Defined at:
   302 ;;		line 102 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   316 ;;      Params:         0       0       0       0       0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0       0       0       0       0
   318 ;;      Temps:          2       0       0       0       0       0       0       0       0
   319 ;;      Totals:         2       0       0       0       0       0       0       0       0
   320 ;;Total ram usage:        2 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		Interrupt level 2
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	intcode
   330   000008                     __pintcode:
   331                           	callstack 0
   332   000008                     _INT:
   333                           	callstack 29
   334                           
   335                           ;incstack = 0
   336   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   337   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   338                           
   339                           	psect	intcode_body
   340   000012                     __pintcode_body:
   341                           	callstack 29
   342   000012                     int_func:
   343                           	callstack 29
   344   000012  0006               	pop		; remove dummy address from shadow register refresh
   345   000014                     
   346                           ;main.c: 104:     if (INT0IF) {
   347   000014  A2F2               	btfss	4082,1,c	;volatile
   348   000016  EF0F  F000         	goto	i2u1_41
   349   00001A  EF11  F000         	goto	i2u1_40
   350   00001E                     i2u1_41:
   351   00001E  EF21  F000         	goto	i2l51
   352   000022                     i2u1_40:
   353   000022                     
   354                           ;main.c: 105:         _delay((unsigned long)((100)*(8000000/4000.0)));
   355   000022  0E02               	movlw	2
   356   000024  6E02               	movwf	(??_INT+1)^0,c
   357   000026  0E04               	movlw	4
   358   000028  6E01               	movwf	??_INT^0,c
   359   00002A  0EBA               	movlw	186
   360   00002C                     i2u3_47:
   361   00002C  2EE8               	decfsz	wreg,f,c
   362   00002E  D7FE               	bra	i2u3_47
   363   000030  2E01               	decfsz	??_INT^0,f,c
   364   000032  D7FC               	bra	i2u3_47
   365   000034  2E02               	decfsz	(??_INT+1)^0,f,c
   366   000036  D7FA               	bra	i2u3_47
   367   000038  D000               	nop2	
   368   00003A                     
   369                           ;main.c: 106:         INT0IF = 0;
   370   00003A  92F2               	bcf	4082,1,c	;volatile
   371   00003C                     
   372                           ;main.c: 107:         LATD = Counter++;
   373   00003C  C005  FF8C         	movff	_Counter,3980	;volatile
   374   000040  2A05               	incf	_Counter^0,f,c
   375   000042                     i2l51:
   376   000042  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   377   000044  0011               	retfie		f
   378   000046                     __end_of_INT:
   379                           	callstack 0
   380   000000                     
   381                           	psect	rparam
   382   000000                     
   383                           	psect	temp
   384   000006                     btemp:
   385                           	callstack 0
   386   000006                     	ds	1
   387   000000                     int$flags	set	btemp
   388   000000                     wtemp8	set	btemp+1
   389   000000                     ttemp5	set	btemp+1
   390   000000                     ttemp6	set	btemp+4
   391   000000                     ttemp7	set	btemp+8
   392                           
   393                           	psect	config
   394                           
   395                           ;Config register CONFIG1L @ 0x300000
   396                           ;	PLL Prescaler Selection bits
   397                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   398                           ;	System Clock Postscaler Selection bits
   399                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   400                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   401                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   402   300000                     	org	3145728
   403   300000  00                 	db	0
   404                           
   405                           ;Config register CONFIG1H @ 0x300001
   406                           ;	Oscillator Selection bits
   407                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   408                           ;	Fail-Safe Clock Monitor Enable bit
   409                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   410                           ;	Internal/External Oscillator Switchover bit
   411                           ;	IESO = OFF, Oscillator Switchover mode disabled
   412   300001                     	org	3145729
   413   300001  0B                 	db	11
   414                           
   415                           ;Config register CONFIG2L @ 0x300002
   416                           ;	Power-up Timer Enable bit
   417                           ;	PWRT = OFF, PWRT disabled
   418                           ;	Brown-out Reset Enable bits
   419                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   420                           ;	Brown-out Reset Voltage bits
   421                           ;	BORV = 3, Minimum setting 2.05V
   422                           ;	USB Voltage Regulator Enable bit
   423                           ;	VREGEN = OFF, USB voltage regulator disabled
   424   300002                     	org	3145730
   425   300002  19                 	db	25
   426                           
   427                           ;Config register CONFIG2H @ 0x300003
   428                           ;	Watchdog Timer Enable bit
   429                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   430                           ;	Watchdog Timer Postscale Select bits
   431                           ;	WDTPS = 32768, 1:32768
   432   300003                     	org	3145731
   433   300003  1E                 	db	30
   434                           
   435                           ; Padding undefined space
   436   300004                     	org	3145732
   437   300004  FF                 	db	255
   438                           
   439                           ;Config register CONFIG3H @ 0x300005
   440                           ;	CCP2 MUX bit
   441                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   442                           ;	PORTB A/D Enable bit
   443                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   444                           ;	Low-Power Timer 1 Oscillator Enable bit
   445                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   446                           ;	MCLR Pin Enable bit
   447                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   448   300005                     	org	3145733
   449   300005  83                 	db	131
   450                           
   451                           ;Config register CONFIG4L @ 0x300006
   452                           ;	Stack Full/Underflow Reset Enable bit
   453                           ;	STVREN = ON, Stack full/underflow will cause Reset
   454                           ;	Single-Supply ICSP Enable bit
   455                           ;	LVP = OFF, Single-Supply ICSP disabled
   456                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   457                           ;	ICPRT = OFF, ICPORT disabled
   458                           ;	Extended Instruction Set Enable bit
   459                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   460                           ;	Background Debugger Enable bit
   461                           ;	DEBUG = 0x1, unprogrammed default
   462   300006                     	org	3145734
   463   300006  81                 	db	129
   464                           
   465                           ; Padding undefined space
   466   300007                     	org	3145735
   467   300007  FF                 	db	255
   468                           
   469                           ;Config register CONFIG5L @ 0x300008
   470                           ;	Code Protection bit
   471                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   472                           ;	Code Protection bit
   473                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   474                           ;	Code Protection bit
   475                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   476                           ;	Code Protection bit
   477                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   478   300008                     	org	3145736
   479   300008  0F                 	db	15
   480                           
   481                           ;Config register CONFIG5H @ 0x300009
   482                           ;	Boot Block Code Protection bit
   483                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   484                           ;	Data EEPROM Code Protection bit
   485                           ;	CPD = OFF, Data EEPROM is not code-protected
   486   300009                     	org	3145737
   487   300009  C0                 	db	192
   488                           
   489                           ;Config register CONFIG6L @ 0x30000A
   490                           ;	Write Protection bit
   491                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   492                           ;	Write Protection bit
   493                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   494                           ;	Write Protection bit
   495                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   496                           ;	Write Protection bit
   497                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   498   30000A                     	org	3145738
   499   30000A  0F                 	db	15
   500                           
   501                           ;Config register CONFIG6H @ 0x30000B
   502                           ;	Configuration Register Write Protection bit
   503                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   504                           ;	Boot Block Write Protection bit
   505                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   506                           ;	Data EEPROM Write Protection bit
   507                           ;	WRTD = OFF, Data EEPROM is not write-protected
   508   30000B                     	org	3145739
   509   30000B  E0                 	db	224
   510                           
   511                           ;Config register CONFIG7L @ 0x30000C
   512                           ;	Table Read Protection bit
   513                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   514                           ;	Table Read Protection bit
   515                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   516                           ;	Table Read Protection bit
   517                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   518                           ;	Table Read Protection bit
   519                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   520   30000C                     	org	3145740
   521   30000C  0F                 	db	15
   522                           
   523                           ;Config register CONFIG7H @ 0x30000D
   524                           ;	Boot Block Table Read Protection bit
   525                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   526   30000D                     	org	3145741
   527   30000D  40                 	db	64
   528                           tosu	equ	0xFFF
   529                           tosh	equ	0xFFE
   530                           tosl	equ	0xFFD
   531                           stkptr	equ	0xFFC
   532                           pclatu	equ	0xFFB
   533                           pclath	equ	0xFFA
   534                           pcl	equ	0xFF9
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           prodh	equ	0xFF4
   540                           prodl	equ	0xFF3
   541                           indf0	equ	0xFEF
   542                           postinc0	equ	0xFEE
   543                           postdec0	equ	0xFED
   544                           preinc0	equ	0xFEC
   545                           plusw0	equ	0xFEB
   546                           fsr0h	equ	0xFEA
   547                           fsr0l	equ	0xFE9
   548                           wreg	equ	0xFE8
   549                           indf1	equ	0xFE7
   550                           postinc1	equ	0xFE6
   551                           postdec1	equ	0xFE5
   552                           preinc1	equ	0xFE4
   553                           plusw1	equ	0xFE3
   554                           fsr1h	equ	0xFE2
   555                           fsr1l	equ	0xFE1
   556                           bsr	equ	0xFE0
   557                           indf2	equ	0xFDF
   558                           postinc2	equ	0xFDE
   559                           postdec2	equ	0xFDD
   560                           preinc2	equ	0xFDC
   561                           plusw2	equ	0xFDB
   562                           fsr2h	equ	0xFDA
   563                           fsr2l	equ	0xFD9
   564                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Led

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Conf_Reg
                                _Led
 ---------------------------------------------------------------------------------
 (1) _Led                                                  2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Conf_Reg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conf_Reg
   _Led

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       5       1        5.3%
BITBIGSFRlllll      2C      0       0      27        0.0%
BITBIGSFRllh        2A      0       0      24        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRllllh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllh        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      28        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 17 00:19:41 2023

                     l45 006E                       l54 0088                       u27 007C  
                    l730 0046                      l740 0066                      l732 005A  
                    l742 0068                      l734 0060                      l750 0072  
                    l744 006A                      l736 0062                      l752 008A  
                    l746 006C                      l738 0064                      l754 008E  
                    l748 0070                      _INT 0008                      _Led 0070  
                    wreg 0FE8                     ?_INT 0001                     ?_Led 0001  
                   _LATD 0F8C                     i2l51 0042                     _main 008A  
                   btemp 0006                     start 000E             ___param_bank 0000  
                  ??_INT 0001                    ??_Led 0003                    ?_main 0001  
                  i2l760 003A                    i2l762 003C                    i2l764 0040  
                  i2l756 0014                    i2l758 0022                    _TRISB 0F93  
                  _TRISD 0F95                    _TRISE 0F96                    ttemp5 0007  
                  ttemp6 000A                    ttemp7 000E                    wtemp8 0007  
       __end_of_Conf_Reg 0070          __initialization 009A             __end_of_main 009A  
                 ??_main 0005            __activetblptr 0000                   _ADCON1 0FC1  
                 _INT0IF 7F91                   _INTCON 0FF2                   _OSCCON 0FD3  
                 i2u1_40 0022                   i2u1_41 001E                   i2u3_47 002C  
                 isa$std 0001               __accesstop 0060  __end_of__initialization 009C  
          ___rparam_used 0001           __pcstackCOMRAM 0001                ?_Conf_Reg 0001  
             ??_Conf_Reg 0003                  _Counter 0005                  __Hparam 0000  
                __Lparam 0000                  __pcinit 009A                  __ramtop 0800  
                __ptext0 008A                  __ptext1 0070                  __ptext2 0046  
         __pintcode_body 0012     end_of_initialization 009C                  int_func 0012  
    start_initialization 009A              __end_of_INT 0046              __end_of_Led 008A  
            __pbssCOMRAM 0005                __pintcode 0008                 _LATEbits 0F8D  
               _RCONbits 0FD0                 _Conf_Reg 0046              _INTCON2bits 0FF1  
            _INTCON3bits 0FF0                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 int$flags 0006               _INTCONbits 0FF2  
               intlevel2 0000  
