

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 29 00:04:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 09/02/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _INT0IF	set	32657
    52   000000                     _TRISB	set	3987
    53   000000                     _TRISD	set	3989
    54   000000                     _ADCON1	set	4033
    55   000000                     _OSCCON	set	4051
    56   000000                     _INTCON3bits	set	4080
    57   000000                     _INTCON2bits	set	4081
    58   000000                     _INTCON	set	4082
    59   000000                     _RCONbits	set	4048
    60   000000                     _TRISE	set	3990
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   000066                     __pcinit:
    66                           	callstack 0
    67   000066                     start_initialization:
    68                           	callstack 0
    69   000066                     __initialization:
    70                           	callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (1 bytes)
    73   000066  6A03               	clrf	__pbssCOMRAM& (0+255),c
    74   000068                     end_of_initialization:
    75                           	callstack 0
    76   000068                     __end_of__initialization:
    77                           	callstack 0
    78   000068  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79   00006A  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80   00006C  0100               	movlb	0
    81   00006E  EF39  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	bssCOMRAM
    84   000003                     __pbssCOMRAM:
    85                           	callstack 0
    86   000003                     _Counter:
    87                           	callstack 0
    88   000003                     	ds	1
    89                           
    90                           	psect	cstackCOMRAM
    91   000001                     __pcstackCOMRAM:
    92                           	callstack 0
    93   000001                     ??_INT:
    94                           
    95                           ; 1 bytes @ 0x0
    96   000001                     	ds	2
    97   000003                     
    98                           ; 1 bytes @ 0x2
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 27 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called: 2
   124 ;; This function calls:
   125 ;;		_Conf_Reg
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132   000072                     __ptext0:
   133                           	callstack 0
   134   000072                     _main:
   135                           	callstack 29
   136   000072                     
   137                           ;main.c: 30:     Conf_Reg();
   138   000072  EC1F  F000         	call	_Conf_Reg	;wreg free
   139   000076                     l31:
   140   000076  EF3B  F000         	goto	l31
   141   00007A  EF07  F000         	goto	start
   142   00007E                     __end_of_main:
   143                           	callstack 0
   144                           
   145 ;; *************** function _Conf_Reg *****************
   146 ;; Defined at:
   147 ;;		line 40 in file "main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   161 ;;      Params:         0       0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels used: 1
   167 ;; Hardware stack levels required when called: 1
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176   00003E                     __ptext1:
   177                           	callstack 0
   178   00003E                     _Conf_Reg:
   179                           	callstack 29
   180   00003E                     
   181                           ;main.c: 42:     OSCCON = 0x72;
   182   00003E  0E72               	movlw	114
   183   000040  6ED3               	movwf	211,c	;volatile
   184                           
   185                           ;main.c: 43:     ADCON1 = 0x0F;
   186   000042  0E0F               	movlw	15
   187   000044  6EC1               	movwf	193,c	;volatile
   188                           
   189                           ;main.c: 45:     TRISD = 0x00;
   190   000046  0E00               	movlw	0
   191   000048  6E95               	movwf	149,c	;volatile
   192                           
   193                           ;main.c: 46:     TRISE = 0x00;
   194   00004A  0E00               	movlw	0
   195   00004C  6E96               	movwf	150,c	;volatile
   196                           
   197                           ;main.c: 48:     TRISB = 0x03;
   198   00004E  0E03               	movlw	3
   199   000050  6E93               	movwf	147,c	;volatile
   200   000052                     
   201                           ;main.c: 56:     RCONbits.IPEN = 0;
   202   000052  9ED0               	bcf	208,7,c	;volatile
   203                           
   204                           ;main.c: 62:     INTCON = 0x90;
   205   000054  0E90               	movlw	144
   206   000056  6EF2               	movwf	242,c	;volatile
   207   000058                     
   208                           ;main.c: 67:     INTCON2bits.RBPU = 0;
   209   000058  9EF1               	bcf	241,7,c	;volatile
   210   00005A                     
   211                           ;main.c: 68:     INTCON2bits.INTEDG0 = 0;
   212   00005A  9CF1               	bcf	241,6,c	;volatile
   213   00005C                     
   214                           ;main.c: 69:     INTCON2bits.INTEDG1 = 1;
   215   00005C  8AF1               	bsf	241,5,c	;volatile
   216   00005E                     
   217                           ;main.c: 71:     INTCON3bits.INT1E = 1;
   218   00005E  86F0               	bsf	240,3,c	;volatile
   219   000060                     
   220                           ;main.c: 72:     INTCON3bits.INT1F = 0;
   221   000060  90F0               	bcf	240,0,c	;volatile
   222   000062                     
   223                           ;main.c: 73:     INTCON3bits.INT1IP = 0;
   224   000062  9CF0               	bcf	240,6,c	;volatile
   225   000064  0012               	return		;funcret
   226   000066                     __end_of_Conf_Reg:
   227                           	callstack 0
   228                           
   229 ;; *************** function _INT *****************
   230 ;; Defined at:
   231 ;;		line 90 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0       0       0       0       0
   248 ;;      Totals:         2       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        2 bytes
   250 ;; Hardware stack levels used: 1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Interrupt level 2
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	intcode
   259   000008                     __pintcode:
   260                           	callstack 0
   261   000008                     _INT:
   262                           	callstack 29
   263                           
   264                           ;incstack = 0
   265   000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   266   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   267                           
   268                           	psect	intcode_body
   269   000012                     __pintcode_body:
   270                           	callstack 29
   271   000012                     int_func:
   272                           	callstack 29
   273   000012  0006               	pop		; remove dummy address from shadow register refresh
   274   000014                     
   275                           ;main.c: 92:     if (INT0IF) {
   276   000014  A2F2               	btfss	4082,1,c	;volatile
   277   000016  EF0F  F000         	goto	i2u1_41
   278   00001A  EF11  F000         	goto	i2u1_40
   279   00001E                     i2u1_41:
   280   00001E  EF1D  F000         	goto	i2l43
   281   000022                     i2u1_40:
   282   000022                     
   283                           ;main.c: 93:         _delay((unsigned long)((100)*(8000000/4000.0)));
   284   000022  0E02               	movlw	2
   285   000024  6E02               	movwf	(??_INT+1)^0,c
   286   000026  0E04               	movlw	4
   287   000028  6E01               	movwf	??_INT^0,c
   288   00002A  0EBA               	movlw	186
   289   00002C                     i2u2_47:
   290   00002C  2EE8               	decfsz	wreg,f,c
   291   00002E  D7FE               	bra	i2u2_47
   292   000030  2E01               	decfsz	??_INT^0,f,c
   293   000032  D7FC               	bra	i2u2_47
   294   000034  2E02               	decfsz	(??_INT+1)^0,f,c
   295   000036  D7FA               	bra	i2u2_47
   296   000038  D000               	nop2	
   297   00003A                     i2l43:
   298   00003A  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299   00003C  0011               	retfie		f
   300   00003E                     __end_of_INT:
   301                           	callstack 0
   302   000000                     
   303                           	psect	rparam
   304   000000                     
   305                           	psect	temp
   306   000004                     btemp:
   307                           	callstack 0
   308   000004                     	ds	1
   309   000000                     int$flags	set	btemp
   310   000000                     wtemp8	set	btemp+1
   311   000000                     ttemp5	set	btemp+1
   312   000000                     ttemp6	set	btemp+4
   313   000000                     ttemp7	set	btemp+8
   314                           
   315                           	psect	config
   316                           
   317                           ;Config register CONFIG1L @ 0x300000
   318                           ;	PLL Prescaler Selection bits
   319                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   320                           ;	System Clock Postscaler Selection bits
   321                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   322                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   323                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   324   300000                     	org	3145728
   325   300000  00                 	db	0
   326                           
   327                           ;Config register CONFIG1H @ 0x300001
   328                           ;	Oscillator Selection bits
   329                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   330                           ;	Fail-Safe Clock Monitor Enable bit
   331                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   332                           ;	Internal/External Oscillator Switchover bit
   333                           ;	IESO = OFF, Oscillator Switchover mode disabled
   334   300001                     	org	3145729
   335   300001  0B                 	db	11
   336                           
   337                           ;Config register CONFIG2L @ 0x300002
   338                           ;	Power-up Timer Enable bit
   339                           ;	PWRT = OFF, PWRT disabled
   340                           ;	Brown-out Reset Enable bits
   341                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   342                           ;	Brown-out Reset Voltage bits
   343                           ;	BORV = 3, Minimum setting 2.05V
   344                           ;	USB Voltage Regulator Enable bit
   345                           ;	VREGEN = OFF, USB voltage regulator disabled
   346   300002                     	org	3145730
   347   300002  19                 	db	25
   348                           
   349                           ;Config register CONFIG2H @ 0x300003
   350                           ;	Watchdog Timer Enable bit
   351                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   352                           ;	Watchdog Timer Postscale Select bits
   353                           ;	WDTPS = 32768, 1:32768
   354   300003                     	org	3145731
   355   300003  1E                 	db	30
   356                           
   357                           ; Padding undefined space
   358   300004                     	org	3145732
   359   300004  FF                 	db	255
   360                           
   361                           ;Config register CONFIG3H @ 0x300005
   362                           ;	CCP2 MUX bit
   363                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   364                           ;	PORTB A/D Enable bit
   365                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   366                           ;	Low-Power Timer 1 Oscillator Enable bit
   367                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   368                           ;	MCLR Pin Enable bit
   369                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   370   300005                     	org	3145733
   371   300005  83                 	db	131
   372                           
   373                           ;Config register CONFIG4L @ 0x300006
   374                           ;	Stack Full/Underflow Reset Enable bit
   375                           ;	STVREN = ON, Stack full/underflow will cause Reset
   376                           ;	Single-Supply ICSP Enable bit
   377                           ;	LVP = OFF, Single-Supply ICSP disabled
   378                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   379                           ;	ICPRT = OFF, ICPORT disabled
   380                           ;	Extended Instruction Set Enable bit
   381                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   382                           ;	Background Debugger Enable bit
   383                           ;	DEBUG = 0x1, unprogrammed default
   384   300006                     	org	3145734
   385   300006  81                 	db	129
   386                           
   387                           ; Padding undefined space
   388   300007                     	org	3145735
   389   300007  FF                 	db	255
   390                           
   391                           ;Config register CONFIG5L @ 0x300008
   392                           ;	Code Protection bit
   393                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   394                           ;	Code Protection bit
   395                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   396                           ;	Code Protection bit
   397                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   398                           ;	Code Protection bit
   399                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   400   300008                     	org	3145736
   401   300008  0F                 	db	15
   402                           
   403                           ;Config register CONFIG5H @ 0x300009
   404                           ;	Boot Block Code Protection bit
   405                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   406                           ;	Data EEPROM Code Protection bit
   407                           ;	CPD = OFF, Data EEPROM is not code-protected
   408   300009                     	org	3145737
   409   300009  C0                 	db	192
   410                           
   411                           ;Config register CONFIG6L @ 0x30000A
   412                           ;	Write Protection bit
   413                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   414                           ;	Write Protection bit
   415                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   416                           ;	Write Protection bit
   417                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   418                           ;	Write Protection bit
   419                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   420   30000A                     	org	3145738
   421   30000A  0F                 	db	15
   422                           
   423                           ;Config register CONFIG6H @ 0x30000B
   424                           ;	Configuration Register Write Protection bit
   425                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   426                           ;	Boot Block Write Protection bit
   427                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   428                           ;	Data EEPROM Write Protection bit
   429                           ;	WRTD = OFF, Data EEPROM is not write-protected
   430   30000B                     	org	3145739
   431   30000B  E0                 	db	224
   432                           
   433                           ;Config register CONFIG7L @ 0x30000C
   434                           ;	Table Read Protection bit
   435                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   436                           ;	Table Read Protection bit
   437                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   438                           ;	Table Read Protection bit
   439                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   440                           ;	Table Read Protection bit
   441                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   442   30000C                     	org	3145740
   443   30000C  0F                 	db	15
   444                           
   445                           ;Config register CONFIG7H @ 0x30000D
   446                           ;	Boot Block Table Read Protection bit
   447                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   448   30000D                     	org	3145741
   449   30000D  40                 	db	64
   450                           tosu	equ	0xFFF
   451                           tosh	equ	0xFFE
   452                           tosl	equ	0xFFD
   453                           stkptr	equ	0xFFC
   454                           pclatu	equ	0xFFB
   455                           pclath	equ	0xFFA
   456                           pcl	equ	0xFF9
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           prodh	equ	0xFF4
   462                           prodl	equ	0xFF3
   463                           indf0	equ	0xFEF
   464                           postinc0	equ	0xFEE
   465                           postdec0	equ	0xFED
   466                           preinc0	equ	0xFEC
   467                           plusw0	equ	0xFEB
   468                           fsr0h	equ	0xFEA
   469                           fsr0l	equ	0xFE9
   470                           wreg	equ	0xFE8
   471                           indf1	equ	0xFE7
   472                           postinc1	equ	0xFE6
   473                           postdec1	equ	0xFE5
   474                           preinc1	equ	0xFE4
   475                           plusw1	equ	0xFE3
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           bsr	equ	0xFE0
   479                           indf2	equ	0xFDF
   480                           postinc2	equ	0xFDE
   481                           postdec2	equ	0xFDD
   482                           preinc2	equ	0xFDC
   483                           plusw2	equ	0xFDB
   484                           fsr2h	equ	0xFDA
   485                           fsr2l	equ	0xFD9
   486                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Conf_Reg
 ---------------------------------------------------------------------------------
 (1) _Conf_Reg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conf_Reg

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       3       1        3.2%
BITBIGSFRllll       33      0       0      26        0.0%
BITBIGSFRllh        2A      0       0      24        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllh        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      27        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 29 00:04:40 2023

                     l31 0076                       l32 0076                       l37 0064  
                    l721 0052                      l731 0060                      l723 0058  
                    l733 0062                      l725 005A                      l727 005C  
                    l719 003E                      l735 0072                      l729 005E  
                    _INT 0008                      wreg 0FE8                     ?_INT 0001  
                   i2l43 003A                     _main 0072                     btemp 0004  
                   start 000E             ___param_bank 0000                    ??_INT 0001  
                  ?_main 0001                    i2l737 0014                    i2l739 0022  
                  _TRISB 0F93                    _TRISD 0F95                    _TRISE 0F96  
                  ttemp5 0005                    ttemp6 0008                    ttemp7 000C  
                  wtemp8 0005         __end_of_Conf_Reg 0066          __initialization 0066  
           __end_of_main 007E                   ??_main 0003            __activetblptr 0000  
                 _ADCON1 0FC1                   _INT0IF 7F91                   _INTCON 0FF2  
                 _OSCCON 0FD3                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_47 002C                   isa$std 0001               __accesstop 0060  
__end_of__initialization 0068            ___rparam_used 0001           __pcstackCOMRAM 0001  
              ?_Conf_Reg 0001               ??_Conf_Reg 0003                  _Counter 0003  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0066  
                __ramtop 0800                  __ptext0 0072                  __ptext1 003E  
         __pintcode_body 0012     end_of_initialization 0068                  int_func 0012  
    start_initialization 0066              __end_of_INT 003E              __pbssCOMRAM 0003  
              __pintcode 0008                 _RCONbits 0FD0                 _Conf_Reg 003E  
            _INTCON2bits 0FF1              _INTCON3bits 0FF0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 int$flags 0004  
               intlevel2 0000  
