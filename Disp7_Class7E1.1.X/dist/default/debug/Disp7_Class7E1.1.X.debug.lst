

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Dec 02 13:56:38 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000182                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for Data_Display@F3216
    61   000182  BF                 	db	191
    62   000183  86                 	db	134
    63   000184  DB                 	db	219
    64   000185  CF                 	db	207
    65   000186  E6                 	db	230
    66   000187  ED                 	db	237
    67   000188  FD                 	db	253
    68   000189  87                 	db	135
    69   00018A  FF                 	db	255
    70   00018B  E7                 	db	231
    71                           
    72                           ;initializer for Data_Display@F3218
    73   00018C  01                 	db	1
    74   00018D  02                 	db	2
    75   00018E  04                 	db	4
    76   00018F  08                 	db	8
    77   000000                     _INT0IF	set	32657
    78   000000                     _LATA	set	3977
    79   000000                     _TRISA	set	3986
    80   000000                     _ADCON1	set	4033
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84   000000                     _RCONbits	set	4048
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISB	set	3987
    87   000000                     _LATD	set	3980
    88   000000                     _LATB	set	3978
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000114                     __pcinit:
    94                           	callstack 0
    95   000114                     start_initialization:
    96                           	callstack 0
    97   000114                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (14 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000114  0E82               	movlw	low __pidataCOMRAM
   103   000116  6EF6               	movwf	tblptrl,c
   104   000118  0E01               	movlw	high __pidataCOMRAM
   105   00011A  6EF7               	movwf	tblptrh,c
   106   00011C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   00011E  6EF8               	movwf	tblptru,c
   108   000120  EE00  F015         	lfsr	0,__pdataCOMRAM
   109   000124  EE10 F00E          	lfsr	1,14
   110   000128                     copy_data0:
   111   000128  0009               	tblrd		*+
   112   00012A  CFF5 FFEE          	movff	tablat,postinc0
   113   00012E  50E5               	movf	postdec1,w,c
   114   000130  50E1               	movf	fsr1l,w,c
   115   000132  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (4 bytes)
   118   000134  6A26               	clrf	(__pbssCOMRAM+3)& (0+255),c
   119   000136  6A25               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   000138  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   00013A  6A23               	clrf	__pbssCOMRAM& (0+255),c
   122   00013C                     end_of_initialization:
   123                           	callstack 0
   124   00013C                     __end_of__initialization:
   125                           	callstack 0
   126   00013C  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127   00013E  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128   000140  0100               	movlb	0
   129   000142  EFB9  F000         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132   000023                     __pbssCOMRAM:
   133                           	callstack 0
   134   000023                     _Hundreds:
   135                           	callstack 0
   136   000023                     	ds	1
   137   000024                     _Tens:
   138                           	callstack 0
   139   000024                     	ds	1
   140   000025                     _Units:
   141                           	callstack 0
   142   000025                     	ds	1
   143   000026                     _Display:
   144                           	callstack 0
   145   000026                     	ds	1
   146                           
   147                           	psect	dataCOMRAM
   148   000015                     __pdataCOMRAM:
   149                           	callstack 0
   150   000015                     Data_Display@F3216:
   151                           	callstack 0
   152   000015                     	ds	10
   153   00001F                     Data_Display@F3218:
   154                           	callstack 0
   155   00001F                     	ds	4
   156                           
   157                           	psect	cstackCOMRAM
   158   000001                     __pcstackCOMRAM:
   159                           	callstack 0
   160   000001                     Data_Display@D:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x0
   164   000001                     	ds	1
   165   000002                     ??_Data_Display:
   166                           
   167                           ; 1 bytes @ 0x1
   168   000002                     	ds	1
   169   000003                     Data_Display@Numbers_2:
   170                           	callstack 0
   171                           
   172                           ; 10 bytes @ 0x2
   173   000003                     	ds	10
   174   00000D                     Data_Display@Display:
   175                           	callstack 0
   176                           
   177                           ; 4 bytes @ 0xC
   178   00000D                     	ds	4
   179   000011                     Data_Display@N:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x10
   183   000011                     	ds	1
   184   000012                     ??_Data_Show:
   185                           
   186                           ; 1 bytes @ 0x11
   187   000012                     	ds	1
   188   000013                     Data_Show@i:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x12
   192   000013                     	ds	2
   193   000015                     
   194                           ; 1 bytes @ 0x14
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 33 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;		None
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   214 ;;      Params:         0       0       0       0       0       0       0       0       0
   215 ;;      Locals:         0       0       0       0       0       0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0       0       0
   217 ;;      Totals:         0       0       0       0       0       0       0       0       0
   218 ;;Total ram usage:        0 bytes
   219 ;; Hardware stack levels required when called: 3
   220 ;; This function calls:
   221 ;;		_Configuration
   222 ;;		_Data_Show
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           	psect	text0
   229   000172                     __ptext0:
   230                           	callstack 0
   231   000172                     _main:
   232                           	callstack 28
   233   000172                     
   234                           ;main.c: 36:     Configuration();
   235   000172  ECA3  F000         	call	_Configuration	;wreg free
   236   000176                     l836:
   237                           
   238                           ;main.c: 41:         Data_Show();
   239   000176  EC69  F000         	call	_Data_Show	;wreg free
   240   00017A  EFBB  F000         	goto	l836
   241   00017E  EF07  F000         	goto	start
   242   000182                     __end_of_main:
   243                           	callstack 0
   244                           
   245 ;; *************** function _Data_Show *****************
   246 ;; Defined at:
   247 ;;		line 95 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;  i               2   18[COMRAM] int 
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   261 ;;      Params:         0       0       0       0       0       0       0       0       0
   262 ;;      Locals:         2       0       0       0       0       0       0       0       0
   263 ;;      Temps:          1       0       0       0       0       0       0       0       0
   264 ;;      Totals:         3       0       0       0       0       0       0       0       0
   265 ;;Total ram usage:        3 bytes
   266 ;; Hardware stack levels used: 1
   267 ;; Hardware stack levels required when called: 2
   268 ;; This function calls:
   269 ;;		_Data_Display
   270 ;; This function is called by:
   271 ;;		_main
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text1
   276   0000D2                     __ptext1:
   277                           	callstack 0
   278   0000D2                     _Data_Show:
   279                           	callstack 28
   280   0000D2                     
   281                           ;main.c: 98:     for (int i = 0; i < 4; i++) {
   282   0000D2  0E00               	movlw	0
   283   0000D4  6E14               	movwf	(Data_Show@i+1)^0,c
   284   0000D6  0E00               	movlw	0
   285   0000D8  6E13               	movwf	Data_Show@i^0,c
   286   0000DA                     l826:
   287                           
   288                           ;main.c: 100:         Data_Display(0, i);
   289   0000DA  C013  F001         	movff	Data_Show@i,Data_Display@D
   290   0000DE  0E00               	movlw	0
   291   0000E0  EC3E  F000         	call	_Data_Display
   292   0000E4                     
   293                           ;main.c: 101:         _delay((unsigned long)((80)*(8000000/4000.0)));
   294   0000E4  0ED0               	movlw	208
   295   0000E6  6E12               	movwf	??_Data_Show^0,c
   296   0000E8  0ECA               	movlw	202
   297   0000EA                     u97:
   298   0000EA  2EE8               	decfsz	wreg,f,c
   299   0000EC  D7FE               	bra	u97
   300   0000EE  2E12               	decfsz	??_Data_Show^0,f,c
   301   0000F0  D7FC               	bra	u97
   302   0000F2                     
   303                           ;main.c: 103:     }
   304   0000F2  4A13               	infsnz	Data_Show@i^0,f,c
   305   0000F4  2A14               	incf	(Data_Show@i+1)^0,f,c
   306   0000F6  BE14               	btfsc	(Data_Show@i+1)^0,7,c
   307   0000F8  EF87  F000         	goto	u81
   308   0000FC  5014               	movf	(Data_Show@i+1)^0,w,c
   309   0000FE  E109               	bnz	u80
   310   000100  0E04               	movlw	4
   311   000102  5C13               	subwf	Data_Show@i^0,w,c
   312   000104  A0D8               	btfss	status,0,c
   313   000106  EF87  F000         	goto	u81
   314   00010A  EF89  F000         	goto	u80
   315   00010E                     u81:
   316   00010E  EF6D  F000         	goto	l826
   317   000112                     u80:
   318   000112  0012               	return		;funcret
   319   000114                     __end_of_Data_Show:
   320                           	callstack 0
   321                           
   322 ;; *************** function _Data_Display *****************
   323 ;; Defined at:
   324 ;;		line 71 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  N               1    wreg     unsigned char 
   327 ;;  D               1    0[COMRAM] unsigned char 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  N               1   16[COMRAM] unsigned char 
   330 ;;  Numbers_2      10    2[COMRAM] unsigned char [10]
   331 ;;  Display         4   12[COMRAM] unsigned char [4]
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         1       0       0       0       0       0       0       0       0
   342 ;;      Locals:        15       0       0       0       0       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0       0       0       0       0
   344 ;;      Totals:        17       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:       17 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_Data_Show
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356   00007C                     __ptext2:
   357                           	callstack 0
   358   00007C                     _Data_Display:
   359                           	callstack 28
   360                           
   361                           ;incstack = 0
   362                           ;Data_Display@N stored from wreg
   363   00007C  6E11               	movwf	Data_Display@N^0,c
   364   00007E                     
   365                           ;main.c: 82:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   366   00007E  EE20  F015         	lfsr	2,Data_Display@F3216
   367   000082  EE10  F003         	lfsr	1,Data_Display@Numbers_2
   368   000086  0E09               	movlw	9
   369   000088                     u71:
   370   000088  CFDB FFE3          	movff	plusw2,plusw1
   371   00008C  06E8               	decf	wreg,f,c
   372   00008E  E2FC               	bc	u71
   373   000090                     
   374                           ;main.c: 84:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   375   000090  C01F  F00D         	movff	Data_Display@F3218,Data_Display@Display
   376   000094  C020  F00E         	movff	Data_Display@F3218+1,Data_Display@Display+1
   377   000098  C021  F00F         	movff	Data_Display@F3218+2,Data_Display@Display+2
   378   00009C  C022  F010         	movff	Data_Display@F3218+3,Data_Display@Display+3
   379   0000A0                     
   380                           ;main.c: 87:     LATD = Numbers_2 [N];
   381   0000A0  0E03               	movlw	low Data_Display@Numbers_2
   382   0000A2  2411               	addwf	Data_Display@N^0,w,c
   383   0000A4  6ED9               	movwf	fsr2l,c
   384   0000A6  6ADA               	clrf	fsr2h,c
   385   0000A8  0E00               	movlw	high Data_Display@Numbers_2
   386   0000AA  22DA               	addwfc	fsr2h,f,c
   387   0000AC  50DF               	movf	indf2,w,c
   388   0000AE  6E8C               	movwf	140,c	;volatile
   389   0000B0                     
   390                           ;main.c: 88:     LATA = Display [D];
   391   0000B0  0E0D               	movlw	low Data_Display@Display
   392   0000B2  2401               	addwf	Data_Display@D^0,w,c
   393   0000B4  6ED9               	movwf	fsr2l,c
   394   0000B6  6ADA               	clrf	fsr2h,c
   395   0000B8  0E00               	movlw	high Data_Display@Display
   396   0000BA  22DA               	addwfc	fsr2h,f,c
   397   0000BC  50DF               	movf	indf2,w,c
   398   0000BE  6E89               	movwf	137,c	;volatile
   399   0000C0                     
   400                           ;main.c: 89:     _delay((unsigned long)((40)*(8000000/4000.0)));
   401   0000C0  0E68               	movlw	104
   402   0000C2  6E02               	movwf	??_Data_Display^0,c
   403   0000C4  0EE4               	movlw	228
   404   0000C6                     u107:
   405   0000C6  2EE8               	decfsz	wreg,f,c
   406   0000C8  D7FE               	bra	u107
   407   0000CA  2E02               	decfsz	??_Data_Display^0,f,c
   408   0000CC  D7FC               	bra	u107
   409   0000CE  D000               	nop2	
   410   0000D0  0012               	return		;funcret
   411   0000D2                     __end_of_Data_Display:
   412                           	callstack 0
   413                           
   414 ;; *************** function _Configuration *****************
   415 ;; Defined at:
   416 ;;		line 47 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text3
   445   000146                     __ptext3:
   446                           	callstack 0
   447   000146                     _Configuration:
   448                           	callstack 29
   449   000146                     
   450                           ;main.c: 49:     OSCCON = 0x72;
   451   000146  0E72               	movlw	114
   452   000148  6ED3               	movwf	211,c	;volatile
   453                           
   454                           ;main.c: 50:     ADCON1 = 0x0F;
   455   00014A  0E0F               	movlw	15
   456   00014C  6EC1               	movwf	193,c	;volatile
   457                           
   458                           ;main.c: 52:     TRISA = 0x00;
   459   00014E  0E00               	movlw	0
   460   000150  6E92               	movwf	146,c	;volatile
   461                           
   462                           ;main.c: 53:     TRISB = 0x03;
   463   000152  0E03               	movlw	3
   464   000154  6E93               	movwf	147,c	;volatile
   465                           
   466                           ;main.c: 54:     TRISD = 0x00;
   467   000156  0E00               	movlw	0
   468   000158  6E95               	movwf	149,c	;volatile
   469                           
   470                           ;main.c: 56:     LATA = 0x00;
   471   00015A  0E00               	movlw	0
   472   00015C  6E89               	movwf	137,c	;volatile
   473                           
   474                           ;main.c: 57:     LATB = 0x00;
   475   00015E  0E00               	movlw	0
   476   000160  6E8A               	movwf	138,c	;volatile
   477                           
   478                           ;main.c: 58:     LATD = 0x00;
   479   000162  0E00               	movlw	0
   480   000164  6E8C               	movwf	140,c	;volatile
   481   000166                     
   482                           ;main.c: 61:     RCONbits.IPEN = 0;
   483   000166  9ED0               	bcf	208,7,c	;volatile
   484   000168                     
   485                           ;main.c: 62:     INTCONbits.GIE = 1;
   486   000168  8EF2               	bsf	242,7,c	;volatile
   487   00016A                     
   488                           ;main.c: 63:     INTCONbits.INT0IE = 1;
   489   00016A  88F2               	bsf	242,4,c	;volatile
   490   00016C                     
   491                           ;main.c: 64:     INTCONbits.INT0IF = 0;
   492   00016C  92F2               	bcf	242,1,c	;volatile
   493   00016E                     
   494                           ;main.c: 65:     INTCON2bits.INTEDG0 = 0;
   495   00016E  9CF1               	bcf	241,6,c	;volatile
   496   000170  0012               	return		;funcret
   497   000172                     __end_of_Configuration:
   498                           	callstack 0
   499                           
   500 ;; *************** function _INT *****************
   501 ;; Defined at:
   502 ;;		line 110 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       0       0       0       0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		Interrupt level 2
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	intcode
   530   000008                     __pintcode:
   531                           	callstack 0
   532   000008                     _INT:
   533                           	callstack 28
   534                           
   535                           ;incstack = 0
   536   000008  8227               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   537   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   538                           
   539                           	psect	intcode_body
   540   000012                     __pintcode_body:
   541                           	callstack 28
   542   000012                     int_func:
   543                           	callstack 28
   544   000012  0006               	pop		; remove dummy address from shadow register refresh
   545   000014                     
   546                           ;main.c: 112:     if (INT0IF) {
   547   000014  A2F2               	btfss	4082,1,c	;volatile
   548   000016  EF0F  F000         	goto	i2u3_41
   549   00001A  EF11  F000         	goto	i2u3_40
   550   00001E                     i2u3_41:
   551   00001E  EF3C  F000         	goto	i2l72
   552   000022                     i2u3_40:
   553   000022                     
   554                           ;main.c: 114:         INT0IF = 0;
   555   000022  92F2               	bcf	4082,1,c	;volatile
   556   000024                     
   557                           ;main.c: 115:         Units++;
   558   000024  2A25               	incf	_Units^0,f,c
   559   000026                     
   560                           ;main.c: 116:         if (Units == 10) {
   561   000026  0E0A               	movlw	10
   562   000028  1825               	xorwf	_Units^0,w,c
   563   00002A  A4D8               	btfss	status,2,c
   564   00002C  EF1A  F000         	goto	i2u4_41
   565   000030  EF1C  F000         	goto	i2u4_40
   566   000034                     i2u4_41:
   567   000034  EF21  F000         	goto	i2l800
   568   000038                     i2u4_40:
   569   000038                     
   570                           ;main.c: 118:             Units = 0;
   571   000038  0E00               	movlw	0
   572   00003A  6E25               	movwf	_Units^0,c
   573   00003C                     
   574                           ;main.c: 119:             Tens++;
   575   00003C  2A24               	incf	_Tens^0,f,c
   576                           
   577                           ;main.c: 121:         } else if (Tens == 10) {
   578   00003E  EF3C  F000         	goto	i2l72
   579   000042                     i2l800:
   580   000042  0E0A               	movlw	10
   581   000044  1824               	xorwf	_Tens^0,w,c
   582   000046  A4D8               	btfss	status,2,c
   583   000048  EF28  F000         	goto	i2u5_41
   584   00004C  EF2A  F000         	goto	i2u5_40
   585   000050                     i2u5_41:
   586   000050  EF2F  F000         	goto	i2l806
   587   000054                     i2u5_40:
   588   000054                     
   589                           ;main.c: 123:             Tens = 0;
   590   000054  0E00               	movlw	0
   591   000056  6E24               	movwf	_Tens^0,c
   592   000058                     
   593                           ;main.c: 124:             Hundreds++;
   594   000058  2A23               	incf	_Hundreds^0,f,c
   595                           
   596                           ;main.c: 126:         } else if (Hundreds == 10) {
   597   00005A  EF3C  F000         	goto	i2l72
   598   00005E                     i2l806:
   599   00005E  0E0A               	movlw	10
   600   000060  1823               	xorwf	_Hundreds^0,w,c
   601   000062  A4D8               	btfss	status,2,c
   602   000064  EF36  F000         	goto	i2u6_41
   603   000068  EF38  F000         	goto	i2u6_40
   604   00006C                     i2u6_41:
   605   00006C  EF3C  F000         	goto	i2l68
   606   000070                     i2u6_40:
   607   000070                     
   608                           ;main.c: 128:             Hundreds = 0;
   609   000070  0E00               	movlw	0
   610   000072  6E23               	movwf	_Hundreds^0,c
   611   000074  EF3C  F000         	goto	i2l72
   612   000078                     i2l68:
   613   000078                     i2l72:
   614   000078  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   615   00007A  0011               	retfie		f
   616   00007C                     __end_of_INT:
   617                           	callstack 0
   618   000000                     
   619                           	psect	rparam
   620   000000                     
   621                           	psect	temp
   622   000027                     btemp:
   623                           	callstack 0
   624   000027                     	ds	1
   625   000000                     int$flags	set	btemp
   626   000000                     wtemp8	set	btemp+1
   627   000000                     ttemp5	set	btemp+1
   628   000000                     ttemp6	set	btemp+4
   629   000000                     ttemp7	set	btemp+8
   630                           
   631                           	psect	config
   632                           
   633                           ;Config register CONFIG1L @ 0x300000
   634                           ;	PLL Prescaler Selection bits
   635                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   636                           ;	System Clock Postscaler Selection bits
   637                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   638                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   639                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   640   300000                     	org	3145728
   641   300000  00                 	db	0
   642                           
   643                           ;Config register CONFIG1H @ 0x300001
   644                           ;	Oscillator Selection bits
   645                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   646                           ;	Fail-Safe Clock Monitor Enable bit
   647                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   648                           ;	Internal/External Oscillator Switchover bit
   649                           ;	IESO = OFF, Oscillator Switchover mode disabled
   650   300001                     	org	3145729
   651   300001  05                 	db	5
   652                           
   653                           ;Config register CONFIG2L @ 0x300002
   654                           ;	Power-up Timer Enable bit
   655                           ;	PWRT = OFF, PWRT disabled
   656                           ;	Brown-out Reset Enable bits
   657                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   658                           ;	Brown-out Reset Voltage bits
   659                           ;	BORV = 3, Minimum setting 2.05V
   660                           ;	USB Voltage Regulator Enable bit
   661                           ;	VREGEN = OFF, USB voltage regulator disabled
   662   300002                     	org	3145730
   663   300002  1F                 	db	31
   664                           
   665                           ;Config register CONFIG2H @ 0x300003
   666                           ;	Watchdog Timer Enable bit
   667                           ;	WDT = ON, WDT enabled
   668                           ;	Watchdog Timer Postscale Select bits
   669                           ;	WDTPS = 32768, 1:32768
   670   300003                     	org	3145731
   671   300003  1F                 	db	31
   672                           
   673                           ; Padding undefined space
   674   300004                     	org	3145732
   675   300004  FF                 	db	255
   676                           
   677                           ;Config register CONFIG3H @ 0x300005
   678                           ;	CCP2 MUX bit
   679                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   680                           ;	PORTB A/D Enable bit
   681                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   682                           ;	Low-Power Timer 1 Oscillator Enable bit
   683                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   684                           ;	MCLR Pin Enable bit
   685                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   686   300005                     	org	3145733
   687   300005  83                 	db	131
   688                           
   689                           ;Config register CONFIG4L @ 0x300006
   690                           ;	Stack Full/Underflow Reset Enable bit
   691                           ;	STVREN = ON, Stack full/underflow will cause Reset
   692                           ;	Single-Supply ICSP Enable bit
   693                           ;	LVP = ON, Single-Supply ICSP enabled
   694                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   695                           ;	ICPRT = OFF, ICPORT disabled
   696                           ;	Extended Instruction Set Enable bit
   697                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   698                           ;	Background Debugger Enable bit
   699                           ;	DEBUG = 0x1, unprogrammed default
   700   300006                     	org	3145734
   701   300006  85                 	db	133
   702                           
   703                           ; Padding undefined space
   704   300007                     	org	3145735
   705   300007  FF                 	db	255
   706                           
   707                           ;Config register CONFIG5L @ 0x300008
   708                           ;	Code Protection bit
   709                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   710                           ;	Code Protection bit
   711                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   712                           ;	Code Protection bit
   713                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   714                           ;	Code Protection bit
   715                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   716   300008                     	org	3145736
   717   300008  0F                 	db	15
   718                           
   719                           ;Config register CONFIG5H @ 0x300009
   720                           ;	Boot Block Code Protection bit
   721                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   722                           ;	Data EEPROM Code Protection bit
   723                           ;	CPD = OFF, Data EEPROM is not code-protected
   724   300009                     	org	3145737
   725   300009  C0                 	db	192
   726                           
   727                           ;Config register CONFIG6L @ 0x30000A
   728                           ;	Write Protection bit
   729                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   730                           ;	Write Protection bit
   731                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   732                           ;	Write Protection bit
   733                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   734                           ;	Write Protection bit
   735                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   736   30000A                     	org	3145738
   737   30000A  0F                 	db	15
   738                           
   739                           ;Config register CONFIG6H @ 0x30000B
   740                           ;	Configuration Register Write Protection bit
   741                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   742                           ;	Boot Block Write Protection bit
   743                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   744                           ;	Data EEPROM Write Protection bit
   745                           ;	WRTD = OFF, Data EEPROM is not write-protected
   746   30000B                     	org	3145739
   747   30000B  E0                 	db	224
   748                           
   749                           ;Config register CONFIG7L @ 0x30000C
   750                           ;	Table Read Protection bit
   751                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   752                           ;	Table Read Protection bit
   753                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   754                           ;	Table Read Protection bit
   755                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   756                           ;	Table Read Protection bit
   757                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   758   30000C                     	org	3145740
   759   30000C  0F                 	db	15
   760                           
   761                           ;Config register CONFIG7H @ 0x30000D
   762                           ;	Boot Block Table Read Protection bit
   763                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   764   30000D                     	org	3145741
   765   30000D  40                 	db	64
   766                           tosu	equ	0xFFF
   767                           tosh	equ	0xFFE
   768                           tosl	equ	0xFFD
   769                           stkptr	equ	0xFFC
   770                           pclatu	equ	0xFFB
   771                           pclath	equ	0xFFA
   772                           pcl	equ	0xFF9
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           prodh	equ	0xFF4
   778                           prodl	equ	0xFF3
   779                           indf0	equ	0xFEF
   780                           postinc0	equ	0xFEE
   781                           postdec0	equ	0xFED
   782                           preinc0	equ	0xFEC
   783                           plusw0	equ	0xFEB
   784                           fsr0h	equ	0xFEA
   785                           fsr0l	equ	0xFE9
   786                           wreg	equ	0xFE8
   787                           indf1	equ	0xFE7
   788                           postinc1	equ	0xFE6
   789                           postdec1	equ	0xFE5
   790                           preinc1	equ	0xFE4
   791                           plusw1	equ	0xFE3
   792                           fsr1h	equ	0xFE2
   793                           fsr1l	equ	0xFE1
   794                           bsr	equ	0xFE0
   795                           indf2	equ	0xFDF
   796                           postinc2	equ	0xFDE
   797                           postdec2	equ	0xFDD
   798                           preinc2	equ	0xFDC
   799                           plusw2	equ	0xFDB
   800                           fsr2h	equ	0xFDA
   801                           fsr2l	equ	0xFD9
   802                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Show
    _Data_Show->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     236
                      _Configuration
                          _Data_Show
 ---------------------------------------------------------------------------------
 (1) _Data_Show                                            3     3      0     236
                                             17 COMRAM     3     3      0
                       _Data_Display
 ---------------------------------------------------------------------------------
 (2) _Data_Display                                        17    16      1     168
                                              0 COMRAM    17    16      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Show
     _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      26       1       40.4%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      29        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Dec 02 13:56:38 2023

                     l61 0112                       l56 00D0                       l49 0170  
                     u71 0088                       u80 0112                       u81 010E  
                     u97 00EA                      l810 007E                      l812 0090  
                    l820 00D2                      l814 00A0                      l830 00F2  
                    l760 0166                      l816 00B0                      l832 00F6  
                    l762 0168                      l818 00C0                      l826 00DA  
                    l834 0172                      l764 016A                      l828 00E4  
                    l836 0176                      l766 016C                      l758 0146  
                    l768 016E                      u107 00C6                      _INT 0008  
                    wreg 0FE8                     ?_INT 0001                     _LATA 0F89  
                   _LATB 0F8A                     _LATD 0F8C                     i2l72 0078  
                   i2l68 0078                     _Tens 0024                     _main 0172  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 0027                     start 000E             ___param_bank 0000  
                  ??_INT 0001                    ?_main 0001                    i2l800 0042  
                  i2l802 0054                    i2l804 0058                    i2l806 005E  
                  i2l808 0070                    i2l790 0022                    i2l792 0024  
                  i2l794 0026                    i2l796 0038                    i2l788 0014  
                  i2l798 003C                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISD 0F95                    _Units 0025                    tablat 0FF5  
                  plusw1 0FE3                    plusw2 0FDB                    ttemp5 0028  
                  ttemp6 002B                    ttemp7 002F                    status 0FD8  
                  wtemp8 0028          __initialization 0114             __end_of_main 0182  
                 ??_main 0015            __activetblptr 0000             _Data_Display 007C  
                 _ADCON1 0FC1    Data_Display@Numbers_2 0003                   _INT0IF 7F91  
                 _OSCCON 0FD3                   i2u3_40 0022                   i2u3_41 001E  
                 i2u4_40 0038                   i2u4_41 0034                   i2u5_40 0054  
                 i2u5_41 0050                   i2u6_40 0070                   i2u6_41 006C  
                 isa$std 0001             __pdataCOMRAM 0015                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8        __end_of_Data_Show 0114  
             __accesstop 0060  __end_of__initialization 013C            ___rparam_used 0001  
         __pcstackCOMRAM 0001      Data_Display@Display 000D        Data_Display@F3216 0015  
      Data_Display@F3218 001F    __end_of_Configuration 0172                  _Display 0026  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0114  
                __ramtop 0800                  __ptext0 0172                  __ptext1 00D2  
                __ptext2 007C                  __ptext3 0146           __pintcode_body 0012  
   end_of_initialization 013C                  int_func 0012                  postdec1 0FE5  
                postinc0 0FEE                _Data_Show 00D2            __pidataCOMRAM 0182  
    start_initialization 0114              __end_of_INT 007C               ?_Data_Show 0001  
            __pbssCOMRAM 0023                __pintcode 0008            ?_Data_Display 0001  
            ??_Data_Show 0012                 _RCONbits 0FD0           ??_Data_Display 0002  
            _INTCON2bits 0FF1                copy_data0 0128            _Configuration 0146  
               _Hundreds 0023                 __Hrparam 0000                 __Lrparam 0000  
         ?_Configuration 0001               Data_Show@i 0013                 isa$xinst 0000  
               int$flags 0027               _INTCONbits 0FF2            Data_Display@D 0001  
          Data_Display@N 0011                 intlevel2 0000     __end_of_Data_Display 00D2  
        ??_Configuration 0001  
