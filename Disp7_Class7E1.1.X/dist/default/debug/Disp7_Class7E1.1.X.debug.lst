

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Dec 01 02:35:15 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000186                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for Data_Display@F3217
    61   000186  BF                 	db	191
    62   000187  86                 	db	134
    63   000188  DB                 	db	219
    64   000189  CF                 	db	207
    65   00018A  E6                 	db	230
    66   00018B  ED                 	db	237
    67   00018C  FD                 	db	253
    68   00018D  87                 	db	135
    69   00018E  FF                 	db	255
    70   00018F  E7                 	db	231
    71                           
    72                           ;initializer for Data_Display@F3219
    73   000190  01                 	db	1
    74   000191  02                 	db	2
    75   000192  04                 	db	4
    76   000193  08                 	db	8
    77   000000                     _INT0IF	set	32657
    78   000000                     _LATA	set	3977
    79   000000                     _TRISA	set	3986
    80   000000                     _ADCON1	set	4033
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84   000000                     _RCONbits	set	4048
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISB	set	3987
    87   000000                     _LATD	set	3980
    88   000000                     _LATB	set	3978
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000126                     __pcinit:
    94                           	callstack 0
    95   000126                     start_initialization:
    96                           	callstack 0
    97   000126                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (14 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000126  0E86               	movlw	low __pidataCOMRAM
   103   000128  6EF6               	movwf	tblptrl,c
   104   00012A  0E01               	movlw	high __pidataCOMRAM
   105   00012C  6EF7               	movwf	tblptrh,c
   106   00012E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   000130  6EF8               	movwf	tblptru,c
   108   000132  EE00  F016         	lfsr	0,__pdataCOMRAM
   109   000136  EE10 F00E          	lfsr	1,14
   110   00013A                     copy_data0:
   111   00013A  0009               	tblrd		*+
   112   00013C  CFF5 FFEE          	movff	tablat,postinc0
   113   000140  50E5               	movf	postdec1,w,c
   114   000142  50E1               	movf	fsr1l,w,c
   115   000144  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (5 bytes)
   118   000146  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   119   000148  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120   00014A  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121   00014C  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122   00014E  6A24               	clrf	__pbssCOMRAM& (0+255),c
   123   000150                     end_of_initialization:
   124                           	callstack 0
   125   000150                     __end_of__initialization:
   126                           	callstack 0
   127   000150  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128   000152  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129   000154  0100               	movlb	0
   130   000156  EF6D  F000         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000024                     __pbssCOMRAM:
   134                           	callstack 0
   135   000024                     _Hundreds:
   136                           	callstack 0
   137   000024                     	ds	1
   138   000025                     _Tens:
   139                           	callstack 0
   140   000025                     	ds	1
   141   000026                     _Units:
   142                           	callstack 0
   143   000026                     	ds	1
   144   000027                     _Display:
   145                           	callstack 0
   146   000027                     	ds	1
   147   000028                     _Number_Counter:
   148                           	callstack 0
   149   000028                     	ds	1
   150                           
   151                           	psect	dataCOMRAM
   152   000016                     __pdataCOMRAM:
   153                           	callstack 0
   154   000016                     Data_Display@F3217:
   155                           	callstack 0
   156   000016                     	ds	10
   157   000020                     Data_Display@F3219:
   158                           	callstack 0
   159   000020                     	ds	4
   160                           
   161                           	psect	cstackCOMRAM
   162   000001                     __pcstackCOMRAM:
   163                           	callstack 0
   164   000001                     Data_Display@D:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x0
   168   000001                     	ds	1
   169   000002                     ??_Data_Display:
   170                           
   171                           ; 1 bytes @ 0x1
   172   000002                     	ds	2
   173   000004                     Data_Display@Numbers_2:
   174                           	callstack 0
   175                           
   176                           ; 10 bytes @ 0x3
   177   000004                     	ds	10
   178   00000E                     Data_Display@Display:
   179                           	callstack 0
   180                           
   181                           ; 4 bytes @ 0xD
   182   00000E                     	ds	4
   183   000012                     Data_Display@N:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x11
   187   000012                     	ds	1
   188   000013                     ??_main:
   189                           
   190                           ; 1 bytes @ 0x12
   191   000013                     	ds	1
   192   000014                     main@i:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x13
   196   000014                     	ds	2
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 32 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  i               2   19[COMRAM] int 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         2       0       0       0       0       0       0       0       0
   219 ;;      Temps:          1       0       0       0       0       0       0       0       0
   220 ;;      Totals:         3       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        3 bytes
   222 ;; Hardware stack levels required when called: 2
   223 ;; This function calls:
   224 ;;		_Configuration
   225 ;;		_Data_Display
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232   0000DA                     __ptext0:
   233                           	callstack 0
   234   0000DA                     _main:
   235                           	callstack 29
   236   0000DA                     
   237                           ;main.c: 35:     Configuration();
   238   0000DA  ECAD  F000         	call	_Configuration	;wreg free
   239   0000DE                     l819:
   240                           
   241                           ;main.c: 50:         for (int i = 0; i < 4; i++) {
   242   0000DE  0E00               	movlw	0
   243   0000E0  6E15               	movwf	(main@i+1)^0,c
   244   0000E2  0E00               	movlw	0
   245   0000E4  6E14               	movwf	main@i^0,c
   246   0000E6                     l825:
   247                           
   248                           ;main.c: 52:             Data_Display(0, i);
   249   0000E6  C014  F001         	movff	main@i,Data_Display@D
   250   0000EA  0E00               	movlw	0
   251   0000EC  EC3E  F000         	call	_Data_Display
   252   0000F0                     
   253                           ;main.c: 53:             _delay((unsigned long)((80)*(8000000/4000.0)));
   254   0000F0  0ED0               	movlw	208
   255   0000F2  6E13               	movwf	??_main^0,c
   256   0000F4  0ECA               	movlw	202
   257   0000F6                     u97:
   258   0000F6  2EE8               	decfsz	wreg,f,c
   259   0000F8  D7FE               	bra	u97
   260   0000FA  2E13               	decfsz	??_main^0,f,c
   261   0000FC  D7FC               	bra	u97
   262   0000FE                     
   263                           ;main.c: 55:         }
   264   0000FE  4A14               	infsnz	main@i^0,f,c
   265   000100  2A15               	incf	(main@i+1)^0,f,c
   266   000102  BE15               	btfsc	(main@i+1)^0,7,c
   267   000104  EF8D  F000         	goto	u81
   268   000108  5015               	movf	(main@i+1)^0,w,c
   269   00010A  E109               	bnz	u80
   270   00010C  0E04               	movlw	4
   271   00010E  5C14               	subwf	main@i^0,w,c
   272   000110  A0D8               	btfss	status,0,c
   273   000112  EF8D  F000         	goto	u81
   274   000116  EF8F  F000         	goto	u80
   275   00011A                     u81:
   276   00011A  EF73  F000         	goto	l825
   277   00011E                     u80:
   278   00011E  EF6F  F000         	goto	l819
   279   000122  EF07  F000         	goto	start
   280   000126                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _Data_Display *****************
   284 ;; Defined at:
   285 ;;		line 89 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  N               1    wreg     unsigned char 
   288 ;;  D               1    0[COMRAM] unsigned char 
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  N               1   17[COMRAM] unsigned char 
   291 ;;  Numbers_2      10    3[COMRAM] unsigned char [10]
   292 ;;  Display         4   13[COMRAM] unsigned char [4]
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   302 ;;      Params:         1       0       0       0       0       0       0       0       0
   303 ;;      Locals:        15       0       0       0       0       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0       0       0       0       0
   305 ;;      Totals:        18       0       0       0       0       0       0       0       0
   306 ;;Total ram usage:       18 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; Hardware stack levels required when called: 1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317   00007C                     __ptext1:
   318                           	callstack 0
   319   00007C                     _Data_Display:
   320                           	callstack 29
   321                           
   322                           ;incstack = 0
   323                           ;Data_Display@N stored from wreg
   324   00007C  6E12               	movwf	Data_Display@N^0,c
   325   00007E                     
   326                           ;main.c: 92:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   327   00007E  EE20  F016         	lfsr	2,Data_Display@F3217
   328   000082  EE10  F004         	lfsr	1,Data_Display@Numbers_2
   329   000086  0E09               	movlw	9
   330   000088                     u71:
   331   000088  CFDB FFE3          	movff	plusw2,plusw1
   332   00008C  06E8               	decf	wreg,f,c
   333   00008E  E2FC               	bc	u71
   334   000090                     
   335                           ;main.c: 94:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   336   000090  C020  F00E         	movff	Data_Display@F3219,Data_Display@Display
   337   000094  C021  F00F         	movff	Data_Display@F3219+1,Data_Display@Display+1
   338   000098  C022  F010         	movff	Data_Display@F3219+2,Data_Display@Display+2
   339   00009C  C023  F011         	movff	Data_Display@F3219+3,Data_Display@Display+3
   340   0000A0                     
   341                           ;main.c: 97:     LATD = Numbers_2 [N];
   342   0000A0  0E04               	movlw	low Data_Display@Numbers_2
   343   0000A2  2412               	addwf	Data_Display@N^0,w,c
   344   0000A4  6ED9               	movwf	fsr2l,c
   345   0000A6  6ADA               	clrf	fsr2h,c
   346   0000A8  0E00               	movlw	high Data_Display@Numbers_2
   347   0000AA  22DA               	addwfc	fsr2h,f,c
   348   0000AC  50DF               	movf	indf2,w,c
   349   0000AE  6E8C               	movwf	140,c	;volatile
   350   0000B0                     
   351                           ;main.c: 98:     LATA = Display [D];
   352   0000B0  0E0E               	movlw	low Data_Display@Display
   353   0000B2  2401               	addwf	Data_Display@D^0,w,c
   354   0000B4  6ED9               	movwf	fsr2l,c
   355   0000B6  6ADA               	clrf	fsr2h,c
   356   0000B8  0E00               	movlw	high Data_Display@Display
   357   0000BA  22DA               	addwfc	fsr2h,f,c
   358   0000BC  50DF               	movf	indf2,w,c
   359   0000BE  6E89               	movwf	137,c	;volatile
   360   0000C0                     
   361                           ;main.c: 99:     _delay((unsigned long)((200)*(8000000/4000.0)));
   362   0000C0  0E03               	movlw	3
   363   0000C2  6E03               	movwf	(??_Data_Display+1)^0,c
   364   0000C4  0E08               	movlw	8
   365   0000C6  6E02               	movwf	??_Data_Display^0,c
   366   0000C8  0E77               	movlw	119
   367   0000CA                     u107:
   368   0000CA  2EE8               	decfsz	wreg,f,c
   369   0000CC  D7FE               	bra	u107
   370   0000CE  2E02               	decfsz	??_Data_Display^0,f,c
   371   0000D0  D7FC               	bra	u107
   372   0000D2  2E03               	decfsz	(??_Data_Display+1)^0,f,c
   373   0000D4  D7FA               	bra	u107
   374   0000D6  F000               	nop	
   375   0000D8  0012               	return		;funcret
   376   0000DA                     __end_of_Data_Display:
   377                           	callstack 0
   378                           
   379 ;; *************** function _Configuration *****************
   380 ;; Defined at:
   381 ;;		line 65 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         0       0       0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text2
   410   00015A                     __ptext2:
   411                           	callstack 0
   412   00015A                     _Configuration:
   413                           	callstack 29
   414   00015A                     
   415                           ;main.c: 67:     OSCCON = 0x72;
   416   00015A  0E72               	movlw	114
   417   00015C  6ED3               	movwf	211,c	;volatile
   418                           
   419                           ;main.c: 68:     ADCON1 = 0x0F;
   420   00015E  0E0F               	movlw	15
   421   000160  6EC1               	movwf	193,c	;volatile
   422                           
   423                           ;main.c: 70:     TRISA = 0x00;
   424   000162  0E00               	movlw	0
   425   000164  6E92               	movwf	146,c	;volatile
   426                           
   427                           ;main.c: 71:     TRISB = 0x03;
   428   000166  0E03               	movlw	3
   429   000168  6E93               	movwf	147,c	;volatile
   430                           
   431                           ;main.c: 72:     TRISD = 0x00;
   432   00016A  0E00               	movlw	0
   433   00016C  6E95               	movwf	149,c	;volatile
   434                           
   435                           ;main.c: 74:     LATA = 0x00;
   436   00016E  0E00               	movlw	0
   437   000170  6E89               	movwf	137,c	;volatile
   438                           
   439                           ;main.c: 75:     LATB = 0x00;
   440   000172  0E00               	movlw	0
   441   000174  6E8A               	movwf	138,c	;volatile
   442                           
   443                           ;main.c: 76:     LATD = 0x00;
   444   000176  0E00               	movlw	0
   445   000178  6E8C               	movwf	140,c	;volatile
   446   00017A                     
   447                           ;main.c: 79:     RCONbits.IPEN = 0;
   448   00017A  9ED0               	bcf	208,7,c	;volatile
   449   00017C                     
   450                           ;main.c: 80:     INTCONbits.GIE = 1;
   451   00017C  8EF2               	bsf	242,7,c	;volatile
   452   00017E                     
   453                           ;main.c: 81:     INTCONbits.INT0IE = 1;
   454   00017E  88F2               	bsf	242,4,c	;volatile
   455   000180                     
   456                           ;main.c: 82:     INTCONbits.INT0IF = 0;
   457   000180  92F2               	bcf	242,1,c	;volatile
   458   000182                     
   459                           ;main.c: 83:     INTCON2bits.INTEDG0 = 0;
   460   000182  9CF1               	bcf	241,6,c	;volatile
   461   000184  0012               	return		;funcret
   462   000186                     __end_of_Configuration:
   463                           	callstack 0
   464                           
   465 ;; *************** function _INT *****************
   466 ;; Defined at:
   467 ;;		line 106 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         0       0       0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used: 1
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		Interrupt level 2
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	intcode
   495   000008                     __pintcode:
   496                           	callstack 0
   497   000008                     _INT:
   498                           	callstack 29
   499                           
   500                           ;incstack = 0
   501   000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   502   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   503                           
   504                           	psect	intcode_body
   505   000012                     __pintcode_body:
   506                           	callstack 29
   507   000012                     int_func:
   508                           	callstack 29
   509   000012  0006               	pop		; remove dummy address from shadow register refresh
   510   000014                     
   511                           ;main.c: 108:     if (INT0IF) {
   512   000014  A2F2               	btfss	4082,1,c	;volatile
   513   000016  EF0F  F000         	goto	i2u3_41
   514   00001A  EF11  F000         	goto	i2u3_40
   515   00001E                     i2u3_41:
   516   00001E  EF3C  F000         	goto	i2l71
   517   000022                     i2u3_40:
   518   000022                     
   519                           ;main.c: 110:         INT0IF = 0;
   520   000022  92F2               	bcf	4082,1,c	;volatile
   521   000024                     
   522                           ;main.c: 111:         Number_Counter++;
   523   000024  2A28               	incf	_Number_Counter^0,f,c
   524   000026                     
   525                           ;main.c: 112:         if (Number_Counter == 10) {
   526   000026  0E0A               	movlw	10
   527   000028  1828               	xorwf	_Number_Counter^0,w,c
   528   00002A  A4D8               	btfss	status,2,c
   529   00002C  EF1A  F000         	goto	i2u4_41
   530   000030  EF1C  F000         	goto	i2u4_40
   531   000034                     i2u4_41:
   532   000034  EF21  F000         	goto	i2l797
   533   000038                     i2u4_40:
   534   000038                     
   535                           ;main.c: 114:             Number_Counter = 0;
   536   000038  0E00               	movlw	0
   537   00003A  6E28               	movwf	_Number_Counter^0,c
   538   00003C                     
   539                           ;main.c: 115:             Tens++;
   540   00003C  2A25               	incf	_Tens^0,f,c
   541                           
   542                           ;main.c: 116:         } else if (Tens == 10) {
   543   00003E  EF3C  F000         	goto	i2l71
   544   000042                     i2l797:
   545   000042  0E0A               	movlw	10
   546   000044  1825               	xorwf	_Tens^0,w,c
   547   000046  A4D8               	btfss	status,2,c
   548   000048  EF28  F000         	goto	i2u5_41
   549   00004C  EF2A  F000         	goto	i2u5_40
   550   000050                     i2u5_41:
   551   000050  EF2F  F000         	goto	i2l803
   552   000054                     i2u5_40:
   553   000054                     
   554                           ;main.c: 118:             Tens = 0;
   555   000054  0E00               	movlw	0
   556   000056  6E25               	movwf	_Tens^0,c
   557   000058                     
   558                           ;main.c: 119:             Hundreds++;
   559   000058  2A24               	incf	_Hundreds^0,f,c
   560                           
   561                           ;main.c: 121:         } else if (Hundreds == 10) {
   562   00005A  EF3C  F000         	goto	i2l71
   563   00005E                     i2l803:
   564   00005E  0E0A               	movlw	10
   565   000060  1824               	xorwf	_Hundreds^0,w,c
   566   000062  A4D8               	btfss	status,2,c
   567   000064  EF36  F000         	goto	i2u6_41
   568   000068  EF38  F000         	goto	i2u6_40
   569   00006C                     i2u6_41:
   570   00006C  EF3C  F000         	goto	i2l67
   571   000070                     i2u6_40:
   572   000070                     
   573                           ;main.c: 123:             Hundreds = 0;
   574   000070  0E00               	movlw	0
   575   000072  6E24               	movwf	_Hundreds^0,c
   576   000074  EF3C  F000         	goto	i2l71
   577   000078                     i2l67:
   578   000078                     i2l71:
   579   000078  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   580   00007A  0011               	retfie		f
   581   00007C                     __end_of_INT:
   582                           	callstack 0
   583   000000                     
   584                           	psect	rparam
   585   000000                     
   586                           	psect	temp
   587   000029                     btemp:
   588                           	callstack 0
   589   000029                     	ds	1
   590   000000                     int$flags	set	btemp
   591   000000                     wtemp8	set	btemp+1
   592   000000                     ttemp5	set	btemp+1
   593   000000                     ttemp6	set	btemp+4
   594   000000                     ttemp7	set	btemp+8
   595                           
   596                           	psect	config
   597                           
   598                           ;Config register CONFIG1L @ 0x300000
   599                           ;	PLL Prescaler Selection bits
   600                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   601                           ;	System Clock Postscaler Selection bits
   602                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   603                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   604                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   605   300000                     	org	3145728
   606   300000  00                 	db	0
   607                           
   608                           ;Config register CONFIG1H @ 0x300001
   609                           ;	Oscillator Selection bits
   610                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   611                           ;	Fail-Safe Clock Monitor Enable bit
   612                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   613                           ;	Internal/External Oscillator Switchover bit
   614                           ;	IESO = OFF, Oscillator Switchover mode disabled
   615   300001                     	org	3145729
   616   300001  05                 	db	5
   617                           
   618                           ;Config register CONFIG2L @ 0x300002
   619                           ;	Power-up Timer Enable bit
   620                           ;	PWRT = OFF, PWRT disabled
   621                           ;	Brown-out Reset Enable bits
   622                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   623                           ;	Brown-out Reset Voltage bits
   624                           ;	BORV = 3, Minimum setting 2.05V
   625                           ;	USB Voltage Regulator Enable bit
   626                           ;	VREGEN = OFF, USB voltage regulator disabled
   627   300002                     	org	3145730
   628   300002  1F                 	db	31
   629                           
   630                           ;Config register CONFIG2H @ 0x300003
   631                           ;	Watchdog Timer Enable bit
   632                           ;	WDT = ON, WDT enabled
   633                           ;	Watchdog Timer Postscale Select bits
   634                           ;	WDTPS = 32768, 1:32768
   635   300003                     	org	3145731
   636   300003  1F                 	db	31
   637                           
   638                           ; Padding undefined space
   639   300004                     	org	3145732
   640   300004  FF                 	db	255
   641                           
   642                           ;Config register CONFIG3H @ 0x300005
   643                           ;	CCP2 MUX bit
   644                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   645                           ;	PORTB A/D Enable bit
   646                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   647                           ;	Low-Power Timer 1 Oscillator Enable bit
   648                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   649                           ;	MCLR Pin Enable bit
   650                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   651   300005                     	org	3145733
   652   300005  83                 	db	131
   653                           
   654                           ;Config register CONFIG4L @ 0x300006
   655                           ;	Stack Full/Underflow Reset Enable bit
   656                           ;	STVREN = ON, Stack full/underflow will cause Reset
   657                           ;	Single-Supply ICSP Enable bit
   658                           ;	LVP = ON, Single-Supply ICSP enabled
   659                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   660                           ;	ICPRT = OFF, ICPORT disabled
   661                           ;	Extended Instruction Set Enable bit
   662                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   663                           ;	Background Debugger Enable bit
   664                           ;	DEBUG = 0x1, unprogrammed default
   665   300006                     	org	3145734
   666   300006  85                 	db	133
   667                           
   668                           ; Padding undefined space
   669   300007                     	org	3145735
   670   300007  FF                 	db	255
   671                           
   672                           ;Config register CONFIG5L @ 0x300008
   673                           ;	Code Protection bit
   674                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   675                           ;	Code Protection bit
   676                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   677                           ;	Code Protection bit
   678                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   679                           ;	Code Protection bit
   680                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   681   300008                     	org	3145736
   682   300008  0F                 	db	15
   683                           
   684                           ;Config register CONFIG5H @ 0x300009
   685                           ;	Boot Block Code Protection bit
   686                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   687                           ;	Data EEPROM Code Protection bit
   688                           ;	CPD = OFF, Data EEPROM is not code-protected
   689   300009                     	org	3145737
   690   300009  C0                 	db	192
   691                           
   692                           ;Config register CONFIG6L @ 0x30000A
   693                           ;	Write Protection bit
   694                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   695                           ;	Write Protection bit
   696                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   697                           ;	Write Protection bit
   698                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   699                           ;	Write Protection bit
   700                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   701   30000A                     	org	3145738
   702   30000A  0F                 	db	15
   703                           
   704                           ;Config register CONFIG6H @ 0x30000B
   705                           ;	Configuration Register Write Protection bit
   706                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   707                           ;	Boot Block Write Protection bit
   708                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   709                           ;	Data EEPROM Write Protection bit
   710                           ;	WRTD = OFF, Data EEPROM is not write-protected
   711   30000B                     	org	3145739
   712   30000B  E0                 	db	224
   713                           
   714                           ;Config register CONFIG7L @ 0x30000C
   715                           ;	Table Read Protection bit
   716                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   717                           ;	Table Read Protection bit
   718                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   719                           ;	Table Read Protection bit
   720                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   721                           ;	Table Read Protection bit
   722                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   723   30000C                     	org	3145740
   724   30000C  0F                 	db	15
   725                           
   726                           ;Config register CONFIG7H @ 0x30000D
   727                           ;	Boot Block Table Read Protection bit
   728                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   729   30000D                     	org	3145741
   730   30000D  40                 	db	64
   731                           tosu	equ	0xFFF
   732                           tosh	equ	0xFFE
   733                           tosl	equ	0xFFD
   734                           stkptr	equ	0xFFC
   735                           pclatu	equ	0xFFB
   736                           pclath	equ	0xFFA
   737                           pcl	equ	0xFF9
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           prodh	equ	0xFF4
   743                           prodl	equ	0xFF3
   744                           indf0	equ	0xFEF
   745                           postinc0	equ	0xFEE
   746                           postdec0	equ	0xFED
   747                           preinc0	equ	0xFEC
   748                           plusw0	equ	0xFEB
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           wreg	equ	0xFE8
   752                           indf1	equ	0xFE7
   753                           postinc1	equ	0xFE6
   754                           postdec1	equ	0xFE5
   755                           preinc1	equ	0xFE4
   756                           plusw1	equ	0xFE3
   757                           fsr1h	equ	0xFE2
   758                           fsr1l	equ	0xFE1
   759                           bsr	equ	0xFE0
   760                           indf2	equ	0xFDF
   761                           postinc2	equ	0xFDE
   762                           postdec2	equ	0xFDD
   763                           preinc2	equ	0xFDC
   764                           plusw2	equ	0xFDB
   765                           fsr2h	equ	0xFDA
   766                           fsr2l	equ	0xFD9
   767                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     236
                                             18 COMRAM     3     3      0
                      _Configuration
                       _Data_Display
 ---------------------------------------------------------------------------------
 (1) _Data_Display                                        18    17      1     168
                                              0 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      28       1       42.6%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      29        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Dec 01 02:35:15 2023

                     l60 00D8                       l53 0184                       u71 0088  
                     u80 011E                       u81 011A                       u97 00F6  
                    l811 00A0                      l813 00B0                      l751 017C  
                    l815 00C0                      l807 007E                      l831 0102  
                    l753 017E                      l809 0090                      l825 00E6  
                    l817 00DA                      l755 0180                      l747 015A  
                    l827 00F0                      l819 00DE                      l757 0182  
                    l749 017A                      l829 00FE                      u107 00CA  
                    _INT 0008                      wreg 0FE8                     ?_INT 0001  
                   _LATA 0F89                     _LATB 0F8A                     _LATD 0F8C  
                   i2l71 0078                     i2l67 0078                     _Tens 0025  
                   _main 00DA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0029                     start 000E  
           ___param_bank 0000                    ??_INT 0001                    ?_main 0001  
                  i2l801 0058                    i2l803 005E                    i2l805 0070  
                  i2l791 0026                    i2l793 0038                    i2l785 0014  
                  i2l795 003C                    i2l787 0022                    i2l797 0042  
                  i2l789 0024                    i2l799 0054                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISD 0F95                    _Units 0026  
                  main@i 0014                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    ttemp5 002A                    ttemp6 002D  
                  ttemp7 0031                    status 0FD8                    wtemp8 002A  
        __initialization 0126             __end_of_main 0126                   ??_main 0013  
          __activetblptr 0000             _Data_Display 007C                   _ADCON1 0FC1  
  Data_Display@Numbers_2 0004                   _INT0IF 7F91                   _OSCCON 0FD3  
                 i2u3_40 0022                   i2u3_41 001E                   i2u4_40 0038  
                 i2u4_41 0034                   i2u5_40 0054                   i2u5_41 0050  
                 i2u6_40 0070                   i2u6_41 006C                   isa$std 0001  
           __pdataCOMRAM 0016                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0150  
          ___rparam_used 0001           __pcstackCOMRAM 0001      Data_Display@Display 000E  
         _Number_Counter 0028        Data_Display@F3217 0016        Data_Display@F3219 0020  
  __end_of_Configuration 0186                  _Display 0027                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0126                  __ramtop 0800  
                __ptext0 00DA                  __ptext1 007C                  __ptext2 015A  
         __pintcode_body 0012     end_of_initialization 0150                  int_func 0012  
                postdec1 0FE5                  postinc0 0FEE            __pidataCOMRAM 0186  
    start_initialization 0126              __end_of_INT 007C              __pbssCOMRAM 0024  
              __pintcode 0008            ?_Data_Display 0001                 _RCONbits 0FD0  
         ??_Data_Display 0002              _INTCON2bits 0FF1                copy_data0 013A  
          _Configuration 015A                 _Hundreds 0024                 __Hrparam 0000  
               __Lrparam 0000           ?_Configuration 0001                 isa$xinst 0000  
               int$flags 0029               _INTCONbits 0FF2            Data_Display@D 0001  
          Data_Display@N 0012                 intlevel2 0000     __end_of_Data_Display 00DA  
        ??_Configuration 0001  
