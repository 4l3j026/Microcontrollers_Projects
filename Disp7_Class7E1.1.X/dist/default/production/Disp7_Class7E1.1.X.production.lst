

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Dec 02 15:41:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   000202                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for Data_Display@F3216
    62   000202  BF                 	db	191
    63   000203  86                 	db	134
    64   000204  DB                 	db	219
    65   000205  CF                 	db	207
    66   000206  E6                 	db	230
    67   000207  ED                 	db	237
    68   000208  FD                 	db	253
    69   000209  87                 	db	135
    70   00020A  FF                 	db	255
    71   00020B  E7                 	db	231
    72                           
    73                           ;initializer for Data_Display@F3218
    74   00020C  01                 	db	1
    75   00020D  02                 	db	2
    76   00020E  04                 	db	4
    77   00020F  08                 	db	8
    78   000000                     _INT0IF	set	32657
    79   000000                     _LATA	set	3977
    80   000000                     _TRISA	set	3986
    81   000000                     _ADCON1	set	4033
    82   000000                     _OSCCON	set	4051
    83   000000                     _INTCON2bits	set	4081
    84   000000                     _INTCONbits	set	4082
    85   000000                     _RCONbits	set	4048
    86   000000                     _TRISD	set	3989
    87   000000                     _TRISB	set	3987
    88   000000                     _LATD	set	3980
    89   000000                     _LATB	set	3978
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000194                     __pcinit:
    95                           	callstack 0
    96   000194                     start_initialization:
    97                           	callstack 0
    98   000194                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (14 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103   000194  0E02               	movlw	low __pidataCOMRAM
   104   000196  6EF6               	movwf	tblptrl,c
   105   000198  0E02               	movlw	high __pidataCOMRAM
   106   00019A  6EF7               	movwf	tblptrh,c
   107   00019C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108   00019E  6EF8               	movwf	tblptru,c
   109   0001A0  EE00  F02A         	lfsr	0,__pdataCOMRAM
   110   0001A4  EE10 F00E          	lfsr	1,14
   111   0001A8                     copy_data0:
   112   0001A8  0009               	tblrd		*+
   113   0001AA  CFF5 FFEE          	movff	tablat,postinc0
   114   0001AE  50E5               	movf	postdec1,w,c
   115   0001B0  50E1               	movf	fsr1l,w,c
   116   0001B2  E1FA               	bnz	copy_data0
   117                           
   118                           ; Clear objects allocated to COMRAM (4 bytes)
   119   0001B4  6A3B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120   0001B6  6A3A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121   0001B8  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122   0001BA  6A38               	clrf	__pbssCOMRAM& (0+255),c
   123   0001BC                     end_of_initialization:
   124                           	callstack 0
   125   0001BC                     __end_of__initialization:
   126                           	callstack 0
   127   0001BC  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128   0001BE  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129   0001C0  0100               	movlb	0
   130   0001C2  EFF9  F000         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000038                     __pbssCOMRAM:
   134                           	callstack 0
   135   000038                     _Hundreds:
   136                           	callstack 0
   137   000038                     	ds	1
   138   000039                     _Tens:
   139                           	callstack 0
   140   000039                     	ds	1
   141   00003A                     _Units:
   142                           	callstack 0
   143   00003A                     	ds	1
   144   00003B                     _Display:
   145                           	callstack 0
   146   00003B                     	ds	1
   147                           
   148                           	psect	dataCOMRAM
   149   00002A                     __pdataCOMRAM:
   150                           	callstack 0
   151   00002A                     Data_Display@F3216:
   152                           	callstack 0
   153   00002A                     	ds	10
   154   000034                     Data_Display@F3218:
   155                           	callstack 0
   156   000034                     	ds	4
   157                           
   158                           	psect	cstackCOMRAM
   159   000001                     __pcstackCOMRAM:
   160                           	callstack 0
   161   000001                     i2Data_Display@D:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x0
   165   000001                     	ds	1
   166   000002                     ??i2_Data_Display:
   167                           
   168                           ; 1 bytes @ 0x1
   169   000002                     	ds	1
   170   000003                     i2Data_Display@Numbers_2:
   171                           	callstack 0
   172                           
   173                           ; 10 bytes @ 0x2
   174   000003                     	ds	10
   175   00000D                     i2Data_Display@Display:
   176                           	callstack 0
   177                           
   178                           ; 4 bytes @ 0xC
   179   00000D                     	ds	4
   180   000011                     i2Data_Display@N:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x10
   184   000011                     	ds	1
   185   000012                     ??_INT:
   186                           
   187                           ; 1 bytes @ 0x11
   188   000012                     	ds	4
   189   000016                     Data_Display@D:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x15
   193   000016                     	ds	1
   194   000017                     ??_Data_Display:
   195                           
   196                           ; 1 bytes @ 0x16
   197   000017                     	ds	1
   198   000018                     Data_Display@Numbers_2:
   199                           	callstack 0
   200                           
   201                           ; 10 bytes @ 0x17
   202   000018                     	ds	10
   203   000022                     Data_Display@Display:
   204                           	callstack 0
   205                           
   206                           ; 4 bytes @ 0x21
   207   000022                     	ds	4
   208   000026                     Data_Display@N:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x25
   212   000026                     	ds	1
   213   000027                     ??_Data_Show:
   214                           
   215                           ; 1 bytes @ 0x26
   216   000027                     	ds	1
   217   000028                     Data_Show@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x27
   221   000028                     	ds	2
   222   00002A                     
   223                           ; 1 bytes @ 0x29
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 33 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   243 ;;      Params:         0       0       0       0       0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called: 4
   249 ;; This function calls:
   250 ;;		_Configuration
   251 ;;		_Data_Show
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text0
   258   0001F2                     __ptext0:
   259                           	callstack 0
   260   0001F2                     _main:
   261                           	callstack 27
   262   0001F2                     
   263                           ;main.c: 36:     Configuration();
   264   0001F2  ECE3  F000         	call	_Configuration	;wreg free
   265   0001F6                     l858:
   266                           
   267                           ;main.c: 41:         Data_Show();
   268   0001F6  ECA9  F000         	call	_Data_Show	;wreg free
   269   0001FA  EFFB  F000         	goto	l858
   270   0001FE  EF07  F000         	goto	start
   271   000202                     __end_of_main:
   272                           	callstack 0
   273                           
   274 ;; *************** function _Data_Show *****************
   275 ;; Defined at:
   276 ;;		line 95 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  i               2   39[COMRAM] int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   290 ;;      Params:         0       0       0       0       0       0       0       0       0
   291 ;;      Locals:         2       0       0       0       0       0       0       0       0
   292 ;;      Temps:          1       0       0       0       0       0       0       0       0
   293 ;;      Totals:         3       0       0       0       0       0       0       0       0
   294 ;;Total ram usage:        3 bytes
   295 ;; Hardware stack levels used: 1
   296 ;; Hardware stack levels required when called: 3
   297 ;; This function calls:
   298 ;;		_Data_Display
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text1
   305   000152                     __ptext1:
   306                           	callstack 0
   307   000152                     _Data_Show:
   308                           	callstack 27
   309   000152                     
   310                           ;main.c: 98:     for (int i = 0; i < 4; i++) {
   311   000152  0E00               	movlw	0
   312   000154  6E29               	movwf	(Data_Show@i+1)^0,c
   313   000156  0E00               	movlw	0
   314   000158  6E28               	movwf	Data_Show@i^0,c
   315   00015A                     l838:
   316                           
   317                           ;main.c: 100:         Data_Display(0, i);
   318   00015A  C028  F016         	movff	Data_Show@i,Data_Display@D
   319   00015E  0E00               	movlw	0
   320   000160  EC53  F000         	call	_Data_Display
   321   000164                     
   322                           ;main.c: 101:         _delay((unsigned long)((80)*(8000000/4000.0)));
   323   000164  0ED0               	movlw	208
   324   000166  6E27               	movwf	??_Data_Show^0,c
   325   000168  0ECA               	movlw	202
   326   00016A                     u157:
   327   00016A  2EE8               	decfsz	wreg,f,c
   328   00016C  D7FE               	bra	u157
   329   00016E  2E27               	decfsz	??_Data_Show^0,f,c
   330   000170  D7FC               	bra	u157
   331   000172                     
   332                           ;main.c: 103:     }
   333   000172  4A28               	infsnz	Data_Show@i^0,f,c
   334   000174  2A29               	incf	(Data_Show@i+1)^0,f,c
   335   000176  BE29               	btfsc	(Data_Show@i+1)^0,7,c
   336   000178  EFC7  F000         	goto	u91
   337   00017C  5029               	movf	(Data_Show@i+1)^0,w,c
   338   00017E  E109               	bnz	u90
   339   000180  0E04               	movlw	4
   340   000182  5C28               	subwf	Data_Show@i^0,w,c
   341   000184  A0D8               	btfss	status,0,c
   342   000186  EFC7  F000         	goto	u91
   343   00018A  EFC9  F000         	goto	u90
   344   00018E                     u91:
   345   00018E  EFAD  F000         	goto	l838
   346   000192                     u90:
   347   000192  0012               	return		;funcret
   348   000194                     __end_of_Data_Show:
   349                           	callstack 0
   350                           
   351 ;; *************** function _Data_Display *****************
   352 ;; Defined at:
   353 ;;		line 71 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  N               1    wreg     unsigned char 
   356 ;;  D               1   21[COMRAM] unsigned char 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  N               1   37[COMRAM] unsigned char 
   359 ;;  Numbers_2      10   23[COMRAM] unsigned char [10]
   360 ;;  Display         4   33[COMRAM] unsigned char [4]
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   370 ;;      Params:         1       0       0       0       0       0       0       0       0
   371 ;;      Locals:        15       0       0       0       0       0       0       0       0
   372 ;;      Temps:          1       0       0       0       0       0       0       0       0
   373 ;;      Totals:        17       0       0       0       0       0       0       0       0
   374 ;;Total ram usage:       17 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 2
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_Data_Show
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text2
   385   0000A6                     __ptext2:
   386                           	callstack 0
   387   0000A6                     _Data_Display:
   388                           	callstack 27
   389                           
   390                           ;incstack = 0
   391                           ;Data_Display@N stored from wreg
   392   0000A6  6E26               	movwf	Data_Display@N^0,c
   393   0000A8                     
   394                           ;main.c: 82:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   395   0000A8  EE20  F02A         	lfsr	2,Data_Display@F3216
   396   0000AC  EE10  F018         	lfsr	1,Data_Display@Numbers_2
   397   0000B0  0E09               	movlw	9
   398   0000B2                     u81:
   399   0000B2  CFDB FFE3          	movff	plusw2,plusw1
   400   0000B6  06E8               	decf	wreg,f,c
   401   0000B8  E2FC               	bc	u81
   402   0000BA                     
   403                           ;main.c: 84:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   404   0000BA  C034  F022         	movff	Data_Display@F3218,Data_Display@Display
   405   0000BE  C035  F023         	movff	Data_Display@F3218+1,Data_Display@Display+1
   406   0000C2  C036  F024         	movff	Data_Display@F3218+2,Data_Display@Display+2
   407   0000C6  C037  F025         	movff	Data_Display@F3218+3,Data_Display@Display+3
   408   0000CA                     
   409                           ;main.c: 87:     LATD = Numbers_2 [N];
   410   0000CA  0E18               	movlw	low Data_Display@Numbers_2
   411   0000CC  2426               	addwf	Data_Display@N^0,w,c
   412   0000CE  6ED9               	movwf	fsr2l,c
   413   0000D0  6ADA               	clrf	fsr2h,c
   414   0000D2  0E00               	movlw	high Data_Display@Numbers_2
   415   0000D4  22DA               	addwfc	fsr2h,f,c
   416   0000D6  50DF               	movf	indf2,w,c
   417   0000D8  6E8C               	movwf	140,c	;volatile
   418   0000DA                     
   419                           ;main.c: 88:     LATA = Display [D];
   420   0000DA  0E22               	movlw	low Data_Display@Display
   421   0000DC  2416               	addwf	Data_Display@D^0,w,c
   422   0000DE  6ED9               	movwf	fsr2l,c
   423   0000E0  6ADA               	clrf	fsr2h,c
   424   0000E2  0E00               	movlw	high Data_Display@Display
   425   0000E4  22DA               	addwfc	fsr2h,f,c
   426   0000E6  50DF               	movf	indf2,w,c
   427   0000E8  6E89               	movwf	137,c	;volatile
   428   0000EA                     
   429                           ;main.c: 89:     _delay((unsigned long)((40)*(8000000/4000.0)));
   430   0000EA  0E68               	movlw	104
   431   0000EC  6E17               	movwf	??_Data_Display^0,c
   432   0000EE  0EE4               	movlw	228
   433   0000F0                     u167:
   434   0000F0  2EE8               	decfsz	wreg,f,c
   435   0000F2  D7FE               	bra	u167
   436   0000F4  2E17               	decfsz	??_Data_Display^0,f,c
   437   0000F6  D7FC               	bra	u167
   438   0000F8  D000               	nop2	
   439   0000FA  0012               	return		;funcret
   440   0000FC                     __end_of_Data_Display:
   441                           	callstack 0
   442                           
   443 ;; *************** function _Configuration *****************
   444 ;; Defined at:
   445 ;;		line 47 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 2
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text3
   474   0001C6                     __ptext3:
   475                           	callstack 0
   476   0001C6                     _Configuration:
   477                           	callstack 28
   478   0001C6                     
   479                           ;main.c: 49:     OSCCON = 0x72;
   480   0001C6  0E72               	movlw	114
   481   0001C8  6ED3               	movwf	211,c	;volatile
   482                           
   483                           ;main.c: 50:     ADCON1 = 0x0F;
   484   0001CA  0E0F               	movlw	15
   485   0001CC  6EC1               	movwf	193,c	;volatile
   486                           
   487                           ;main.c: 52:     TRISA = 0x00;
   488   0001CE  0E00               	movlw	0
   489   0001D0  6E92               	movwf	146,c	;volatile
   490                           
   491                           ;main.c: 53:     TRISB = 0x03;
   492   0001D2  0E03               	movlw	3
   493   0001D4  6E93               	movwf	147,c	;volatile
   494                           
   495                           ;main.c: 54:     TRISD = 0x00;
   496   0001D6  0E00               	movlw	0
   497   0001D8  6E95               	movwf	149,c	;volatile
   498                           
   499                           ;main.c: 56:     LATA = 0x00;
   500   0001DA  0E00               	movlw	0
   501   0001DC  6E89               	movwf	137,c	;volatile
   502                           
   503                           ;main.c: 57:     LATB = 0x00;
   504   0001DE  0E00               	movlw	0
   505   0001E0  6E8A               	movwf	138,c	;volatile
   506                           
   507                           ;main.c: 58:     LATD = 0x00;
   508   0001E2  0E00               	movlw	0
   509   0001E4  6E8C               	movwf	140,c	;volatile
   510   0001E6                     
   511                           ;main.c: 61:     RCONbits.IPEN = 0;
   512   0001E6  9ED0               	bcf	208,7,c	;volatile
   513   0001E8                     
   514                           ;main.c: 62:     INTCONbits.GIE = 1;
   515   0001E8  8EF2               	bsf	242,7,c	;volatile
   516   0001EA                     
   517                           ;main.c: 63:     INTCONbits.INT0IE = 1;
   518   0001EA  88F2               	bsf	242,4,c	;volatile
   519   0001EC                     
   520                           ;main.c: 64:     INTCONbits.INT0IF = 0;
   521   0001EC  92F2               	bcf	242,1,c	;volatile
   522   0001EE                     
   523                           ;main.c: 65:     INTCON2bits.INTEDG0 = 0;
   524   0001EE  9CF1               	bcf	241,6,c	;volatile
   525   0001F0  0012               	return		;funcret
   526   0001F2                     __end_of_Configuration:
   527                           	callstack 0
   528                           
   529 ;; *************** function _INT *****************
   530 ;; Defined at:
   531 ;;		line 110 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   545 ;;      Params:         0       0       0       0       0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0
   547 ;;      Temps:          4       0       0       0       0       0       0       0       0
   548 ;;      Totals:         4       0       0       0       0       0       0       0       0
   549 ;;Total ram usage:        4 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 1
   552 ;; This function calls:
   553 ;;		i2_Data_Display
   554 ;; This function is called by:
   555 ;;		Interrupt level 2
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	intcode
   560   000008                     __pintcode:
   561                           	callstack 0
   562   000008                     _INT:
   563                           	callstack 27
   564                           
   565                           ;incstack = 0
   566   000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   567   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   568                           
   569                           	psect	intcode_body
   570   000012                     __pintcode_body:
   571                           	callstack 27
   572   000012                     int_func:
   573                           	callstack 27
   574   000012  0006               	pop		; remove dummy address from shadow register refresh
   575   000014  CFE1 F012          	movff	fsr1l,??_INT
   576   000018  CFE2 F013          	movff	fsr1h,??_INT+1
   577   00001C  CFD9 F014          	movff	fsr2l,??_INT+2
   578   000020  CFDA F015          	movff	fsr2h,??_INT+3
   579   000024                     
   580                           ;main.c: 112:     if (INT0IF) {
   581   000024  A2F2               	btfss	4082,1,c	;volatile
   582   000026  EF17  F000         	goto	i2u11_41
   583   00002A  EF19  F000         	goto	i2u11_40
   584   00002E                     i2u11_41:
   585   00002E  EF49  F000         	goto	i2l72
   586   000032                     i2u11_40:
   587   000032                     
   588                           ;main.c: 114:         INT0IF = 0;
   589   000032  92F2               	bcf	4082,1,c	;volatile
   590   000034                     
   591                           ;main.c: 116:         Data_Display(Units++, 0);
   592   000034  0E00               	movlw	0
   593   000036  6E01               	movwf	i2Data_Display@D^0,c
   594   000038  503A               	movf	_Units^0,w,c
   595   00003A  EC7E  F000         	call	i2_Data_Display
   596   00003E  2A3A               	incf	_Units^0,f,c
   597   000040                     
   598                           ;main.c: 118:         if (Units == 10) {
   599   000040  0E0A               	movlw	10
   600   000042  183A               	xorwf	_Units^0,w,c
   601   000044  A4D8               	btfss	status,2,c
   602   000046  EF27  F000         	goto	i2u12_41
   603   00004A  EF29  F000         	goto	i2u12_40
   604   00004E                     i2u12_41:
   605   00004E  EF2E  F000         	goto	i2l874
   606   000052                     i2u12_40:
   607   000052                     
   608                           ;main.c: 120:             Units = 0;
   609   000052  0E00               	movlw	0
   610   000054  6E3A               	movwf	_Units^0,c
   611   000056                     
   612                           ;main.c: 121:             Tens++;
   613   000056  2A39               	incf	_Tens^0,f,c
   614                           
   615                           ;main.c: 123:         } else if (Tens == 10) {
   616   000058  EF49  F000         	goto	i2l72
   617   00005C                     i2l874:
   618   00005C  0E0A               	movlw	10
   619   00005E  1839               	xorwf	_Tens^0,w,c
   620   000060  A4D8               	btfss	status,2,c
   621   000062  EF35  F000         	goto	i2u13_41
   622   000066  EF37  F000         	goto	i2u13_40
   623   00006A                     i2u13_41:
   624   00006A  EF3C  F000         	goto	i2l880
   625   00006E                     i2u13_40:
   626   00006E                     
   627                           ;main.c: 125:             Tens = 0;
   628   00006E  0E00               	movlw	0
   629   000070  6E39               	movwf	_Tens^0,c
   630   000072                     
   631                           ;main.c: 126:             Hundreds++;
   632   000072  2A38               	incf	_Hundreds^0,f,c
   633                           
   634                           ;main.c: 128:         } else if (Hundreds == 10) {
   635   000074  EF49  F000         	goto	i2l72
   636   000078                     i2l880:
   637   000078  0E0A               	movlw	10
   638   00007A  1838               	xorwf	_Hundreds^0,w,c
   639   00007C  A4D8               	btfss	status,2,c
   640   00007E  EF43  F000         	goto	i2u14_41
   641   000082  EF45  F000         	goto	i2u14_40
   642   000086                     i2u14_41:
   643   000086  EF49  F000         	goto	i2l68
   644   00008A                     i2u14_40:
   645   00008A                     
   646                           ;main.c: 130:             Hundreds = 0;
   647   00008A  0E00               	movlw	0
   648   00008C  6E38               	movwf	_Hundreds^0,c
   649   00008E  EF49  F000         	goto	i2l72
   650   000092                     i2l68:
   651   000092                     i2l72:
   652   000092  C015  FFDA         	movff	??_INT+3,fsr2h
   653   000096  C014  FFD9         	movff	??_INT+2,fsr2l
   654   00009A  C013  FFE2         	movff	??_INT+1,fsr1h
   655   00009E  C012  FFE1         	movff	??_INT,fsr1l
   656   0000A2  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   657   0000A4  0011               	retfie		f
   658   0000A6                     __end_of_INT:
   659                           	callstack 0
   660                           
   661 ;; *************** function i2_Data_Display *****************
   662 ;; Defined at:
   663 ;;		line 71 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  N               1    wreg     unsigned char 
   666 ;;  D               1    0[COMRAM] unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  N               1   16[COMRAM] unsigned char 
   669 ;;  Numbers_2      10    2[COMRAM] unsigned char [10]
   670 ;;  Display         4   12[COMRAM] unsigned char [4]
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         1       0       0       0       0       0       0       0       0
   681 ;;      Locals:        15       0       0       0       0       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0       0       0       0       0
   683 ;;      Totals:        17       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:       17 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_INT
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text5
   694   0000FC                     __ptext5:
   695                           	callstack 0
   696   0000FC                     i2_Data_Display:
   697                           	callstack 27
   698                           
   699                           ;incstack = 0
   700                           ;i2Data_Display@N stored from wreg
   701   0000FC  6E11               	movwf	i2Data_Display@N^0,c
   702   0000FE                     
   703                           ;main.c: 82:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   704   0000FE  EE20  F02A         	lfsr	2,Data_Display@F3216
   705   000102  EE10  F003         	lfsr	1,i2Data_Display@Numbers_2
   706   000106  0E09               	movlw	9
   707   000108                     i2u10_41:
   708   000108  CFDB FFE3          	movff	plusw2,plusw1
   709   00010C  06E8               	decf	wreg,f,c
   710   00010E  E2FC               	bc	i2u10_41
   711   000110                     
   712                           ;main.c: 84:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   713   000110  C034  F00D         	movff	Data_Display@F3218,i2Data_Display@Display
   714   000114  C035  F00E         	movff	Data_Display@F3218+1,i2Data_Display@Display+1
   715   000118  C036  F00F         	movff	Data_Display@F3218+2,i2Data_Display@Display+2
   716   00011C  C037  F010         	movff	Data_Display@F3218+3,i2Data_Display@Display+3
   717   000120                     
   718                           ;main.c: 87:     LATD = Numbers_2 [N];
   719   000120  0E03               	movlw	low i2Data_Display@Numbers_2
   720   000122  2411               	addwf	i2Data_Display@N^0,w,c
   721   000124  6ED9               	movwf	fsr2l,c
   722   000126  6ADA               	clrf	fsr2h,c
   723   000128  0E00               	movlw	high i2Data_Display@Numbers_2
   724   00012A  22DA               	addwfc	fsr2h,f,c
   725   00012C  50DF               	movf	indf2,w,c
   726   00012E  6E8C               	movwf	140,c	;volatile
   727   000130                     
   728                           ;main.c: 88:     LATA = Display [D];
   729   000130  0E0D               	movlw	low i2Data_Display@Display
   730   000132  2401               	addwf	i2Data_Display@D^0,w,c
   731   000134  6ED9               	movwf	fsr2l,c
   732   000136  6ADA               	clrf	fsr2h,c
   733   000138  0E00               	movlw	high i2Data_Display@Display
   734   00013A  22DA               	addwfc	fsr2h,f,c
   735   00013C  50DF               	movf	indf2,w,c
   736   00013E  6E89               	movwf	137,c	;volatile
   737   000140                     
   738                           ;main.c: 89:     _delay((unsigned long)((40)*(8000000/4000.0)));
   739   000140  0E68               	movlw	104
   740   000142  6E02               	movwf	??i2_Data_Display^0,c
   741   000144  0EE4               	movlw	228
   742   000146                     i2u17_47:
   743   000146  2EE8               	decfsz	wreg,f,c
   744   000148  D7FE               	bra	i2u17_47
   745   00014A  2E02               	decfsz	??i2_Data_Display^0,f,c
   746   00014C  D7FC               	bra	i2u17_47
   747   00014E  D000               	nop2	
   748   000150  0012               	return		;funcret
   749   000152                     __end_ofi2_Data_Display:
   750                           	callstack 0
   751   000000                     
   752                           	psect	rparam
   753   000000                     
   754                           	psect	temp
   755   00003C                     btemp:
   756                           	callstack 0
   757   00003C                     	ds	1
   758   000000                     int$flags	set	btemp
   759   000000                     wtemp8	set	btemp+1
   760   000000                     ttemp5	set	btemp+1
   761   000000                     ttemp6	set	btemp+4
   762   000000                     ttemp7	set	btemp+8
   763                           
   764                           	psect	config
   765                           
   766                           ;Config register CONFIG1L @ 0x300000
   767                           ;	PLL Prescaler Selection bits
   768                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   769                           ;	System Clock Postscaler Selection bits
   770                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   771                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   772                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   773   300000                     	org	3145728
   774   300000  00                 	db	0
   775                           
   776                           ;Config register CONFIG1H @ 0x300001
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   779                           ;	Fail-Safe Clock Monitor Enable bit
   780                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   781                           ;	Internal/External Oscillator Switchover bit
   782                           ;	IESO = OFF, Oscillator Switchover mode disabled
   783   300001                     	org	3145729
   784   300001  05                 	db	5
   785                           
   786                           ;Config register CONFIG2L @ 0x300002
   787                           ;	Power-up Timer Enable bit
   788                           ;	PWRT = OFF, PWRT disabled
   789                           ;	Brown-out Reset Enable bits
   790                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   791                           ;	Brown-out Reset Voltage bits
   792                           ;	BORV = 3, Minimum setting 2.05V
   793                           ;	USB Voltage Regulator Enable bit
   794                           ;	VREGEN = OFF, USB voltage regulator disabled
   795   300002                     	org	3145730
   796   300002  1F                 	db	31
   797                           
   798                           ;Config register CONFIG2H @ 0x300003
   799                           ;	Watchdog Timer Enable bit
   800                           ;	WDT = ON, WDT enabled
   801                           ;	Watchdog Timer Postscale Select bits
   802                           ;	WDTPS = 32768, 1:32768
   803   300003                     	org	3145731
   804   300003  1F                 	db	31
   805                           
   806                           ; Padding undefined space
   807   300004                     	org	3145732
   808   300004  FF                 	db	255
   809                           
   810                           ;Config register CONFIG3H @ 0x300005
   811                           ;	CCP2 MUX bit
   812                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   813                           ;	PORTB A/D Enable bit
   814                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   815                           ;	Low-Power Timer 1 Oscillator Enable bit
   816                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   817                           ;	MCLR Pin Enable bit
   818                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   819   300005                     	org	3145733
   820   300005  83                 	db	131
   821                           
   822                           ;Config register CONFIG4L @ 0x300006
   823                           ;	Stack Full/Underflow Reset Enable bit
   824                           ;	STVREN = ON, Stack full/underflow will cause Reset
   825                           ;	Single-Supply ICSP Enable bit
   826                           ;	LVP = ON, Single-Supply ICSP enabled
   827                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   828                           ;	ICPRT = OFF, ICPORT disabled
   829                           ;	Extended Instruction Set Enable bit
   830                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   831                           ;	Background Debugger Enable bit
   832                           ;	DEBUG = 0x1, unprogrammed default
   833   300006                     	org	3145734
   834   300006  85                 	db	133
   835                           
   836                           ; Padding undefined space
   837   300007                     	org	3145735
   838   300007  FF                 	db	255
   839                           
   840                           ;Config register CONFIG5L @ 0x300008
   841                           ;	Code Protection bit
   842                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   843                           ;	Code Protection bit
   844                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   845                           ;	Code Protection bit
   846                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   847                           ;	Code Protection bit
   848                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   849   300008                     	org	3145736
   850   300008  0F                 	db	15
   851                           
   852                           ;Config register CONFIG5H @ 0x300009
   853                           ;	Boot Block Code Protection bit
   854                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   855                           ;	Data EEPROM Code Protection bit
   856                           ;	CPD = OFF, Data EEPROM is not code-protected
   857   300009                     	org	3145737
   858   300009  C0                 	db	192
   859                           
   860                           ;Config register CONFIG6L @ 0x30000A
   861                           ;	Write Protection bit
   862                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   863                           ;	Write Protection bit
   864                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   865                           ;	Write Protection bit
   866                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   867                           ;	Write Protection bit
   868                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   869   30000A                     	org	3145738
   870   30000A  0F                 	db	15
   871                           
   872                           ;Config register CONFIG6H @ 0x30000B
   873                           ;	Configuration Register Write Protection bit
   874                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   875                           ;	Boot Block Write Protection bit
   876                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   877                           ;	Data EEPROM Write Protection bit
   878                           ;	WRTD = OFF, Data EEPROM is not write-protected
   879   30000B                     	org	3145739
   880   30000B  E0                 	db	224
   881                           
   882                           ;Config register CONFIG7L @ 0x30000C
   883                           ;	Table Read Protection bit
   884                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   885                           ;	Table Read Protection bit
   886                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   887                           ;	Table Read Protection bit
   888                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   889                           ;	Table Read Protection bit
   890                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   891   30000C                     	org	3145740
   892   30000C  0F                 	db	15
   893                           
   894                           ;Config register CONFIG7H @ 0x30000D
   895                           ;	Boot Block Table Read Protection bit
   896                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   897   30000D                     	org	3145741
   898   30000D  40                 	db	64
   899                           tosu	equ	0xFFF
   900                           tosh	equ	0xFFE
   901                           tosl	equ	0xFFD
   902                           stkptr	equ	0xFFC
   903                           pclatu	equ	0xFFB
   904                           pclath	equ	0xFFA
   905                           pcl	equ	0xFF9
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           indf0	equ	0xFEF
   913                           postinc0	equ	0xFEE
   914                           postdec0	equ	0xFED
   915                           preinc0	equ	0xFEC
   916                           plusw0	equ	0xFEB
   917                           fsr0h	equ	0xFEA
   918                           fsr0l	equ	0xFE9
   919                           wreg	equ	0xFE8
   920                           indf1	equ	0xFE7
   921                           postinc1	equ	0xFE6
   922                           postdec1	equ	0xFE5
   923                           preinc1	equ	0xFE4
   924                           plusw1	equ	0xFE3
   925                           fsr1h	equ	0xFE2
   926                           fsr1l	equ	0xFE1
   927                           bsr	equ	0xFE0
   928                           indf2	equ	0xFDF
   929                           postinc2	equ	0xFDE
   930                           postdec2	equ	0xFDD
   931                           preinc2	equ	0xFDC
   932                           plusw2	equ	0xFDB
   933                           fsr2h	equ	0xFDA
   934                           fsr2l	equ	0xFD9
   935                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Show
    _Data_Show->_Data_Display

Critical Paths under _INT in COMRAM

    _INT->i2_Data_Display

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     286
                      _Configuration
                          _Data_Show
 ---------------------------------------------------------------------------------
 (1) _Data_Show                                            3     3      0     286
                                             38 COMRAM     3     3      0
                       _Data_Display
 ---------------------------------------------------------------------------------
 (2) _Data_Display                                        17    16      1     218
                                             21 COMRAM    17    16      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT                                                  4     4      0     118
                                             17 COMRAM     4     4      0
                     i2_Data_Display
 ---------------------------------------------------------------------------------
 (4) i2_Data_Display                                      17    16      1     118
                                              0 COMRAM    17    16      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Show
     _Data_Display

 _INT (ROOT)
   i2_Data_Display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      3B       1       62.8%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      29        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Dec 02 15:41:05 2023

                     l61 0192                       l56 00FA                       l49 01F0  
                     u81 00B2                       u90 0192                       u91 018E  
                    l830 00EA                      l822 00A8                      l760 01E6  
                    l824 00BA                      l840 0164                      l832 0152  
                    l762 01E8                      l826 00CA                      l842 0172  
                    l764 01EA                      l828 00DA                      l844 0176  
                    l766 01EC                      l758 01C6                      l838 015A  
                    l768 01EE                      l856 01F2                      l858 01F6  
                    _INT 0008                      u157 016A                      u167 00F0  
                    wreg 0FE8                     ?_INT 0001                     _LATA 0F89  
                   _LATB 0F8A                     _LATD 0F8C                     i2l56 0150  
                   i2l72 0092                     i2l68 0092                     _Tens 0039  
                   _main 01F2                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 003C                     start 000E             ___param_bank 0000  
                  ??_INT 0012    i2Data_Display@Display 000D                    ?_main 0001  
                  i2l850 0120                    i2l852 0130                    i2l860 0024  
                  i2l854 0140                    i2l846 00FE                    i2l870 0052  
                  i2l862 0032                    i2l848 0110                    i2l880 0078  
                  i2l872 0056                    i2l864 0034                    i2l882 008A  
                  i2l874 005C                    i2l866 003E                    i2l876 006E  
                  i2l868 0040                    i2l878 0072                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISD 0F95                    _Units 003A  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  ttemp5 003D                    ttemp6 0040                    ttemp7 0044  
                  status 0FD8                    wtemp8 003D          __initialization 0194  
           __end_of_main 0202                   ??_main 002A            __activetblptr 0000  
           _Data_Display 00A6                   _ADCON1 0FC1    Data_Display@Numbers_2 0018  
                 _INT0IF 7F91                   _OSCCON 0FD3                   isa$std 0001  
           __pdataCOMRAM 002A                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8        __end_of_Data_Show 0194               __accesstop 0060  
__end_of__initialization 01BC            ___rparam_used 0001           __pcstackCOMRAM 0001  
    Data_Display@Display 0022        Data_Display@F3216 002A        Data_Display@F3218 0034  
        i2Data_Display@D 0001          i2Data_Display@N 0011    __end_of_Configuration 01F2  
         i2_Data_Display 00FC                  i2u10_41 0108                  i2u11_40 0032  
                i2u11_41 002E                  i2u12_40 0052                  i2u12_41 004E  
                i2u13_40 006E                  i2u13_41 006A                  i2u14_40 008A  
                i2u14_41 0086                  i2u17_47 0146  i2Data_Display@Numbers_2 0003  
                _Display 003B                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0194                  __ramtop 0800                  __ptext0 01F2  
                __ptext1 0152                  __ptext2 00A6                  __ptext3 01C6  
                __ptext5 00FC   __end_ofi2_Data_Display 0152           __pintcode_body 0012  
   end_of_initialization 01BC                  int_func 0012                  postdec1 0FE5  
                postinc0 0FEE          ?i2_Data_Display 0001                _Data_Show 0152  
          __pidataCOMRAM 0202      start_initialization 0194              __end_of_INT 00A6  
             ?_Data_Show 0001              __pbssCOMRAM 0038                __pintcode 0008  
          ?_Data_Display 0016              ??_Data_Show 0027                 _RCONbits 0FD0  
       ??i2_Data_Display 0002           ??_Data_Display 0017              _INTCON2bits 0FF1  
              copy_data0 01A8            _Configuration 01C6                 _Hundreds 0038  
               __Hrparam 0000                 __Lrparam 0000           ?_Configuration 0001  
             Data_Show@i 0028                 isa$xinst 0000                 int$flags 003C  
             _INTCONbits 0FF2            Data_Display@D 0016            Data_Display@N 0026  
               intlevel2 0000     __end_of_Data_Display 00FC          ??_Configuration 0016  
