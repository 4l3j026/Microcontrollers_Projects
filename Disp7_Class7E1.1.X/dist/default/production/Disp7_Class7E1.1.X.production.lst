

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 07 00:06:53 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   0001AA                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _Numbers_2
    60   0001AA  BF                 	db	191
    61   0001AB  86                 	db	134
    62   0001AC  DB                 	db	219
    63   0001AD  CF                 	db	207
    64   0001AE  E6                 	db	230
    65   0001AF  ED                 	db	237
    66   0001B0  FD                 	db	253
    67   0001B1  87                 	db	135
    68   0001B2  FF                 	db	255
    69   0001B3  E7                 	db	231
    70   000000                     _INT0IF	set	32657
    71   000000                     _LATA	set	3977
    72   000000                     _TRISA	set	3986
    73   000000                     _ADCON1	set	4033
    74   000000                     _OSCCON	set	4051
    75   000000                     _INTCON2bits	set	4081
    76   000000                     _INTCONbits	set	4082
    77   000000                     _RCONbits	set	4048
    78   000000                     _TRISD	set	3989
    79   000000                     _TRISB	set	3987
    80   000000                     _LATD	set	3980
    81   000000                     _LATB	set	3978
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86   000130                     __pcinit:
    87                           	callstack 0
    88   000130                     start_initialization:
    89                           	callstack 0
    90   000130                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Initialize objects allocated to COMRAM (10 bytes)
    94                           ; load TBLPTR registers with __pidataCOMRAM
    95   000130  0EAA               	movlw	low __pidataCOMRAM
    96   000132  6EF6               	movwf	tblptrl,c
    97   000134  0E01               	movlw	high __pidataCOMRAM
    98   000136  6EF7               	movwf	tblptrh,c
    99   000138  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   100   00013A  6EF8               	movwf	tblptru,c
   101   00013C  EE00  F001         	lfsr	0,__pdataCOMRAM
   102   000140  EE10 F00A          	lfsr	1,10
   103   000144                     copy_data0:
   104   000144  0009               	tblrd		*+
   105   000146  CFF5 FFEE          	movff	tablat,postinc0
   106   00014A  50E5               	movf	postdec1,w,c
   107   00014C  50E1               	movf	fsr1l,w,c
   108   00014E  E1FA               	bnz	copy_data0
   109                           
   110                           ; Clear objects allocated to COMRAM (3 bytes)
   111   000150  6A13               	clrf	(__pbssCOMRAM+2)& (0+255),c
   112   000152  6A12               	clrf	(__pbssCOMRAM+1)& (0+255),c
   113   000154  6A11               	clrf	__pbssCOMRAM& (0+255),c
   114   000156                     end_of_initialization:
   115                           	callstack 0
   116   000156                     __end_of__initialization:
   117                           	callstack 0
   118   000156  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119   000158  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120   00015A  0100               	movlb	0
   121   00015C  EFC6  F000         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124   000011                     __pbssCOMRAM:
   125                           	callstack 0
   126   000011                     _Hundreds:
   127                           	callstack 0
   128   000011                     	ds	1
   129   000012                     _Tens:
   130                           	callstack 0
   131   000012                     	ds	1
   132   000013                     _Units:
   133                           	callstack 0
   134   000013                     	ds	1
   135                           
   136                           	psect	dataCOMRAM
   137   000001                     __pdataCOMRAM:
   138                           	callstack 0
   139   000001                     _Numbers_2:
   140                           	callstack 0
   141   000001                     	ds	10
   142                           
   143                           	psect	cstackCOMRAM
   144   00000B                     __pcstackCOMRAM:
   145                           	callstack 0
   146   00000B                     Display_Function@D2:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x0
   150   00000B                     	ds	1
   151   00000C                     Display_Function@D3:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x1
   155   00000C                     	ds	1
   156   00000D                     Display_Function@D4:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x2
   160   00000D                     	ds	1
   161   00000E                     ??_Display_Function:
   162                           
   163                           ; 1 bytes @ 0x3
   164   00000E                     	ds	2
   165   000010                     Display_Function@D1:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x5
   169   000010                     	ds	1
   170   000011                     
   171                           ; 1 bytes @ 0x6
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 31 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   191 ;;      Params:         0       0       0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called: 2
   197 ;; This function calls:
   198 ;;		_Configuration
   199 ;;		_Display_Function
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206   00018C                     __ptext0:
   207                           	callstack 0
   208   00018C                     _main:
   209                           	callstack 29
   210   00018C                     
   211                           ;main.c: 34:     Configuration();
   212   00018C  ECB0  F000         	call	_Configuration	;wreg free
   213   000190                     l819:
   214                           
   215                           ;main.c: 40:         Display_Function(0, Hundreds, Tens, Units);
   216   000190  C011  F00B         	movff	_Hundreds,Display_Function@D2
   217   000194  C012  F00C         	movff	_Tens,Display_Function@D3
   218   000198  C013  F00D         	movff	_Units,Display_Function@D4
   219   00019C  0E00               	movlw	0
   220   00019E  EC09  F000         	call	_Display_Function
   221   0001A2  EFC8  F000         	goto	l819
   222   0001A6  EF07  F000         	goto	start
   223   0001AA                     __end_of_main:
   224                           	callstack 0
   225                           
   226 ;; *************** function _Display_Function *****************
   227 ;; Defined at:
   228 ;;		line 68 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;  D1              1    wreg     unsigned char 
   231 ;;  D2              1    0[COMRAM] unsigned char 
   232 ;;  D3              1    1[COMRAM] unsigned char 
   233 ;;  D4              1    2[COMRAM] unsigned char 
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  D1              1    5[COMRAM] unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         3       0       0       0       0       0       0       0       0
   246 ;;      Locals:         1       0       0       0       0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0       0       0       0       0
   248 ;;      Totals:         6       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        6 bytes
   250 ;; Hardware stack levels used: 1
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		_main
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text1
   260   000012                     __ptext1:
   261                           	callstack 0
   262   000012                     _Display_Function:
   263                           	callstack 29
   264                           
   265                           ;incstack = 0
   266                           ;Display_Function@D1 stored from wreg
   267   000012  6E10               	movwf	Display_Function@D1^0,c
   268   000014                     
   269                           ;main.c: 70:     LATA = 0x01;
   270   000014  0E01               	movlw	1
   271   000016  6E89               	movwf	137,c	;volatile
   272   000018                     
   273                           ;main.c: 71:     LATD = Numbers_2 [D1];
   274   000018  0E01               	movlw	low _Numbers_2
   275   00001A  2410               	addwf	Display_Function@D1^0,w,c
   276   00001C  6ED9               	movwf	fsr2l,c
   277   00001E  6ADA               	clrf	fsr2h,c
   278   000020  0E00               	movlw	high _Numbers_2
   279   000022  22DA               	addwfc	fsr2h,f,c
   280   000024  50DF               	movf	indf2,w,c
   281   000026  6E8C               	movwf	140,c	;volatile
   282   000028                     
   283                           ;main.c: 72:     _delay((unsigned long)((100)*(8000000/4000.0)));
   284   000028  0E02               	movlw	2
   285   00002A  6E0F               	movwf	(??_Display_Function+1)^0,c
   286   00002C  0E04               	movlw	4
   287   00002E  6E0E               	movwf	??_Display_Function^0,c
   288   000030  0EBA               	movlw	186
   289   000032                     u57:
   290   000032  2EE8               	decfsz	wreg,f,c
   291   000034  D7FE               	bra	u57
   292   000036  2E0E               	decfsz	??_Display_Function^0,f,c
   293   000038  D7FC               	bra	u57
   294   00003A  2E0F               	decfsz	(??_Display_Function+1)^0,f,c
   295   00003C  D7FA               	bra	u57
   296   00003E  D000               	nop2	
   297   000040                     
   298                           ;main.c: 74:     LATA = 0x02;
   299   000040  0E02               	movlw	2
   300   000042  6E89               	movwf	137,c	;volatile
   301                           
   302                           ;main.c: 75:     LATD = Numbers_2 [D2];
   303   000044  0E01               	movlw	low _Numbers_2
   304   000046  240B               	addwf	Display_Function@D2^0,w,c
   305   000048  6ED9               	movwf	fsr2l,c
   306   00004A  6ADA               	clrf	fsr2h,c
   307   00004C  0E00               	movlw	high _Numbers_2
   308   00004E  22DA               	addwfc	fsr2h,f,c
   309   000050  50DF               	movf	indf2,w,c
   310   000052  6E8C               	movwf	140,c	;volatile
   311   000054                     
   312                           ;main.c: 76:     _delay((unsigned long)((100)*(8000000/4000.0)));
   313   000054  0E02               	movlw	2
   314   000056  6E0F               	movwf	(??_Display_Function+1)^0,c
   315   000058  0E04               	movlw	4
   316   00005A  6E0E               	movwf	??_Display_Function^0,c
   317   00005C  0EBA               	movlw	186
   318   00005E                     u67:
   319   00005E  2EE8               	decfsz	wreg,f,c
   320   000060  D7FE               	bra	u67
   321   000062  2E0E               	decfsz	??_Display_Function^0,f,c
   322   000064  D7FC               	bra	u67
   323   000066  2E0F               	decfsz	(??_Display_Function+1)^0,f,c
   324   000068  D7FA               	bra	u67
   325   00006A  D000               	nop2	
   326   00006C                     
   327                           ;main.c: 78:     LATA = 0x04;
   328   00006C  0E04               	movlw	4
   329   00006E  6E89               	movwf	137,c	;volatile
   330   000070                     
   331                           ;main.c: 79:     LATD = Numbers_2 [D3];
   332   000070  0E01               	movlw	low _Numbers_2
   333   000072  240C               	addwf	Display_Function@D3^0,w,c
   334   000074  6ED9               	movwf	fsr2l,c
   335   000076  6ADA               	clrf	fsr2h,c
   336   000078  0E00               	movlw	high _Numbers_2
   337   00007A  22DA               	addwfc	fsr2h,f,c
   338   00007C  50DF               	movf	indf2,w,c
   339   00007E  6E8C               	movwf	140,c	;volatile
   340   000080                     
   341                           ;main.c: 80:     _delay((unsigned long)((100)*(8000000/4000.0)));
   342   000080  0E02               	movlw	2
   343   000082  6E0F               	movwf	(??_Display_Function+1)^0,c
   344   000084  0E04               	movlw	4
   345   000086  6E0E               	movwf	??_Display_Function^0,c
   346   000088  0EBA               	movlw	186
   347   00008A                     u77:
   348   00008A  2EE8               	decfsz	wreg,f,c
   349   00008C  D7FE               	bra	u77
   350   00008E  2E0E               	decfsz	??_Display_Function^0,f,c
   351   000090  D7FC               	bra	u77
   352   000092  2E0F               	decfsz	(??_Display_Function+1)^0,f,c
   353   000094  D7FA               	bra	u77
   354   000096  D000               	nop2	
   355                           
   356                           ;main.c: 82:     LATA = 0x08;
   357   000098  0E08               	movlw	8
   358   00009A  6E89               	movwf	137,c	;volatile
   359   00009C                     
   360                           ;main.c: 83:     LATD = Numbers_2 [D4];
   361   00009C  0E01               	movlw	low _Numbers_2
   362   00009E  240D               	addwf	Display_Function@D4^0,w,c
   363   0000A0  6ED9               	movwf	fsr2l,c
   364   0000A2  6ADA               	clrf	fsr2h,c
   365   0000A4  0E00               	movlw	high _Numbers_2
   366   0000A6  22DA               	addwfc	fsr2h,f,c
   367   0000A8  50DF               	movf	indf2,w,c
   368   0000AA  6E8C               	movwf	140,c	;volatile
   369   0000AC                     
   370                           ;main.c: 84:     _delay((unsigned long)((100)*(8000000/4000.0)));
   371   0000AC  0E02               	movlw	2
   372   0000AE  6E0F               	movwf	(??_Display_Function+1)^0,c
   373   0000B0  0E04               	movlw	4
   374   0000B2  6E0E               	movwf	??_Display_Function^0,c
   375   0000B4  0EBA               	movlw	186
   376   0000B6                     u87:
   377   0000B6  2EE8               	decfsz	wreg,f,c
   378   0000B8  D7FE               	bra	u87
   379   0000BA  2E0E               	decfsz	??_Display_Function^0,f,c
   380   0000BC  D7FC               	bra	u87
   381   0000BE  2E0F               	decfsz	(??_Display_Function+1)^0,f,c
   382   0000C0  D7FA               	bra	u87
   383   0000C2  D000               	nop2	
   384   0000C4  0012               	return		;funcret
   385   0000C6                     __end_of_Display_Function:
   386                           	callstack 0
   387                           
   388 ;; *************** function _Configuration *****************
   389 ;; Defined at:
   390 ;;		line 46 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; Hardware stack levels required when called: 1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419   000160                     __ptext2:
   420                           	callstack 0
   421   000160                     _Configuration:
   422                           	callstack 29
   423   000160                     
   424                           ;main.c: 48:     OSCCON = 0x72;
   425   000160  0E72               	movlw	114
   426   000162  6ED3               	movwf	211,c	;volatile
   427                           
   428                           ;main.c: 49:     ADCON1 = 0x0F;
   429   000164  0E0F               	movlw	15
   430   000166  6EC1               	movwf	193,c	;volatile
   431                           
   432                           ;main.c: 51:     TRISA = 0x00;
   433   000168  0E00               	movlw	0
   434   00016A  6E92               	movwf	146,c	;volatile
   435                           
   436                           ;main.c: 52:     TRISB = 0x03;
   437   00016C  0E03               	movlw	3
   438   00016E  6E93               	movwf	147,c	;volatile
   439                           
   440                           ;main.c: 53:     TRISD = 0x00;
   441   000170  0E00               	movlw	0
   442   000172  6E95               	movwf	149,c	;volatile
   443                           
   444                           ;main.c: 55:     LATA = 0x00;
   445   000174  0E00               	movlw	0
   446   000176  6E89               	movwf	137,c	;volatile
   447                           
   448                           ;main.c: 56:     LATB = 0x00;
   449   000178  0E00               	movlw	0
   450   00017A  6E8A               	movwf	138,c	;volatile
   451                           
   452                           ;main.c: 57:     LATD = 0x00;
   453   00017C  0E00               	movlw	0
   454   00017E  6E8C               	movwf	140,c	;volatile
   455   000180                     
   456                           ;main.c: 60:     RCONbits.IPEN = 0;
   457   000180  9ED0               	bcf	208,7,c	;volatile
   458   000182                     
   459                           ;main.c: 61:     INTCONbits.GIE = 1;
   460   000182  8EF2               	bsf	242,7,c	;volatile
   461   000184                     
   462                           ;main.c: 62:     INTCONbits.INT0IE = 1;
   463   000184  88F2               	bsf	242,4,c	;volatile
   464   000186                     
   465                           ;main.c: 63:     INTCONbits.INT0IF = 0;
   466   000186  92F2               	bcf	242,1,c	;volatile
   467   000188                     
   468                           ;main.c: 64:     INTCON2bits.INTEDG0 = 0;
   469   000188  9CF1               	bcf	241,6,c	;volatile
   470   00018A  0012               	return		;funcret
   471   00018C                     __end_of_Configuration:
   472                           	callstack 0
   473                           
   474 ;; *************** function _INT *****************
   475 ;; Defined at:
   476 ;;		line 90 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		Interrupt level 2
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	intcode
   504   000008                     __pintcode:
   505                           	callstack 0
   506   000008                     _INT:
   507                           	callstack 29
   508                           
   509                           ;incstack = 0
   510   000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   511   00000A  ED63  F000         	call	int_func,f	;refresh shadow registers
   512                           
   513                           	psect	intcode_body
   514   0000C6                     __pintcode_body:
   515                           	callstack 29
   516   0000C6                     int_func:
   517                           	callstack 29
   518   0000C6  0006               	pop		; remove dummy address from shadow register refresh
   519   0000C8                     
   520                           ;main.c: 92:     if (INT0IF) {
   521   0000C8  A2F2               	btfss	4082,1,c	;volatile
   522   0000CA  EF69  F000         	goto	i2u1_41
   523   0000CE  EF6B  F000         	goto	i2u1_40
   524   0000D2                     i2u1_41:
   525   0000D2  EF96  F000         	goto	i2l63
   526   0000D6                     i2u1_40:
   527   0000D6                     
   528                           ;main.c: 94:         INT0IF = 0;
   529   0000D6  92F2               	bcf	4082,1,c	;volatile
   530   0000D8                     
   531                           ;main.c: 95:         Units++;
   532   0000D8  2A13               	incf	_Units^0,f,c
   533   0000DA                     
   534                           ;main.c: 97:         if (Units == 10) {
   535   0000DA  0E0A               	movlw	10
   536   0000DC  1813               	xorwf	_Units^0,w,c
   537   0000DE  A4D8               	btfss	status,2,c
   538   0000E0  EF74  F000         	goto	i2u2_41
   539   0000E4  EF76  F000         	goto	i2u2_40
   540   0000E8                     i2u2_41:
   541   0000E8  EF7B  F000         	goto	i2l787
   542   0000EC                     i2u2_40:
   543   0000EC                     
   544                           ;main.c: 99:             Units = 0;
   545   0000EC  0E00               	movlw	0
   546   0000EE  6E13               	movwf	_Units^0,c
   547   0000F0                     
   548                           ;main.c: 100:             Tens++;
   549   0000F0  2A12               	incf	_Tens^0,f,c
   550                           
   551                           ;main.c: 102:         } else if (Tens == 10) {
   552   0000F2  EF96  F000         	goto	i2l63
   553   0000F6                     i2l787:
   554   0000F6  0E0A               	movlw	10
   555   0000F8  1812               	xorwf	_Tens^0,w,c
   556   0000FA  A4D8               	btfss	status,2,c
   557   0000FC  EF82  F000         	goto	i2u3_41
   558   000100  EF84  F000         	goto	i2u3_40
   559   000104                     i2u3_41:
   560   000104  EF89  F000         	goto	i2l793
   561   000108                     i2u3_40:
   562   000108                     
   563                           ;main.c: 104:             Tens = 0;
   564   000108  0E00               	movlw	0
   565   00010A  6E12               	movwf	_Tens^0,c
   566   00010C                     
   567                           ;main.c: 105:             Hundreds++;
   568   00010C  2A11               	incf	_Hundreds^0,f,c
   569                           
   570                           ;main.c: 107:         } else if (Hundreds == 10) {
   571   00010E  EF96  F000         	goto	i2l63
   572   000112                     i2l793:
   573   000112  0E0A               	movlw	10
   574   000114  1811               	xorwf	_Hundreds^0,w,c
   575   000116  A4D8               	btfss	status,2,c
   576   000118  EF90  F000         	goto	i2u4_41
   577   00011C  EF92  F000         	goto	i2u4_40
   578   000120                     i2u4_41:
   579   000120  EF96  F000         	goto	i2l59
   580   000124                     i2u4_40:
   581   000124                     
   582                           ;main.c: 109:             Hundreds = 0;
   583   000124  0E00               	movlw	0
   584   000126  6E11               	movwf	_Hundreds^0,c
   585   000128  EF96  F000         	goto	i2l63
   586   00012C                     i2l59:
   587   00012C                     i2l63:
   588   00012C  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   589   00012E  0011               	retfie		f
   590   000130                     __end_of_INT:
   591                           	callstack 0
   592   000000                     
   593                           	psect	rparam
   594   000000                     
   595                           	psect	temp
   596   000014                     btemp:
   597                           	callstack 0
   598   000014                     	ds	1
   599   000000                     int$flags	set	btemp
   600   000000                     wtemp8	set	btemp+1
   601   000000                     ttemp5	set	btemp+1
   602   000000                     ttemp6	set	btemp+4
   603   000000                     ttemp7	set	btemp+8
   604                           
   605                           	psect	config
   606                           
   607                           ;Config register CONFIG1L @ 0x300000
   608                           ;	PLL Prescaler Selection bits
   609                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   610                           ;	System Clock Postscaler Selection bits
   611                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   612                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   613                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   614   300000                     	org	3145728
   615   300000  00                 	db	0
   616                           
   617                           ;Config register CONFIG1H @ 0x300001
   618                           ;	Oscillator Selection bits
   619                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   620                           ;	Fail-Safe Clock Monitor Enable bit
   621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   622                           ;	Internal/External Oscillator Switchover bit
   623                           ;	IESO = OFF, Oscillator Switchover mode disabled
   624   300001                     	org	3145729
   625   300001  05                 	db	5
   626                           
   627                           ;Config register CONFIG2L @ 0x300002
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRT = OFF, PWRT disabled
   630                           ;	Brown-out Reset Enable bits
   631                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   632                           ;	Brown-out Reset Voltage bits
   633                           ;	BORV = 3, Minimum setting 2.05V
   634                           ;	USB Voltage Regulator Enable bit
   635                           ;	VREGEN = OFF, USB voltage regulator disabled
   636   300002                     	org	3145730
   637   300002  1F                 	db	31
   638                           
   639                           ;Config register CONFIG2H @ 0x300003
   640                           ;	Watchdog Timer Enable bit
   641                           ;	WDT = ON, WDT enabled
   642                           ;	Watchdog Timer Postscale Select bits
   643                           ;	WDTPS = 32768, 1:32768
   644   300003                     	org	3145731
   645   300003  1F                 	db	31
   646                           
   647                           ; Padding undefined space
   648   300004                     	org	3145732
   649   300004  FF                 	db	255
   650                           
   651                           ;Config register CONFIG3H @ 0x300005
   652                           ;	CCP2 MUX bit
   653                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   654                           ;	PORTB A/D Enable bit
   655                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   656                           ;	Low-Power Timer 1 Oscillator Enable bit
   657                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   658                           ;	MCLR Pin Enable bit
   659                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   660   300005                     	org	3145733
   661   300005  83                 	db	131
   662                           
   663                           ;Config register CONFIG4L @ 0x300006
   664                           ;	Stack Full/Underflow Reset Enable bit
   665                           ;	STVREN = ON, Stack full/underflow will cause Reset
   666                           ;	Single-Supply ICSP Enable bit
   667                           ;	LVP = ON, Single-Supply ICSP enabled
   668                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   669                           ;	ICPRT = OFF, ICPORT disabled
   670                           ;	Extended Instruction Set Enable bit
   671                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   672                           ;	Background Debugger Enable bit
   673                           ;	DEBUG = 0x1, unprogrammed default
   674   300006                     	org	3145734
   675   300006  85                 	db	133
   676                           
   677                           ; Padding undefined space
   678   300007                     	org	3145735
   679   300007  FF                 	db	255
   680                           
   681                           ;Config register CONFIG5L @ 0x300008
   682                           ;	Code Protection bit
   683                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   684                           ;	Code Protection bit
   685                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   686                           ;	Code Protection bit
   687                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   688                           ;	Code Protection bit
   689                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   690   300008                     	org	3145736
   691   300008  0F                 	db	15
   692                           
   693                           ;Config register CONFIG5H @ 0x300009
   694                           ;	Boot Block Code Protection bit
   695                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   696                           ;	Data EEPROM Code Protection bit
   697                           ;	CPD = OFF, Data EEPROM is not code-protected
   698   300009                     	org	3145737
   699   300009  C0                 	db	192
   700                           
   701                           ;Config register CONFIG6L @ 0x30000A
   702                           ;	Write Protection bit
   703                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   704                           ;	Write Protection bit
   705                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   706                           ;	Write Protection bit
   707                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   708                           ;	Write Protection bit
   709                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   710   30000A                     	org	3145738
   711   30000A  0F                 	db	15
   712                           
   713                           ;Config register CONFIG6H @ 0x30000B
   714                           ;	Configuration Register Write Protection bit
   715                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   716                           ;	Boot Block Write Protection bit
   717                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   718                           ;	Data EEPROM Write Protection bit
   719                           ;	WRTD = OFF, Data EEPROM is not write-protected
   720   30000B                     	org	3145739
   721   30000B  E0                 	db	224
   722                           
   723                           ;Config register CONFIG7L @ 0x30000C
   724                           ;	Table Read Protection bit
   725                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   726                           ;	Table Read Protection bit
   727                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   728                           ;	Table Read Protection bit
   729                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   730                           ;	Table Read Protection bit
   731                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   732   30000C                     	org	3145740
   733   30000C  0F                 	db	15
   734                           
   735                           ;Config register CONFIG7H @ 0x30000D
   736                           ;	Boot Block Table Read Protection bit
   737                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   738   30000D                     	org	3145741
   739   30000D  40                 	db	64
   740                           tosu	equ	0xFFF
   741                           tosh	equ	0xFFE
   742                           tosl	equ	0xFFD
   743                           stkptr	equ	0xFFC
   744                           pclatu	equ	0xFFB
   745                           pclath	equ	0xFFA
   746                           pcl	equ	0xFF9
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           prodh	equ	0xFF4
   752                           prodl	equ	0xFF3
   753                           indf0	equ	0xFEF
   754                           postinc0	equ	0xFEE
   755                           postdec0	equ	0xFED
   756                           preinc0	equ	0xFEC
   757                           plusw0	equ	0xFEB
   758                           fsr0h	equ	0xFEA
   759                           fsr0l	equ	0xFE9
   760                           wreg	equ	0xFE8
   761                           indf1	equ	0xFE7
   762                           postinc1	equ	0xFE6
   763                           postdec1	equ	0xFE5
   764                           preinc1	equ	0xFE4
   765                           plusw1	equ	0xFE3
   766                           fsr1h	equ	0xFE2
   767                           fsr1l	equ	0xFE1
   768                           bsr	equ	0xFE0
   769                           indf2	equ	0xFDF
   770                           postinc2	equ	0xFDE
   771                           postdec2	equ	0xFDD
   772                           preinc2	equ	0xFDC
   773                           plusw2	equ	0xFDB
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Display_Function

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     316
                      _Configuration
                   _Display_Function
 ---------------------------------------------------------------------------------
 (1) _Display_Function                                     6     3      3     316
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Display_Function

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      13       1       20.2%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      29        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 07 00:06:53 2023

                      l52 00C4                        l49 018A                        u57 0032  
                      u67 005E                        u77 008A                        u87 00B6  
                     l801 0028                       l811 0080                       l803 0040  
                     l741 0180                       l813 009C                       l805 0054  
                     l743 0182                       l815 00AC                       l807 006C  
                     l745 0184                       l809 0070                       l817 018C  
                     l747 0186                       l739 0160                       l819 0190  
                     l749 0188                       l797 0014                       l799 0018  
                     _INT 0008                       wreg 0FE8                      ?_INT 000B  
                    _LATA 0F89                      _LATB 0F8A                      _LATD 0F8C  
                    i2l63 012C                      i2l59 012C                      _Tens 0012  
                    _main 018C                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      btemp 0014                      start 000E  
            ___param_bank 0000                     ??_INT 000B                     ?_main 000B  
                   i2l781 00DA                     i2l791 010C                     i2l783 00EC  
                   i2l775 00C8                     i2l793 0112                     i2l785 00F0  
                   i2l777 00D6                     i2l795 0124                     i2l787 00F6  
                   i2l779 00D8                     i2l789 0108                     _TRISA 0F92  
                   _TRISB 0F93                     _TRISD 0F95                     _Units 0013  
                   tablat 0FF5                     ttemp5 0015                     ttemp6 0018  
                   ttemp7 001C                     status 0FD8                     wtemp8 0015  
         __initialization 0130              __end_of_main 01AA                    ??_main 0011  
           __activetblptr 0000                    _ADCON1 0FC1                    _INT0IF 7F91  
                  _OSCCON 0FD3                    i2u1_40 00D6                    i2u1_41 00D2  
                  i2u2_40 00EC                    i2u2_41 00E8                    i2u3_40 0108  
                  i2u3_41 0104                    i2u4_40 0124                    i2u4_41 0120  
                  isa$std 0001              __pdataCOMRAM 0001                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                __accesstop 0060  
 __end_of__initialization 0156             ___rparam_used 0001            __pcstackCOMRAM 000B  
      Display_Function@D1 0010        Display_Function@D2 000B        Display_Function@D3 000C  
      Display_Function@D4 000D     __end_of_Configuration 018C                   __Hparam 0000  
                 __Lparam 0000                   __pcinit 0130                   __ramtop 0800  
                 __ptext0 018C                   __ptext1 0012                   __ptext2 0160  
          __pintcode_body 00C6      end_of_initialization 0156                   int_func 00C6  
        _Display_Function 0012                   postdec1 0FE5                   postinc0 0FEE  
           __pidataCOMRAM 01AA       start_initialization 0130               __end_of_INT 0130  
               _Numbers_2 0001               __pbssCOMRAM 0011                 __pintcode 0008  
__end_of_Display_Function 00C6                  _RCONbits 0FD0               _INTCON2bits 0FF1  
               copy_data0 0144             _Configuration 0160                  _Hundreds 0011  
                __Hrparam 0000                  __Lrparam 0000            ?_Configuration 000B  
                isa$xinst 0000                  int$flags 0014                _INTCONbits 0FF2  
                intlevel2 0000         ?_Display_Function 000B        ??_Display_Function 000E  
         ??_Configuration 000B  
