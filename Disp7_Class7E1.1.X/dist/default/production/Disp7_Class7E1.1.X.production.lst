

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 24 21:43:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 09/02/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000110                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for Data_Display@F3213
    60   000110  BF                 	db	191
    61   000111  86                 	db	134
    62   000112  DB                 	db	219
    63   000113  CF                 	db	207
    64   000114  E6                 	db	230
    65   000115  ED                 	db	237
    66   000116  FD                 	db	253
    67   000117  87                 	db	135
    68   000118  FF                 	db	255
    69   000119  E7                 	db	231
    70                           
    71                           ;initializer for Data_Display@F3215
    72   00011A  01                 	db	1
    73   00011B  02                 	db	2
    74   00011C  04                 	db	4
    75   00011D  08                 	db	8
    76   000000                     _INT0IF	set	32657
    77   000000                     _LATA	set	3977
    78   000000                     _TRISA	set	3986
    79   000000                     _ADCON1	set	4033
    80   000000                     _OSCCON	set	4051
    81   000000                     _INTCON2bits	set	4081
    82   000000                     _INTCONbits	set	4082
    83   000000                     _RCONbits	set	4048
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISB	set	3987
    86   000000                     _LATD	set	3980
    87   000000                     _LATB	set	3978
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   0000A0                     __pcinit:
    93                           	callstack 0
    94   0000A0                     start_initialization:
    95                           	callstack 0
    96   0000A0                     __initialization:
    97                           	callstack 0
    98                           
    99                           ; Initialize objects allocated to COMRAM (14 bytes)
   100                           ; load TBLPTR registers with __pidataCOMRAM
   101   0000A0  0E10               	movlw	low __pidataCOMRAM
   102   0000A2  6EF6               	movwf	tblptrl,c
   103   0000A4  0E01               	movlw	high __pidataCOMRAM
   104   0000A6  6EF7               	movwf	tblptrh,c
   105   0000A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   106   0000AA  6EF8               	movwf	tblptru,c
   107   0000AC  EE00  F013         	lfsr	0,__pdataCOMRAM
   108   0000B0  EE10 F00E          	lfsr	1,14
   109   0000B4                     copy_data0:
   110   0000B4  0009               	tblrd		*+
   111   0000B6  CFF5 FFEE          	movff	tablat,postinc0
   112   0000BA  50E5               	movf	postdec1,w,c
   113   0000BC  50E1               	movf	fsr1l,w,c
   114   0000BE  E1FA               	bnz	copy_data0
   115                           
   116                           ; Clear objects allocated to COMRAM (2 bytes)
   117   0000C0  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   118   0000C2  6A21               	clrf	__pbssCOMRAM& (0+255),c
   119   0000C4                     end_of_initialization:
   120                           	callstack 0
   121   0000C4                     __end_of__initialization:
   122                           	callstack 0
   123   0000C4  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   124   0000C6  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   125   0000C8  0100               	movlb	0
   126   0000CA  EF7D  F000         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129   000021                     __pbssCOMRAM:
   130                           	callstack 0
   131   000021                     _Display_Counter:
   132                           	callstack 0
   133   000021                     	ds	1
   134   000022                     _Number_Counter:
   135                           	callstack 0
   136   000022                     	ds	1
   137                           
   138                           	psect	dataCOMRAM
   139   000013                     __pdataCOMRAM:
   140                           	callstack 0
   141   000013                     Data_Display@F3213:
   142                           	callstack 0
   143   000013                     	ds	10
   144   00001D                     Data_Display@F3215:
   145                           	callstack 0
   146   00001D                     	ds	4
   147                           
   148                           	psect	cstackCOMRAM
   149   000001                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000001                     Data_Display@D:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x0
   155   000001                     	ds	1
   156   000002                     ??_Data_Display:
   157                           
   158                           ; 1 bytes @ 0x1
   159   000002                     	ds	2
   160   000004                     Data_Display@Numbers_2:
   161                           	callstack 0
   162                           
   163                           ; 10 bytes @ 0x3
   164   000004                     	ds	10
   165   00000E                     Data_Display@Display:
   166                           	callstack 0
   167                           
   168                           ; 4 bytes @ 0xD
   169   00000E                     	ds	4
   170   000012                     Data_Display@N:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x11
   174   000012                     	ds	1
   175   000013                     
   176                           ; 1 bytes @ 0x12
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 28 in file "main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels required when called: 2
   202 ;; This function calls:
   203 ;;		_Configuration
   204 ;;		_Data_Display
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text0
   211   0000FA                     __ptext0:
   212                           	callstack 0
   213   0000FA                     _main:
   214                           	callstack 29
   215   0000FA                     
   216                           ;main.c: 31:     Configuration();
   217   0000FA  EC67  F000         	call	_Configuration	;wreg free
   218   0000FE                     l785:
   219                           
   220                           ;main.c: 43:         Data_Display(Number_Counter, Display_Counter);
   221   0000FE  C021  F001         	movff	_Display_Counter,Data_Display@D
   222   000102  5022               	movf	_Number_Counter^0,w,c
   223   000104  EC09  F000         	call	_Data_Display
   224   000108  EF7F  F000         	goto	l785
   225   00010C  EF07  F000         	goto	start
   226   000110                     __end_of_main:
   227                           	callstack 0
   228                           
   229 ;; *************** function _Data_Display *****************
   230 ;; Defined at:
   231 ;;		line 75 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;  N               1    wreg     unsigned char 
   234 ;;  D               1    0[COMRAM] unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  N               1   17[COMRAM] unsigned char 
   237 ;;  Numbers_2      10    3[COMRAM] unsigned char [10]
   238 ;;  Display         4   13[COMRAM] unsigned char [4]
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   248 ;;      Params:         1       0       0       0       0       0       0       0       0
   249 ;;      Locals:        15       0       0       0       0       0       0       0       0
   250 ;;      Temps:          2       0       0       0       0       0       0       0       0
   251 ;;      Totals:        18       0       0       0       0       0       0       0       0
   252 ;;Total ram usage:       18 bytes
   253 ;; Hardware stack levels used: 1
   254 ;; Hardware stack levels required when called: 1
   255 ;; This function calls:
   256 ;;		Nothing
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263   000012                     __ptext1:
   264                           	callstack 0
   265   000012                     _Data_Display:
   266                           	callstack 29
   267                           
   268                           ;incstack = 0
   269                           ;Data_Display@N stored from wreg
   270   000012  6E12               	movwf	Data_Display@N^0,c
   271   000014                     
   272                           ;main.c: 78:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   273   000014  EE20  F013         	lfsr	2,Data_Display@F3213
   274   000018  EE10  F004         	lfsr	1,Data_Display@Numbers_2
   275   00001C  0E09               	movlw	9
   276   00001E                     u41:
   277   00001E  CFDB FFE3          	movff	plusw2,plusw1
   278   000022  06E8               	decf	wreg,f,c
   279   000024  E2FC               	bc	u41
   280   000026                     
   281                           ;main.c: 80:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   282   000026  C01D  F00E         	movff	Data_Display@F3215,Data_Display@Display
   283   00002A  C01E  F00F         	movff	Data_Display@F3215+1,Data_Display@Display+1
   284   00002E  C01F  F010         	movff	Data_Display@F3215+2,Data_Display@Display+2
   285   000032  C020  F011         	movff	Data_Display@F3215+3,Data_Display@Display+3
   286   000036                     
   287                           ;main.c: 83:     LATD = Numbers_2 [N];
   288   000036  0E04               	movlw	low Data_Display@Numbers_2
   289   000038  2412               	addwf	Data_Display@N^0,w,c
   290   00003A  6ED9               	movwf	fsr2l,c
   291   00003C  6ADA               	clrf	fsr2h,c
   292   00003E  0E00               	movlw	high Data_Display@Numbers_2
   293   000040  22DA               	addwfc	fsr2h,f,c
   294   000042  50DF               	movf	indf2,w,c
   295   000044  6E8C               	movwf	140,c	;volatile
   296   000046                     
   297                           ;main.c: 84:     LATA = Display [D];
   298   000046  0E0E               	movlw	low Data_Display@Display
   299   000048  2401               	addwf	Data_Display@D^0,w,c
   300   00004A  6ED9               	movwf	fsr2l,c
   301   00004C  6ADA               	clrf	fsr2h,c
   302   00004E  0E00               	movlw	high Data_Display@Display
   303   000050  22DA               	addwfc	fsr2h,f,c
   304   000052  50DF               	movf	indf2,w,c
   305   000054  6E89               	movwf	137,c	;volatile
   306   000056                     
   307                           ;main.c: 85:     _delay((unsigned long)((200)*(8000000/4000.0)));
   308   000056  0E03               	movlw	3
   309   000058  6E03               	movwf	(??_Data_Display+1)^0,c
   310   00005A  0E08               	movlw	8
   311   00005C  6E02               	movwf	??_Data_Display^0,c
   312   00005E  0E77               	movlw	119
   313   000060                     u57:
   314   000060  2EE8               	decfsz	wreg,f,c
   315   000062  D7FE               	bra	u57
   316   000064  2E02               	decfsz	??_Data_Display^0,f,c
   317   000066  D7FC               	bra	u57
   318   000068  2E03               	decfsz	(??_Data_Display+1)^0,f,c
   319   00006A  D7FA               	bra	u57
   320   00006C  F000               	nop	
   321   00006E  0012               	return		;funcret
   322   000070                     __end_of_Data_Display:
   323                           	callstack 0
   324                           
   325 ;; *************** function _Configuration *****************
   326 ;; Defined at:
   327 ;;		line 51 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356   0000CE                     __ptext2:
   357                           	callstack 0
   358   0000CE                     _Configuration:
   359                           	callstack 29
   360   0000CE                     
   361                           ;main.c: 53:     OSCCON = 0x72;
   362   0000CE  0E72               	movlw	114
   363   0000D0  6ED3               	movwf	211,c	;volatile
   364                           
   365                           ;main.c: 54:     ADCON1 = 0x0F;
   366   0000D2  0E0F               	movlw	15
   367   0000D4  6EC1               	movwf	193,c	;volatile
   368                           
   369                           ;main.c: 56:     TRISA = 0x00;
   370   0000D6  0E00               	movlw	0
   371   0000D8  6E92               	movwf	146,c	;volatile
   372                           
   373                           ;main.c: 57:     TRISB = 0x03;
   374   0000DA  0E03               	movlw	3
   375   0000DC  6E93               	movwf	147,c	;volatile
   376                           
   377                           ;main.c: 58:     TRISD = 0x00;
   378   0000DE  0E00               	movlw	0
   379   0000E0  6E95               	movwf	149,c	;volatile
   380                           
   381                           ;main.c: 60:     LATA = 0x00;
   382   0000E2  0E00               	movlw	0
   383   0000E4  6E89               	movwf	137,c	;volatile
   384                           
   385                           ;main.c: 61:     LATB = 0x00;
   386   0000E6  0E00               	movlw	0
   387   0000E8  6E8A               	movwf	138,c	;volatile
   388                           
   389                           ;main.c: 62:     LATD = 0x00;
   390   0000EA  0E00               	movlw	0
   391   0000EC  6E8C               	movwf	140,c	;volatile
   392   0000EE                     
   393                           ;main.c: 65:     RCONbits.IPEN = 0;
   394   0000EE  9ED0               	bcf	208,7,c	;volatile
   395   0000F0                     
   396                           ;main.c: 66:     INTCONbits.GIE = 1;
   397   0000F0  8EF2               	bsf	242,7,c	;volatile
   398   0000F2                     
   399                           ;main.c: 67:     INTCONbits.INT0IE = 1;
   400   0000F2  88F2               	bsf	242,4,c	;volatile
   401   0000F4                     
   402                           ;main.c: 68:     INTCONbits.INT0IF = 0;
   403   0000F4  92F2               	bcf	242,1,c	;volatile
   404   0000F6                     
   405                           ;main.c: 69:     INTCON2bits.INTEDG0 = 0;
   406   0000F6  9CF1               	bcf	241,6,c	;volatile
   407   0000F8  0012               	return		;funcret
   408   0000FA                     __end_of_Configuration:
   409                           	callstack 0
   410                           
   411 ;; *************** function _INT *****************
   412 ;; Defined at:
   413 ;;		line 92 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   427 ;;      Params:         0       0       0       0       0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		Interrupt level 2
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	intcode
   441   000008                     __pintcode:
   442                           	callstack 0
   443   000008                     _INT:
   444                           	callstack 29
   445                           
   446                           ;incstack = 0
   447   000008  8223               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   448   00000A  ED38  F000         	call	int_func,f	;refresh shadow registers
   449                           
   450                           	psect	intcode_body
   451   000070                     __pintcode_body:
   452                           	callstack 29
   453   000070                     int_func:
   454                           	callstack 29
   455   000070  0006               	pop		; remove dummy address from shadow register refresh
   456   000072                     
   457                           ;main.c: 94:     if (INT0IF) {
   458   000072  A2F2               	btfss	4082,1,c	;volatile
   459   000074  EF3E  F000         	goto	i2u2_41
   460   000078  EF40  F000         	goto	i2u2_40
   461   00007C                     i2u2_41:
   462   00007C  EF4E  F000         	goto	i2l59
   463   000080                     i2u2_40:
   464   000080                     
   465                           ;main.c: 96:         INT0IF = 0;
   466   000080  92F2               	bcf	4082,1,c	;volatile
   467   000082                     
   468                           ;main.c: 97:         Number_Counter++;
   469   000082  2A22               	incf	_Number_Counter^0,f,c
   470   000084                     
   471                           ;main.c: 98:         if (Number_Counter == 10) {
   472   000084  0E0A               	movlw	10
   473   000086  1822               	xorwf	_Number_Counter^0,w,c
   474   000088  A4D8               	btfss	status,2,c
   475   00008A  EF49  F000         	goto	i2u3_41
   476   00008E  EF4B  F000         	goto	i2u3_40
   477   000092                     i2u3_41:
   478   000092  EF4E  F000         	goto	i2l59
   479   000096                     i2u3_40:
   480   000096                     
   481                           ;main.c: 100:             Number_Counter = 0;
   482   000096  0E00               	movlw	0
   483   000098  6E22               	movwf	_Number_Counter^0,c
   484   00009A                     
   485                           ;main.c: 101:             Display_Counter++;
   486   00009A  2A21               	incf	_Display_Counter^0,f,c
   487   00009C                     i2l59:
   488   00009C  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   489   00009E  0011               	retfie		f
   490   0000A0                     __end_of_INT:
   491                           	callstack 0
   492   000000                     
   493                           	psect	rparam
   494   000000                     
   495                           	psect	temp
   496   000023                     btemp:
   497                           	callstack 0
   498   000023                     	ds	1
   499   000000                     int$flags	set	btemp
   500   000000                     wtemp8	set	btemp+1
   501   000000                     ttemp5	set	btemp+1
   502   000000                     ttemp6	set	btemp+4
   503   000000                     ttemp7	set	btemp+8
   504                           
   505                           	psect	config
   506                           
   507                           ;Config register CONFIG1L @ 0x300000
   508                           ;	PLL Prescaler Selection bits
   509                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   510                           ;	System Clock Postscaler Selection bits
   511                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   512                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   513                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   514   300000                     	org	3145728
   515   300000  00                 	db	0
   516                           
   517                           ;Config register CONFIG1H @ 0x300001
   518                           ;	Oscillator Selection bits
   519                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   520                           ;	Fail-Safe Clock Monitor Enable bit
   521                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   522                           ;	Internal/External Oscillator Switchover bit
   523                           ;	IESO = OFF, Oscillator Switchover mode disabled
   524   300001                     	org	3145729
   525   300001  05                 	db	5
   526                           
   527                           ;Config register CONFIG2L @ 0x300002
   528                           ;	Power-up Timer Enable bit
   529                           ;	PWRT = OFF, PWRT disabled
   530                           ;	Brown-out Reset Enable bits
   531                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   532                           ;	Brown-out Reset Voltage bits
   533                           ;	BORV = 3, Minimum setting 2.05V
   534                           ;	USB Voltage Regulator Enable bit
   535                           ;	VREGEN = OFF, USB voltage regulator disabled
   536   300002                     	org	3145730
   537   300002  1F                 	db	31
   538                           
   539                           ;Config register CONFIG2H @ 0x300003
   540                           ;	Watchdog Timer Enable bit
   541                           ;	WDT = ON, WDT enabled
   542                           ;	Watchdog Timer Postscale Select bits
   543                           ;	WDTPS = 32768, 1:32768
   544   300003                     	org	3145731
   545   300003  1F                 	db	31
   546                           
   547                           ; Padding undefined space
   548   300004                     	org	3145732
   549   300004  FF                 	db	255
   550                           
   551                           ;Config register CONFIG3H @ 0x300005
   552                           ;	CCP2 MUX bit
   553                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   554                           ;	PORTB A/D Enable bit
   555                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   556                           ;	Low-Power Timer 1 Oscillator Enable bit
   557                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   558                           ;	MCLR Pin Enable bit
   559                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   560   300005                     	org	3145733
   561   300005  83                 	db	131
   562                           
   563                           ;Config register CONFIG4L @ 0x300006
   564                           ;	Stack Full/Underflow Reset Enable bit
   565                           ;	STVREN = ON, Stack full/underflow will cause Reset
   566                           ;	Single-Supply ICSP Enable bit
   567                           ;	LVP = ON, Single-Supply ICSP enabled
   568                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   569                           ;	ICPRT = OFF, ICPORT disabled
   570                           ;	Extended Instruction Set Enable bit
   571                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   572                           ;	Background Debugger Enable bit
   573                           ;	DEBUG = 0x1, unprogrammed default
   574   300006                     	org	3145734
   575   300006  85                 	db	133
   576                           
   577                           ; Padding undefined space
   578   300007                     	org	3145735
   579   300007  FF                 	db	255
   580                           
   581                           ;Config register CONFIG5L @ 0x300008
   582                           ;	Code Protection bit
   583                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   584                           ;	Code Protection bit
   585                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   586                           ;	Code Protection bit
   587                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   588                           ;	Code Protection bit
   589                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   590   300008                     	org	3145736
   591   300008  0F                 	db	15
   592                           
   593                           ;Config register CONFIG5H @ 0x300009
   594                           ;	Boot Block Code Protection bit
   595                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   596                           ;	Data EEPROM Code Protection bit
   597                           ;	CPD = OFF, Data EEPROM is not code-protected
   598   300009                     	org	3145737
   599   300009  C0                 	db	192
   600                           
   601                           ;Config register CONFIG6L @ 0x30000A
   602                           ;	Write Protection bit
   603                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   604                           ;	Write Protection bit
   605                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   606                           ;	Write Protection bit
   607                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   608                           ;	Write Protection bit
   609                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   610   30000A                     	org	3145738
   611   30000A  0F                 	db	15
   612                           
   613                           ;Config register CONFIG6H @ 0x30000B
   614                           ;	Configuration Register Write Protection bit
   615                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   616                           ;	Boot Block Write Protection bit
   617                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   618                           ;	Data EEPROM Write Protection bit
   619                           ;	WRTD = OFF, Data EEPROM is not write-protected
   620   30000B                     	org	3145739
   621   30000B  E0                 	db	224
   622                           
   623                           ;Config register CONFIG7L @ 0x30000C
   624                           ;	Table Read Protection bit
   625                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   626                           ;	Table Read Protection bit
   627                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   628                           ;	Table Read Protection bit
   629                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   630                           ;	Table Read Protection bit
   631                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   632   30000C                     	org	3145740
   633   30000C  0F                 	db	15
   634                           
   635                           ;Config register CONFIG7H @ 0x30000D
   636                           ;	Boot Block Table Read Protection bit
   637                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   638   30000D                     	org	3145741
   639   30000D  40                 	db	64
   640                           tosu	equ	0xFFF
   641                           tosh	equ	0xFFE
   642                           tosl	equ	0xFFD
   643                           stkptr	equ	0xFFC
   644                           pclatu	equ	0xFFB
   645                           pclath	equ	0xFFA
   646                           pcl	equ	0xFF9
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           prodh	equ	0xFF4
   652                           prodl	equ	0xFF3
   653                           indf0	equ	0xFEF
   654                           postinc0	equ	0xFEE
   655                           postdec0	equ	0xFED
   656                           preinc0	equ	0xFEC
   657                           plusw0	equ	0xFEB
   658                           fsr0h	equ	0xFEA
   659                           fsr0l	equ	0xFE9
   660                           wreg	equ	0xFE8
   661                           indf1	equ	0xFE7
   662                           postinc1	equ	0xFE6
   663                           postdec1	equ	0xFE5
   664                           preinc1	equ	0xFE4
   665                           plusw1	equ	0xFE3
   666                           fsr1h	equ	0xFE2
   667                           fsr1l	equ	0xFE1
   668                           bsr	equ	0xFE0
   669                           indf2	equ	0xFDF
   670                           postinc2	equ	0xFDE
   671                           postdec2	equ	0xFDD
   672                           preinc2	equ	0xFDC
   673                           plusw2	equ	0xFDB
   674                           fsr2h	equ	0xFDA
   675                           fsr2l	equ	0xFD9
   676                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                      _Configuration
                       _Data_Display
 ---------------------------------------------------------------------------------
 (1) _Data_Display                                        18    17      1     168
                                              0 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      22       1       36.2%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      29        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 24 21:43:03 2023

                     l52 006E                       l45 00F8                       u41 001E  
                     u57 0060                      l741 00F2                      l743 00F4  
                    l735 00CE                      l745 00F6                      l737 00EE  
                    l739 00F0                      l781 0056                      l773 0014  
                    l775 0026                      l783 00FA                      l777 0036  
                    l785 00FE                      l779 0046                      _INT 0008  
                    wreg 0FE8                     ?_INT 0001                     _LATA 0F89  
                   _LATB 0F8A                     _LATD 0F8C                     i2l59 009C  
                   _main 00FA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0023                     start 000E  
           ___param_bank 0000                    ??_INT 0001                    ?_main 0001  
                  i2l761 0072                    i2l771 009A                    i2l763 0080  
                  i2l765 0082                    i2l767 0084                    i2l769 0096  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISD 0F95  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  ttemp5 0024                    ttemp6 0027                    ttemp7 002B  
                  status 0FD8                    wtemp8 0024          __initialization 00A0  
           __end_of_main 0110                   ??_main 0013            __activetblptr 0000  
           _Data_Display 0012                   _ADCON1 0FC1    Data_Display@Numbers_2 0004  
                 _INT0IF 7F91                   _OSCCON 0FD3                   i2u2_40 0080  
                 i2u2_41 007C                   i2u3_40 0096                   i2u3_41 0092  
                 isa$std 0001          _Display_Counter 0021             __pdataCOMRAM 0013  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 00C4            ___rparam_used 0001  
         __pcstackCOMRAM 0001      Data_Display@Display 000E           _Number_Counter 0022  
      Data_Display@F3213 0013        Data_Display@F3215 001D    __end_of_Configuration 00FA  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00A0  
                __ramtop 0800                  __ptext0 00FA                  __ptext1 0012  
                __ptext2 00CE           __pintcode_body 0070     end_of_initialization 00C4  
                int_func 0070                  postdec1 0FE5                  postinc0 0FEE  
          __pidataCOMRAM 0110      start_initialization 00A0              __end_of_INT 00A0  
            __pbssCOMRAM 0021                __pintcode 0008            ?_Data_Display 0001  
               _RCONbits 0FD0           ??_Data_Display 0002              _INTCON2bits 0FF1  
              copy_data0 00B4            _Configuration 00CE                 __Hrparam 0000  
               __Lrparam 0000           ?_Configuration 0001                 isa$xinst 0000  
               int$flags 0023               _INTCONbits 0FF2            Data_Display@D 0001  
          Data_Display@N 0012                 intlevel2 0000     __end_of_Data_Display 0070  
        ??_Configuration 0001  
