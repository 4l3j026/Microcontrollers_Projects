

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Dec 02 11:39:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000186                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for Data_Display@F3218
    61   000186  BF                 	db	191
    62   000187  86                 	db	134
    63   000188  DB                 	db	219
    64   000189  CF                 	db	207
    65   00018A  E6                 	db	230
    66   00018B  ED                 	db	237
    67   00018C  FD                 	db	253
    68   00018D  87                 	db	135
    69   00018E  FF                 	db	255
    70   00018F  E7                 	db	231
    71                           
    72                           ;initializer for Data_Display@F3220
    73   000190  01                 	db	1
    74   000191  02                 	db	2
    75   000192  04                 	db	4
    76   000193  08                 	db	8
    77   000000                     _INT0IF	set	32657
    78   000000                     _LATA	set	3977
    79   000000                     _TRISA	set	3986
    80   000000                     _ADCON1	set	4033
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84   000000                     _RCONbits	set	4048
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISB	set	3987
    87   000000                     _LATD	set	3980
    88   000000                     _LATB	set	3978
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000114                     __pcinit:
    94                           	callstack 0
    95   000114                     start_initialization:
    96                           	callstack 0
    97   000114                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (14 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000114  0E86               	movlw	low __pidataCOMRAM
   103   000116  6EF6               	movwf	tblptrl,c
   104   000118  0E01               	movlw	high __pidataCOMRAM
   105   00011A  6EF7               	movwf	tblptrh,c
   106   00011C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   00011E  6EF8               	movwf	tblptru,c
   108   000120  EE00  F015         	lfsr	0,__pdataCOMRAM
   109   000124  EE10 F00E          	lfsr	1,14
   110   000128                     copy_data0:
   111   000128  0009               	tblrd		*+
   112   00012A  CFF5 FFEE          	movff	tablat,postinc0
   113   00012E  50E5               	movf	postdec1,w,c
   114   000130  50E1               	movf	fsr1l,w,c
   115   000132  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (6 bytes)
   118   000134  6A28               	clrf	(__pbssCOMRAM+5)& (0+255),c
   119   000136  6A27               	clrf	(__pbssCOMRAM+4)& (0+255),c
   120   000138  6A26               	clrf	(__pbssCOMRAM+3)& (0+255),c
   121   00013A  6A25               	clrf	(__pbssCOMRAM+2)& (0+255),c
   122   00013C  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123   00013E  6A23               	clrf	__pbssCOMRAM& (0+255),c
   124   000140                     end_of_initialization:
   125                           	callstack 0
   126   000140                     __end_of__initialization:
   127                           	callstack 0
   128   000140  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129   000142  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130   000144  0100               	movlb	0
   131   000146  EFBB  F000         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134   000023                     __pbssCOMRAM:
   135                           	callstack 0
   136   000023                     _l:
   137                           	callstack 0
   138   000023                     	ds	1
   139   000024                     _Hundreds:
   140                           	callstack 0
   141   000024                     	ds	1
   142   000025                     _Tens:
   143                           	callstack 0
   144   000025                     	ds	1
   145   000026                     _Units:
   146                           	callstack 0
   147   000026                     	ds	1
   148   000027                     _Display:
   149                           	callstack 0
   150   000027                     	ds	1
   151   000028                     _Number_Counter:
   152                           	callstack 0
   153   000028                     	ds	1
   154                           
   155                           	psect	dataCOMRAM
   156   000015                     __pdataCOMRAM:
   157                           	callstack 0
   158   000015                     Data_Display@F3218:
   159                           	callstack 0
   160   000015                     	ds	10
   161   00001F                     Data_Display@F3220:
   162                           	callstack 0
   163   00001F                     	ds	4
   164                           
   165                           	psect	cstackCOMRAM
   166   000001                     __pcstackCOMRAM:
   167                           	callstack 0
   168   000001                     Data_Display@D:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0x0
   172   000001                     	ds	1
   173   000002                     ??_Data_Display:
   174                           
   175                           ; 1 bytes @ 0x1
   176   000002                     	ds	1
   177   000003                     Data_Display@Numbers_2:
   178                           	callstack 0
   179                           
   180                           ; 10 bytes @ 0x2
   181   000003                     	ds	10
   182   00000D                     Data_Display@Display:
   183                           	callstack 0
   184                           
   185                           ; 4 bytes @ 0xC
   186   00000D                     	ds	4
   187   000011                     Data_Display@N:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x10
   191   000011                     	ds	1
   192   000012                     ??_Data_Show:
   193                           
   194                           ; 1 bytes @ 0x11
   195   000012                     	ds	1
   196   000013                     Data_Show@i:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x12
   200   000013                     	ds	2
   201   000015                     
   202                           ; 1 bytes @ 0x14
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 35 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called: 3
   228 ;; This function calls:
   229 ;;		_Configuration
   230 ;;		_Data_Show
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text0
   237   000176                     __ptext0:
   238                           	callstack 0
   239   000176                     _main:
   240                           	callstack 28
   241   000176                     
   242                           ;main.c: 38:     Configuration();
   243   000176  ECA5  F000         	call	_Configuration	;wreg free
   244   00017A                     l840:
   245                           
   246                           ;main.c: 43:         Data_Show();
   247   00017A  EC69  F000         	call	_Data_Show	;wreg free
   248   00017E  EFBD  F000         	goto	l840
   249   000182  EF07  F000         	goto	start
   250   000186                     __end_of_main:
   251                           	callstack 0
   252                           
   253 ;; *************** function _Data_Show *****************
   254 ;; Defined at:
   255 ;;		line 97 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  i               2   18[COMRAM] int 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         2       0       0       0       0       0       0       0       0
   271 ;;      Temps:          1       0       0       0       0       0       0       0       0
   272 ;;      Totals:         3       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        3 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; Hardware stack levels required when called: 2
   276 ;; This function calls:
   277 ;;		_Data_Display
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text1
   284   0000D2                     __ptext1:
   285                           	callstack 0
   286   0000D2                     _Data_Show:
   287                           	callstack 28
   288   0000D2                     
   289                           ;main.c: 99:     for (int i = 0; i < 4; i++) {
   290   0000D2  0E00               	movlw	0
   291   0000D4  6E14               	movwf	(Data_Show@i+1)^0,c
   292   0000D6  0E00               	movlw	0
   293   0000D8  6E13               	movwf	Data_Show@i^0,c
   294   0000DA                     l830:
   295                           
   296                           ;main.c: 101:         Data_Display(0, i);
   297   0000DA  C013  F001         	movff	Data_Show@i,Data_Display@D
   298   0000DE  0E00               	movlw	0
   299   0000E0  EC3E  F000         	call	_Data_Display
   300   0000E4                     
   301                           ;main.c: 102:         _delay((unsigned long)((80)*(8000000/4000.0)));
   302   0000E4  0ED0               	movlw	208
   303   0000E6  6E12               	movwf	??_Data_Show^0,c
   304   0000E8  0ECA               	movlw	202
   305   0000EA                     u97:
   306   0000EA  2EE8               	decfsz	wreg,f,c
   307   0000EC  D7FE               	bra	u97
   308   0000EE  2E12               	decfsz	??_Data_Show^0,f,c
   309   0000F0  D7FC               	bra	u97
   310   0000F2                     
   311                           ;main.c: 104:     }
   312   0000F2  4A13               	infsnz	Data_Show@i^0,f,c
   313   0000F4  2A14               	incf	(Data_Show@i+1)^0,f,c
   314   0000F6  BE14               	btfsc	(Data_Show@i+1)^0,7,c
   315   0000F8  EF87  F000         	goto	u81
   316   0000FC  5014               	movf	(Data_Show@i+1)^0,w,c
   317   0000FE  E109               	bnz	u80
   318   000100  0E04               	movlw	4
   319   000102  5C13               	subwf	Data_Show@i^0,w,c
   320   000104  A0D8               	btfss	status,0,c
   321   000106  EF87  F000         	goto	u81
   322   00010A  EF89  F000         	goto	u80
   323   00010E                     u81:
   324   00010E  EF6D  F000         	goto	l830
   325   000112                     u80:
   326   000112  0012               	return		;funcret
   327   000114                     __end_of_Data_Show:
   328                           	callstack 0
   329                           
   330 ;; *************** function _Data_Display *****************
   331 ;; Defined at:
   332 ;;		line 73 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;  N               1    wreg     unsigned char 
   335 ;;  D               1    0[COMRAM] unsigned char 
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  N               1   16[COMRAM] unsigned char 
   338 ;;  Numbers_2      10    2[COMRAM] unsigned char [10]
   339 ;;  Display         4   12[COMRAM] unsigned char [4]
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   349 ;;      Params:         1       0       0       0       0       0       0       0       0
   350 ;;      Locals:        15       0       0       0       0       0       0       0       0
   351 ;;      Temps:          1       0       0       0       0       0       0       0       0
   352 ;;      Totals:        17       0       0       0       0       0       0       0       0
   353 ;;Total ram usage:       17 bytes
   354 ;; Hardware stack levels used: 1
   355 ;; Hardware stack levels required when called: 1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_Data_Show
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text2
   364   00007C                     __ptext2:
   365                           	callstack 0
   366   00007C                     _Data_Display:
   367                           	callstack 28
   368                           
   369                           ;incstack = 0
   370                           ;Data_Display@N stored from wreg
   371   00007C  6E11               	movwf	Data_Display@N^0,c
   372   00007E                     
   373                           ;main.c: 84:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   374   00007E  EE20  F015         	lfsr	2,Data_Display@F3218
   375   000082  EE10  F003         	lfsr	1,Data_Display@Numbers_2
   376   000086  0E09               	movlw	9
   377   000088                     u71:
   378   000088  CFDB FFE3          	movff	plusw2,plusw1
   379   00008C  06E8               	decf	wreg,f,c
   380   00008E  E2FC               	bc	u71
   381   000090                     
   382                           ;main.c: 86:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   383   000090  C01F  F00D         	movff	Data_Display@F3220,Data_Display@Display
   384   000094  C020  F00E         	movff	Data_Display@F3220+1,Data_Display@Display+1
   385   000098  C021  F00F         	movff	Data_Display@F3220+2,Data_Display@Display+2
   386   00009C  C022  F010         	movff	Data_Display@F3220+3,Data_Display@Display+3
   387   0000A0                     
   388                           ;main.c: 89:     LATD = Numbers_2 [N];
   389   0000A0  0E03               	movlw	low Data_Display@Numbers_2
   390   0000A2  2411               	addwf	Data_Display@N^0,w,c
   391   0000A4  6ED9               	movwf	fsr2l,c
   392   0000A6  6ADA               	clrf	fsr2h,c
   393   0000A8  0E00               	movlw	high Data_Display@Numbers_2
   394   0000AA  22DA               	addwfc	fsr2h,f,c
   395   0000AC  50DF               	movf	indf2,w,c
   396   0000AE  6E8C               	movwf	140,c	;volatile
   397   0000B0                     
   398                           ;main.c: 90:     LATA = Display [D];
   399   0000B0  0E0D               	movlw	low Data_Display@Display
   400   0000B2  2401               	addwf	Data_Display@D^0,w,c
   401   0000B4  6ED9               	movwf	fsr2l,c
   402   0000B6  6ADA               	clrf	fsr2h,c
   403   0000B8  0E00               	movlw	high Data_Display@Display
   404   0000BA  22DA               	addwfc	fsr2h,f,c
   405   0000BC  50DF               	movf	indf2,w,c
   406   0000BE  6E89               	movwf	137,c	;volatile
   407   0000C0                     
   408                           ;main.c: 91:     _delay((unsigned long)((40)*(8000000/4000.0)));
   409   0000C0  0E68               	movlw	104
   410   0000C2  6E02               	movwf	??_Data_Display^0,c
   411   0000C4  0EE4               	movlw	228
   412   0000C6                     u107:
   413   0000C6  2EE8               	decfsz	wreg,f,c
   414   0000C8  D7FE               	bra	u107
   415   0000CA  2E02               	decfsz	??_Data_Display^0,f,c
   416   0000CC  D7FC               	bra	u107
   417   0000CE  D000               	nop2	
   418   0000D0  0012               	return		;funcret
   419   0000D2                     __end_of_Data_Display:
   420                           	callstack 0
   421                           
   422 ;; *************** function _Configuration *****************
   423 ;; Defined at:
   424 ;;		line 49 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   438 ;;      Params:         0       0       0       0       0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text3
   453   00014A                     __ptext3:
   454                           	callstack 0
   455   00014A                     _Configuration:
   456                           	callstack 29
   457   00014A                     
   458                           ;main.c: 51:     OSCCON = 0x72;
   459   00014A  0E72               	movlw	114
   460   00014C  6ED3               	movwf	211,c	;volatile
   461                           
   462                           ;main.c: 52:     ADCON1 = 0x0F;
   463   00014E  0E0F               	movlw	15
   464   000150  6EC1               	movwf	193,c	;volatile
   465                           
   466                           ;main.c: 54:     TRISA = 0x00;
   467   000152  0E00               	movlw	0
   468   000154  6E92               	movwf	146,c	;volatile
   469                           
   470                           ;main.c: 55:     TRISB = 0x03;
   471   000156  0E03               	movlw	3
   472   000158  6E93               	movwf	147,c	;volatile
   473                           
   474                           ;main.c: 56:     TRISD = 0x00;
   475   00015A  0E00               	movlw	0
   476   00015C  6E95               	movwf	149,c	;volatile
   477                           
   478                           ;main.c: 58:     LATA = 0x00;
   479   00015E  0E00               	movlw	0
   480   000160  6E89               	movwf	137,c	;volatile
   481                           
   482                           ;main.c: 59:     LATB = 0x00;
   483   000162  0E00               	movlw	0
   484   000164  6E8A               	movwf	138,c	;volatile
   485                           
   486                           ;main.c: 60:     LATD = 0x00;
   487   000166  0E00               	movlw	0
   488   000168  6E8C               	movwf	140,c	;volatile
   489   00016A                     
   490                           ;main.c: 63:     RCONbits.IPEN = 0;
   491   00016A  9ED0               	bcf	208,7,c	;volatile
   492   00016C                     
   493                           ;main.c: 64:     INTCONbits.GIE = 1;
   494   00016C  8EF2               	bsf	242,7,c	;volatile
   495   00016E                     
   496                           ;main.c: 65:     INTCONbits.INT0IE = 1;
   497   00016E  88F2               	bsf	242,4,c	;volatile
   498   000170                     
   499                           ;main.c: 66:     INTCONbits.INT0IF = 0;
   500   000170  92F2               	bcf	242,1,c	;volatile
   501   000172                     
   502                           ;main.c: 67:     INTCON2bits.INTEDG0 = 0;
   503   000172  9CF1               	bcf	241,6,c	;volatile
   504   000174  0012               	return		;funcret
   505   000176                     __end_of_Configuration:
   506                           	callstack 0
   507                           
   508 ;; *************** function _INT *****************
   509 ;; Defined at:
   510 ;;		line 111 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   524 ;;      Params:         0       0       0       0       0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		Interrupt level 2
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	intcode
   538   000008                     __pintcode:
   539                           	callstack 0
   540   000008                     _INT:
   541                           	callstack 28
   542                           
   543                           ;incstack = 0
   544   000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   545   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   546                           
   547                           	psect	intcode_body
   548   000012                     __pintcode_body:
   549                           	callstack 28
   550   000012                     int_func:
   551                           	callstack 28
   552   000012  0006               	pop		; remove dummy address from shadow register refresh
   553   000014                     
   554                           ;main.c: 113:     if (INT0IF) {
   555   000014  A2F2               	btfss	4082,1,c	;volatile
   556   000016  EF0F  F000         	goto	i2u3_41
   557   00001A  EF11  F000         	goto	i2u3_40
   558   00001E                     i2u3_41:
   559   00001E  EF3C  F000         	goto	i2l76
   560   000022                     i2u3_40:
   561   000022                     
   562                           ;main.c: 115:         INT0IF = 0;
   563   000022  92F2               	bcf	4082,1,c	;volatile
   564   000024                     
   565                           ;main.c: 116:         Number_Counter++;
   566   000024  2A28               	incf	_Number_Counter^0,f,c
   567   000026                     
   568                           ;main.c: 117:         if (Number_Counter == 10) {
   569   000026  0E0A               	movlw	10
   570   000028  1828               	xorwf	_Number_Counter^0,w,c
   571   00002A  A4D8               	btfss	status,2,c
   572   00002C  EF1A  F000         	goto	i2u4_41
   573   000030  EF1C  F000         	goto	i2u4_40
   574   000034                     i2u4_41:
   575   000034  EF21  F000         	goto	i2l804
   576   000038                     i2u4_40:
   577   000038                     
   578                           ;main.c: 119:             Number_Counter = 0;
   579   000038  0E00               	movlw	0
   580   00003A  6E28               	movwf	_Number_Counter^0,c
   581   00003C                     
   582                           ;main.c: 120:             Tens++;
   583   00003C  2A25               	incf	_Tens^0,f,c
   584                           
   585                           ;main.c: 121:         } else if (Tens == 10) {
   586   00003E  EF3C  F000         	goto	i2l76
   587   000042                     i2l804:
   588   000042  0E0A               	movlw	10
   589   000044  1825               	xorwf	_Tens^0,w,c
   590   000046  A4D8               	btfss	status,2,c
   591   000048  EF28  F000         	goto	i2u5_41
   592   00004C  EF2A  F000         	goto	i2u5_40
   593   000050                     i2u5_41:
   594   000050  EF2F  F000         	goto	i2l810
   595   000054                     i2u5_40:
   596   000054                     
   597                           ;main.c: 123:             Tens = 0;
   598   000054  0E00               	movlw	0
   599   000056  6E25               	movwf	_Tens^0,c
   600   000058                     
   601                           ;main.c: 124:             Hundreds++;
   602   000058  2A24               	incf	_Hundreds^0,f,c
   603                           
   604                           ;main.c: 126:         } else if (Hundreds == 10) {
   605   00005A  EF3C  F000         	goto	i2l76
   606   00005E                     i2l810:
   607   00005E  0E0A               	movlw	10
   608   000060  1824               	xorwf	_Hundreds^0,w,c
   609   000062  A4D8               	btfss	status,2,c
   610   000064  EF36  F000         	goto	i2u6_41
   611   000068  EF38  F000         	goto	i2u6_40
   612   00006C                     i2u6_41:
   613   00006C  EF3C  F000         	goto	i2l72
   614   000070                     i2u6_40:
   615   000070                     
   616                           ;main.c: 128:             Hundreds = 0;
   617   000070  0E00               	movlw	0
   618   000072  6E24               	movwf	_Hundreds^0,c
   619   000074  EF3C  F000         	goto	i2l76
   620   000078                     i2l72:
   621   000078                     i2l76:
   622   000078  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   623   00007A  0011               	retfie		f
   624   00007C                     __end_of_INT:
   625                           	callstack 0
   626   000000                     
   627                           	psect	rparam
   628   000000                     
   629                           	psect	temp
   630   000029                     btemp:
   631                           	callstack 0
   632   000029                     	ds	1
   633   000000                     int$flags	set	btemp
   634   000000                     wtemp8	set	btemp+1
   635   000000                     ttemp5	set	btemp+1
   636   000000                     ttemp6	set	btemp+4
   637   000000                     ttemp7	set	btemp+8
   638                           
   639                           	psect	config
   640                           
   641                           ;Config register CONFIG1L @ 0x300000
   642                           ;	PLL Prescaler Selection bits
   643                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   644                           ;	System Clock Postscaler Selection bits
   645                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   646                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   647                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   648   300000                     	org	3145728
   649   300000  00                 	db	0
   650                           
   651                           ;Config register CONFIG1H @ 0x300001
   652                           ;	Oscillator Selection bits
   653                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   654                           ;	Fail-Safe Clock Monitor Enable bit
   655                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   656                           ;	Internal/External Oscillator Switchover bit
   657                           ;	IESO = OFF, Oscillator Switchover mode disabled
   658   300001                     	org	3145729
   659   300001  05                 	db	5
   660                           
   661                           ;Config register CONFIG2L @ 0x300002
   662                           ;	Power-up Timer Enable bit
   663                           ;	PWRT = OFF, PWRT disabled
   664                           ;	Brown-out Reset Enable bits
   665                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   666                           ;	Brown-out Reset Voltage bits
   667                           ;	BORV = 3, Minimum setting 2.05V
   668                           ;	USB Voltage Regulator Enable bit
   669                           ;	VREGEN = OFF, USB voltage regulator disabled
   670   300002                     	org	3145730
   671   300002  1F                 	db	31
   672                           
   673                           ;Config register CONFIG2H @ 0x300003
   674                           ;	Watchdog Timer Enable bit
   675                           ;	WDT = ON, WDT enabled
   676                           ;	Watchdog Timer Postscale Select bits
   677                           ;	WDTPS = 32768, 1:32768
   678   300003                     	org	3145731
   679   300003  1F                 	db	31
   680                           
   681                           ; Padding undefined space
   682   300004                     	org	3145732
   683   300004  FF                 	db	255
   684                           
   685                           ;Config register CONFIG3H @ 0x300005
   686                           ;	CCP2 MUX bit
   687                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   688                           ;	PORTB A/D Enable bit
   689                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   690                           ;	Low-Power Timer 1 Oscillator Enable bit
   691                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   692                           ;	MCLR Pin Enable bit
   693                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   694   300005                     	org	3145733
   695   300005  83                 	db	131
   696                           
   697                           ;Config register CONFIG4L @ 0x300006
   698                           ;	Stack Full/Underflow Reset Enable bit
   699                           ;	STVREN = ON, Stack full/underflow will cause Reset
   700                           ;	Single-Supply ICSP Enable bit
   701                           ;	LVP = ON, Single-Supply ICSP enabled
   702                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   703                           ;	ICPRT = OFF, ICPORT disabled
   704                           ;	Extended Instruction Set Enable bit
   705                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   706                           ;	Background Debugger Enable bit
   707                           ;	DEBUG = 0x1, unprogrammed default
   708   300006                     	org	3145734
   709   300006  85                 	db	133
   710                           
   711                           ; Padding undefined space
   712   300007                     	org	3145735
   713   300007  FF                 	db	255
   714                           
   715                           ;Config register CONFIG5L @ 0x300008
   716                           ;	Code Protection bit
   717                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   718                           ;	Code Protection bit
   719                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   720                           ;	Code Protection bit
   721                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   722                           ;	Code Protection bit
   723                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   724   300008                     	org	3145736
   725   300008  0F                 	db	15
   726                           
   727                           ;Config register CONFIG5H @ 0x300009
   728                           ;	Boot Block Code Protection bit
   729                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   730                           ;	Data EEPROM Code Protection bit
   731                           ;	CPD = OFF, Data EEPROM is not code-protected
   732   300009                     	org	3145737
   733   300009  C0                 	db	192
   734                           
   735                           ;Config register CONFIG6L @ 0x30000A
   736                           ;	Write Protection bit
   737                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   738                           ;	Write Protection bit
   739                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   740                           ;	Write Protection bit
   741                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   742                           ;	Write Protection bit
   743                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   744   30000A                     	org	3145738
   745   30000A  0F                 	db	15
   746                           
   747                           ;Config register CONFIG6H @ 0x30000B
   748                           ;	Configuration Register Write Protection bit
   749                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   750                           ;	Boot Block Write Protection bit
   751                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   752                           ;	Data EEPROM Write Protection bit
   753                           ;	WRTD = OFF, Data EEPROM is not write-protected
   754   30000B                     	org	3145739
   755   30000B  E0                 	db	224
   756                           
   757                           ;Config register CONFIG7L @ 0x30000C
   758                           ;	Table Read Protection bit
   759                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   760                           ;	Table Read Protection bit
   761                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   762                           ;	Table Read Protection bit
   763                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   764                           ;	Table Read Protection bit
   765                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   766   30000C                     	org	3145740
   767   30000C  0F                 	db	15
   768                           
   769                           ;Config register CONFIG7H @ 0x30000D
   770                           ;	Boot Block Table Read Protection bit
   771                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   772   30000D                     	org	3145741
   773   30000D  40                 	db	64
   774                           tosu	equ	0xFFF
   775                           tosh	equ	0xFFE
   776                           tosl	equ	0xFFD
   777                           stkptr	equ	0xFFC
   778                           pclatu	equ	0xFFB
   779                           pclath	equ	0xFFA
   780                           pcl	equ	0xFF9
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           prodh	equ	0xFF4
   786                           prodl	equ	0xFF3
   787                           indf0	equ	0xFEF
   788                           postinc0	equ	0xFEE
   789                           postdec0	equ	0xFED
   790                           preinc0	equ	0xFEC
   791                           plusw0	equ	0xFEB
   792                           fsr0h	equ	0xFEA
   793                           fsr0l	equ	0xFE9
   794                           wreg	equ	0xFE8
   795                           indf1	equ	0xFE7
   796                           postinc1	equ	0xFE6
   797                           postdec1	equ	0xFE5
   798                           preinc1	equ	0xFE4
   799                           plusw1	equ	0xFE3
   800                           fsr1h	equ	0xFE2
   801                           fsr1l	equ	0xFE1
   802                           bsr	equ	0xFE0
   803                           indf2	equ	0xFDF
   804                           postinc2	equ	0xFDE
   805                           postdec2	equ	0xFDD
   806                           preinc2	equ	0xFDC
   807                           plusw2	equ	0xFDB
   808                           fsr2h	equ	0xFDA
   809                           fsr2l	equ	0xFD9
   810                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Show
    _Data_Show->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     236
                      _Configuration
                          _Data_Show
 ---------------------------------------------------------------------------------
 (1) _Data_Show                                            3     3      0     236
                                             17 COMRAM     3     3      0
                       _Data_Display
 ---------------------------------------------------------------------------------
 (2) _Data_Display                                        17    16      1     168
                                              0 COMRAM    17    16      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Show
     _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      28       1       42.6%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      29        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Dec 02 11:39:03 2023

                      _l 0023                       l60 00D0                       l53 0174  
                     l65 0112                       u71 0088                       u80 0112  
                     u81 010E                       u97 00EA                      l820 00B0  
                    l822 00C0                      l814 007E                      l830 00DA  
                    l816 0090                      l832 00E4                      l824 00D2  
                    l840 017A                      l770 0170                      l762 014A  
                    l818 00A0                      l834 00F2                      l772 0172  
                    l764 016A                      l836 00F6                      l766 016C  
                    l838 0176                      l768 016E                      u107 00C6  
                    _INT 0008                      wreg 0FE8                     ?_INT 0001  
                   _LATA 0F89                     _LATB 0F8A                     _LATD 0F8C  
                   i2l72 0078                     i2l76 0078                     _Tens 0025  
                   _main 0176                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0029                     start 000E  
           ___param_bank 0000                    ??_INT 0001                    ?_main 0001  
                  i2l800 0038                    i2l810 005E                    i2l802 003C  
                  i2l812 0070                    i2l804 0042                    i2l806 0054  
                  i2l808 0058                    i2l792 0014                    i2l794 0022  
                  i2l796 0024                    i2l798 0026                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISD 0F95                    _Units 0026  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  ttemp5 002A                    ttemp6 002D                    ttemp7 0031  
                  status 0FD8                    wtemp8 002A          __initialization 0114  
           __end_of_main 0186                   ??_main 0015            __activetblptr 0000  
           _Data_Display 007C                   _ADCON1 0FC1    Data_Display@Numbers_2 0003  
                 _INT0IF 7F91                   _OSCCON 0FD3                   i2u3_40 0022  
                 i2u3_41 001E                   i2u4_40 0038                   i2u4_41 0034  
                 i2u5_40 0054                   i2u5_41 0050                   i2u6_40 0070  
                 i2u6_41 006C                   isa$std 0001             __pdataCOMRAM 0015  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
      __end_of_Data_Show 0114               __accesstop 0060  __end_of__initialization 0140  
          ___rparam_used 0001           __pcstackCOMRAM 0001      Data_Display@Display 000D  
         _Number_Counter 0028        Data_Display@F3220 001F        Data_Display@F3218 0015  
  __end_of_Configuration 0176                  _Display 0027                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0114                  __ramtop 0800  
                __ptext0 0176                  __ptext1 00D2                  __ptext2 007C  
                __ptext3 014A           __pintcode_body 0012     end_of_initialization 0140  
                int_func 0012                  postdec1 0FE5                  postinc0 0FEE  
              _Data_Show 00D2            __pidataCOMRAM 0186      start_initialization 0114  
            __end_of_INT 007C               ?_Data_Show 0001              __pbssCOMRAM 0023  
              __pintcode 0008            ?_Data_Display 0001              ??_Data_Show 0012  
               _RCONbits 0FD0           ??_Data_Display 0002              _INTCON2bits 0FF1  
              copy_data0 0128            _Configuration 014A                 _Hundreds 0024  
               __Hrparam 0000                 __Lrparam 0000           ?_Configuration 0001  
             Data_Show@i 0013                 isa$xinst 0000                 int$flags 0029  
             _INTCONbits 0FF2            Data_Display@D 0001            Data_Display@N 0011  
               intlevel2 0000     __end_of_Data_Display 00D2          ??_Configuration 0001  
