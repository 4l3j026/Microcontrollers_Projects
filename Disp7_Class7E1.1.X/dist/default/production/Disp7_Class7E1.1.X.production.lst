

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Dec 06 23:48:20 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   0001AA                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _Numbers_2
    60   0001AA  BF                 	db	191
    61   0001AB  86                 	db	134
    62   0001AC  DB                 	db	219
    63   0001AD  CF                 	db	207
    64   0001AE  E6                 	db	230
    65   0001AF  ED                 	db	237
    66   0001B0  FD                 	db	253
    67   0001B1  87                 	db	135
    68   0001B2  FF                 	db	255
    69   0001B3  E7                 	db	231
    70                           
    71                           ;initializer for _Display
    72   0001B4  00                 	db	0
    73   0001B5  01                 	db	1
    74   0001B6  02                 	db	2
    75   0001B7  04                 	db	4
    76   0001B8  08                 	db	8
    77   000000                     _INT0IF	set	32657
    78   000000                     _LATA	set	3977
    79   000000                     _TRISA	set	3986
    80   000000                     _ADCON1	set	4033
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84   000000                     _RCONbits	set	4048
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISB	set	3987
    87   000000                     _LATD	set	3980
    88   000000                     _LATB	set	3978
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000130                     __pcinit:
    94                           	callstack 0
    95   000130                     start_initialization:
    96                           	callstack 0
    97   000130                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (15 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000130  0EAA               	movlw	low __pidataCOMRAM
   103   000132  6EF6               	movwf	tblptrl,c
   104   000134  0E01               	movlw	high __pidataCOMRAM
   105   000136  6EF7               	movwf	tblptrh,c
   106   000138  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   00013A  6EF8               	movwf	tblptru,c
   108   00013C  EE00  F001         	lfsr	0,__pdataCOMRAM
   109   000140  EE10 F00F          	lfsr	1,15
   110   000144                     copy_data0:
   111   000144  0009               	tblrd		*+
   112   000146  CFF5 FFEE          	movff	tablat,postinc0
   113   00014A  50E5               	movf	postdec1,w,c
   114   00014C  50E1               	movf	fsr1l,w,c
   115   00014E  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (3 bytes)
   118   000150  6A18               	clrf	(__pbssCOMRAM+2)& (0+255),c
   119   000152  6A17               	clrf	(__pbssCOMRAM+1)& (0+255),c
   120   000154  6A16               	clrf	__pbssCOMRAM& (0+255),c
   121   000156                     end_of_initialization:
   122                           	callstack 0
   123   000156                     __end_of__initialization:
   124                           	callstack 0
   125   000156  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   126   000158  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   127   00015A  0100               	movlb	0
   128   00015C  EFC6  F000         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131   000016                     __pbssCOMRAM:
   132                           	callstack 0
   133   000016                     _Hundreds:
   134                           	callstack 0
   135   000016                     	ds	1
   136   000017                     _Tens:
   137                           	callstack 0
   138   000017                     	ds	1
   139   000018                     _Units:
   140                           	callstack 0
   141   000018                     	ds	1
   142                           
   143                           	psect	dataCOMRAM
   144   000001                     __pdataCOMRAM:
   145                           	callstack 0
   146   000001                     _Numbers_2:
   147                           	callstack 0
   148   000001                     	ds	10
   149   00000B                     _Display:
   150                           	callstack 0
   151   00000B                     	ds	5
   152                           
   153                           	psect	cstackCOMRAM
   154   000010                     __pcstackCOMRAM:
   155                           	callstack 0
   156   000010                     Display_Function@D2:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x0
   160   000010                     	ds	1
   161   000011                     Display_Function@D3:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x1
   165   000011                     	ds	1
   166   000012                     Display_Function@D4:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x2
   170   000012                     	ds	1
   171   000013                     ??_Display_Function:
   172                           
   173                           ; 1 bytes @ 0x3
   174   000013                     	ds	2
   175   000015                     Display_Function@D1:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x5
   179   000015                     	ds	1
   180   000016                     
   181                           ; 1 bytes @ 0x6
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 34 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   201 ;;      Params:         0       0       0       0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0
   203 ;;      Temps:          0       0       0       0       0       0       0       0       0
   204 ;;      Totals:         0       0       0       0       0       0       0       0       0
   205 ;;Total ram usage:        0 bytes
   206 ;; Hardware stack levels required when called: 2
   207 ;; This function calls:
   208 ;;		_Configuration
   209 ;;		_Display_Function
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216   00018C                     __ptext0:
   217                           	callstack 0
   218   00018C                     _main:
   219                           	callstack 29
   220   00018C                     
   221                           ;main.c: 37:     Configuration();
   222   00018C  ECB0  F000         	call	_Configuration	;wreg free
   223   000190                     l821:
   224                           
   225                           ;main.c: 43:         Display_Function(0, Hundreds, Tens, Units);
   226   000190  C016  F010         	movff	_Hundreds,Display_Function@D2
   227   000194  C017  F011         	movff	_Tens,Display_Function@D3
   228   000198  C018  F012         	movff	_Units,Display_Function@D4
   229   00019C  0E00               	movlw	0
   230   00019E  EC09  F000         	call	_Display_Function
   231   0001A2  EFC8  F000         	goto	l821
   232   0001A6  EF07  F000         	goto	start
   233   0001AA                     __end_of_main:
   234                           	callstack 0
   235                           
   236 ;; *************** function _Display_Function *****************
   237 ;; Defined at:
   238 ;;		line 71 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;  D1              1    wreg     unsigned char 
   241 ;;  D2              1    0[COMRAM] unsigned char 
   242 ;;  D3              1    1[COMRAM] unsigned char 
   243 ;;  D4              1    2[COMRAM] unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  D1              1    5[COMRAM] unsigned char 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         3       0       0       0       0       0       0       0       0
   256 ;;      Locals:         1       0       0       0       0       0       0       0       0
   257 ;;      Temps:          2       0       0       0       0       0       0       0       0
   258 ;;      Totals:         6       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        6 bytes
   260 ;; Hardware stack levels used: 1
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270   000012                     __ptext1:
   271                           	callstack 0
   272   000012                     _Display_Function:
   273                           	callstack 29
   274                           
   275                           ;incstack = 0
   276                           ;Display_Function@D1 stored from wreg
   277   000012  6E15               	movwf	Display_Function@D1^0,c
   278   000014                     
   279                           ;main.c: 73:     LATA = 0x01;
   280   000014  0E01               	movlw	1
   281   000016  6E89               	movwf	137,c	;volatile
   282   000018                     
   283                           ;main.c: 74:     LATD = Numbers_2 [D1];
   284   000018  0E01               	movlw	low _Numbers_2
   285   00001A  2415               	addwf	Display_Function@D1^0,w,c
   286   00001C  6ED9               	movwf	fsr2l,c
   287   00001E  6ADA               	clrf	fsr2h,c
   288   000020  0E00               	movlw	high _Numbers_2
   289   000022  22DA               	addwfc	fsr2h,f,c
   290   000024  50DF               	movf	indf2,w,c
   291   000026  6E8C               	movwf	140,c	;volatile
   292   000028                     
   293                           ;main.c: 75:     _delay((unsigned long)((100)*(8000000/4000.0)));
   294   000028  0E02               	movlw	2
   295   00002A  6E14               	movwf	(??_Display_Function+1)^0,c
   296   00002C  0E04               	movlw	4
   297   00002E  6E13               	movwf	??_Display_Function^0,c
   298   000030  0EBA               	movlw	186
   299   000032                     u57:
   300   000032  2EE8               	decfsz	wreg,f,c
   301   000034  D7FE               	bra	u57
   302   000036  2E13               	decfsz	??_Display_Function^0,f,c
   303   000038  D7FC               	bra	u57
   304   00003A  2E14               	decfsz	(??_Display_Function+1)^0,f,c
   305   00003C  D7FA               	bra	u57
   306   00003E  D000               	nop2	
   307   000040                     
   308                           ;main.c: 76:     LATA = 0x02;
   309   000040  0E02               	movlw	2
   310   000042  6E89               	movwf	137,c	;volatile
   311                           
   312                           ;main.c: 77:     LATD = Numbers_2 [D2];
   313   000044  0E01               	movlw	low _Numbers_2
   314   000046  2410               	addwf	Display_Function@D2^0,w,c
   315   000048  6ED9               	movwf	fsr2l,c
   316   00004A  6ADA               	clrf	fsr2h,c
   317   00004C  0E00               	movlw	high _Numbers_2
   318   00004E  22DA               	addwfc	fsr2h,f,c
   319   000050  50DF               	movf	indf2,w,c
   320   000052  6E8C               	movwf	140,c	;volatile
   321   000054                     
   322                           ;main.c: 78:     _delay((unsigned long)((100)*(8000000/4000.0)));
   323   000054  0E02               	movlw	2
   324   000056  6E14               	movwf	(??_Display_Function+1)^0,c
   325   000058  0E04               	movlw	4
   326   00005A  6E13               	movwf	??_Display_Function^0,c
   327   00005C  0EBA               	movlw	186
   328   00005E                     u67:
   329   00005E  2EE8               	decfsz	wreg,f,c
   330   000060  D7FE               	bra	u67
   331   000062  2E13               	decfsz	??_Display_Function^0,f,c
   332   000064  D7FC               	bra	u67
   333   000066  2E14               	decfsz	(??_Display_Function+1)^0,f,c
   334   000068  D7FA               	bra	u67
   335   00006A  D000               	nop2	
   336   00006C                     
   337                           ;main.c: 79:     LATA = 0x04;
   338   00006C  0E04               	movlw	4
   339   00006E  6E89               	movwf	137,c	;volatile
   340   000070                     
   341                           ;main.c: 80:     LATD = Numbers_2 [D3];
   342   000070  0E01               	movlw	low _Numbers_2
   343   000072  2411               	addwf	Display_Function@D3^0,w,c
   344   000074  6ED9               	movwf	fsr2l,c
   345   000076  6ADA               	clrf	fsr2h,c
   346   000078  0E00               	movlw	high _Numbers_2
   347   00007A  22DA               	addwfc	fsr2h,f,c
   348   00007C  50DF               	movf	indf2,w,c
   349   00007E  6E8C               	movwf	140,c	;volatile
   350   000080                     
   351                           ;main.c: 81:     _delay((unsigned long)((100)*(8000000/4000.0)));
   352   000080  0E02               	movlw	2
   353   000082  6E14               	movwf	(??_Display_Function+1)^0,c
   354   000084  0E04               	movlw	4
   355   000086  6E13               	movwf	??_Display_Function^0,c
   356   000088  0EBA               	movlw	186
   357   00008A                     u77:
   358   00008A  2EE8               	decfsz	wreg,f,c
   359   00008C  D7FE               	bra	u77
   360   00008E  2E13               	decfsz	??_Display_Function^0,f,c
   361   000090  D7FC               	bra	u77
   362   000092  2E14               	decfsz	(??_Display_Function+1)^0,f,c
   363   000094  D7FA               	bra	u77
   364   000096  D000               	nop2	
   365                           
   366                           ;main.c: 82:     LATA = 0x08;
   367   000098  0E08               	movlw	8
   368   00009A  6E89               	movwf	137,c	;volatile
   369   00009C                     
   370                           ;main.c: 83:     LATD = Numbers_2 [D4];
   371   00009C  0E01               	movlw	low _Numbers_2
   372   00009E  2412               	addwf	Display_Function@D4^0,w,c
   373   0000A0  6ED9               	movwf	fsr2l,c
   374   0000A2  6ADA               	clrf	fsr2h,c
   375   0000A4  0E00               	movlw	high _Numbers_2
   376   0000A6  22DA               	addwfc	fsr2h,f,c
   377   0000A8  50DF               	movf	indf2,w,c
   378   0000AA  6E8C               	movwf	140,c	;volatile
   379   0000AC                     
   380                           ;main.c: 84:     _delay((unsigned long)((100)*(8000000/4000.0)));
   381   0000AC  0E02               	movlw	2
   382   0000AE  6E14               	movwf	(??_Display_Function+1)^0,c
   383   0000B0  0E04               	movlw	4
   384   0000B2  6E13               	movwf	??_Display_Function^0,c
   385   0000B4  0EBA               	movlw	186
   386   0000B6                     u87:
   387   0000B6  2EE8               	decfsz	wreg,f,c
   388   0000B8  D7FE               	bra	u87
   389   0000BA  2E13               	decfsz	??_Display_Function^0,f,c
   390   0000BC  D7FC               	bra	u87
   391   0000BE  2E14               	decfsz	(??_Display_Function+1)^0,f,c
   392   0000C0  D7FA               	bra	u87
   393   0000C2  D000               	nop2	
   394   0000C4  0012               	return		;funcret
   395   0000C6                     __end_of_Display_Function:
   396                           	callstack 0
   397                           
   398 ;; *************** function _Configuration *****************
   399 ;; Defined at:
   400 ;;		line 49 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         0       0       0       0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; Hardware stack levels required when called: 1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text2
   429   000160                     __ptext2:
   430                           	callstack 0
   431   000160                     _Configuration:
   432                           	callstack 29
   433   000160                     
   434                           ;main.c: 51:     OSCCON = 0x72;
   435   000160  0E72               	movlw	114
   436   000162  6ED3               	movwf	211,c	;volatile
   437                           
   438                           ;main.c: 52:     ADCON1 = 0x0F;
   439   000164  0E0F               	movlw	15
   440   000166  6EC1               	movwf	193,c	;volatile
   441                           
   442                           ;main.c: 54:     TRISA = 0x00;
   443   000168  0E00               	movlw	0
   444   00016A  6E92               	movwf	146,c	;volatile
   445                           
   446                           ;main.c: 55:     TRISB = 0x03;
   447   00016C  0E03               	movlw	3
   448   00016E  6E93               	movwf	147,c	;volatile
   449                           
   450                           ;main.c: 56:     TRISD = 0x00;
   451   000170  0E00               	movlw	0
   452   000172  6E95               	movwf	149,c	;volatile
   453                           
   454                           ;main.c: 58:     LATA = 0x00;
   455   000174  0E00               	movlw	0
   456   000176  6E89               	movwf	137,c	;volatile
   457                           
   458                           ;main.c: 59:     LATB = 0x00;
   459   000178  0E00               	movlw	0
   460   00017A  6E8A               	movwf	138,c	;volatile
   461                           
   462                           ;main.c: 60:     LATD = 0x00;
   463   00017C  0E00               	movlw	0
   464   00017E  6E8C               	movwf	140,c	;volatile
   465   000180                     
   466                           ;main.c: 63:     RCONbits.IPEN = 0;
   467   000180  9ED0               	bcf	208,7,c	;volatile
   468   000182                     
   469                           ;main.c: 64:     INTCONbits.GIE = 1;
   470   000182  8EF2               	bsf	242,7,c	;volatile
   471   000184                     
   472                           ;main.c: 65:     INTCONbits.INT0IE = 1;
   473   000184  88F2               	bsf	242,4,c	;volatile
   474   000186                     
   475                           ;main.c: 66:     INTCONbits.INT0IF = 0;
   476   000186  92F2               	bcf	242,1,c	;volatile
   477   000188                     
   478                           ;main.c: 67:     INTCON2bits.INTEDG0 = 0;
   479   000188  9CF1               	bcf	241,6,c	;volatile
   480   00018A  0012               	return		;funcret
   481   00018C                     __end_of_Configuration:
   482                           	callstack 0
   483                           
   484 ;; *************** function _INT *****************
   485 ;; Defined at:
   486 ;;		line 90 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		Interrupt level 2
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	intcode
   514   000008                     __pintcode:
   515                           	callstack 0
   516   000008                     _INT:
   517                           	callstack 29
   518                           
   519                           ;incstack = 0
   520   000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   521   00000A  ED63  F000         	call	int_func,f	;refresh shadow registers
   522                           
   523                           	psect	intcode_body
   524   0000C6                     __pintcode_body:
   525                           	callstack 29
   526   0000C6                     int_func:
   527                           	callstack 29
   528   0000C6  0006               	pop		; remove dummy address from shadow register refresh
   529   0000C8                     
   530                           ;main.c: 92:     if (INT0IF) {
   531   0000C8  A2F2               	btfss	4082,1,c	;volatile
   532   0000CA  EF69  F000         	goto	i2u1_41
   533   0000CE  EF6B  F000         	goto	i2u1_40
   534   0000D2                     i2u1_41:
   535   0000D2  EF96  F000         	goto	i2l65
   536   0000D6                     i2u1_40:
   537   0000D6                     
   538                           ;main.c: 94:         INT0IF = 0;
   539   0000D6  92F2               	bcf	4082,1,c	;volatile
   540   0000D8                     
   541                           ;main.c: 95:         Units++;
   542   0000D8  2A18               	incf	_Units^0,f,c
   543   0000DA                     
   544                           ;main.c: 97:         if (Units == 10) {
   545   0000DA  0E0A               	movlw	10
   546   0000DC  1818               	xorwf	_Units^0,w,c
   547   0000DE  A4D8               	btfss	status,2,c
   548   0000E0  EF74  F000         	goto	i2u2_41
   549   0000E4  EF76  F000         	goto	i2u2_40
   550   0000E8                     i2u2_41:
   551   0000E8  EF7B  F000         	goto	i2l789
   552   0000EC                     i2u2_40:
   553   0000EC                     
   554                           ;main.c: 99:             Units = 0;
   555   0000EC  0E00               	movlw	0
   556   0000EE  6E18               	movwf	_Units^0,c
   557   0000F0                     
   558                           ;main.c: 100:             Tens++;
   559   0000F0  2A17               	incf	_Tens^0,f,c
   560                           
   561                           ;main.c: 102:         } else if (Tens == 10) {
   562   0000F2  EF96  F000         	goto	i2l65
   563   0000F6                     i2l789:
   564   0000F6  0E0A               	movlw	10
   565   0000F8  1817               	xorwf	_Tens^0,w,c
   566   0000FA  A4D8               	btfss	status,2,c
   567   0000FC  EF82  F000         	goto	i2u3_41
   568   000100  EF84  F000         	goto	i2u3_40
   569   000104                     i2u3_41:
   570   000104  EF89  F000         	goto	i2l795
   571   000108                     i2u3_40:
   572   000108                     
   573                           ;main.c: 104:             Tens = 0;
   574   000108  0E00               	movlw	0
   575   00010A  6E17               	movwf	_Tens^0,c
   576   00010C                     
   577                           ;main.c: 105:             Hundreds++;
   578   00010C  2A16               	incf	_Hundreds^0,f,c
   579                           
   580                           ;main.c: 107:         } else if (Hundreds == 10) {
   581   00010E  EF96  F000         	goto	i2l65
   582   000112                     i2l795:
   583   000112  0E0A               	movlw	10
   584   000114  1816               	xorwf	_Hundreds^0,w,c
   585   000116  A4D8               	btfss	status,2,c
   586   000118  EF90  F000         	goto	i2u4_41
   587   00011C  EF92  F000         	goto	i2u4_40
   588   000120                     i2u4_41:
   589   000120  EF96  F000         	goto	i2l61
   590   000124                     i2u4_40:
   591   000124                     
   592                           ;main.c: 109:             Hundreds = 0;
   593   000124  0E00               	movlw	0
   594   000126  6E16               	movwf	_Hundreds^0,c
   595   000128  EF96  F000         	goto	i2l65
   596   00012C                     i2l61:
   597   00012C                     i2l65:
   598   00012C  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   599   00012E  0011               	retfie		f
   600   000130                     __end_of_INT:
   601                           	callstack 0
   602   000000                     
   603                           	psect	rparam
   604   000000                     
   605                           	psect	temp
   606   000019                     btemp:
   607                           	callstack 0
   608   000019                     	ds	1
   609   000000                     int$flags	set	btemp
   610   000000                     wtemp8	set	btemp+1
   611   000000                     ttemp5	set	btemp+1
   612   000000                     ttemp6	set	btemp+4
   613   000000                     ttemp7	set	btemp+8
   614                           
   615                           	psect	config
   616                           
   617                           ;Config register CONFIG1L @ 0x300000
   618                           ;	PLL Prescaler Selection bits
   619                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   620                           ;	System Clock Postscaler Selection bits
   621                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   622                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   623                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   624   300000                     	org	3145728
   625   300000  00                 	db	0
   626                           
   627                           ;Config register CONFIG1H @ 0x300001
   628                           ;	Oscillator Selection bits
   629                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   630                           ;	Fail-Safe Clock Monitor Enable bit
   631                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   632                           ;	Internal/External Oscillator Switchover bit
   633                           ;	IESO = OFF, Oscillator Switchover mode disabled
   634   300001                     	org	3145729
   635   300001  05                 	db	5
   636                           
   637                           ;Config register CONFIG2L @ 0x300002
   638                           ;	Power-up Timer Enable bit
   639                           ;	PWRT = OFF, PWRT disabled
   640                           ;	Brown-out Reset Enable bits
   641                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   642                           ;	Brown-out Reset Voltage bits
   643                           ;	BORV = 3, Minimum setting 2.05V
   644                           ;	USB Voltage Regulator Enable bit
   645                           ;	VREGEN = OFF, USB voltage regulator disabled
   646   300002                     	org	3145730
   647   300002  1F                 	db	31
   648                           
   649                           ;Config register CONFIG2H @ 0x300003
   650                           ;	Watchdog Timer Enable bit
   651                           ;	WDT = ON, WDT enabled
   652                           ;	Watchdog Timer Postscale Select bits
   653                           ;	WDTPS = 32768, 1:32768
   654   300003                     	org	3145731
   655   300003  1F                 	db	31
   656                           
   657                           ; Padding undefined space
   658   300004                     	org	3145732
   659   300004  FF                 	db	255
   660                           
   661                           ;Config register CONFIG3H @ 0x300005
   662                           ;	CCP2 MUX bit
   663                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   664                           ;	PORTB A/D Enable bit
   665                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   666                           ;	Low-Power Timer 1 Oscillator Enable bit
   667                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   668                           ;	MCLR Pin Enable bit
   669                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   670   300005                     	org	3145733
   671   300005  83                 	db	131
   672                           
   673                           ;Config register CONFIG4L @ 0x300006
   674                           ;	Stack Full/Underflow Reset Enable bit
   675                           ;	STVREN = ON, Stack full/underflow will cause Reset
   676                           ;	Single-Supply ICSP Enable bit
   677                           ;	LVP = ON, Single-Supply ICSP enabled
   678                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   679                           ;	ICPRT = OFF, ICPORT disabled
   680                           ;	Extended Instruction Set Enable bit
   681                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   682                           ;	Background Debugger Enable bit
   683                           ;	DEBUG = 0x1, unprogrammed default
   684   300006                     	org	3145734
   685   300006  85                 	db	133
   686                           
   687                           ; Padding undefined space
   688   300007                     	org	3145735
   689   300007  FF                 	db	255
   690                           
   691                           ;Config register CONFIG5L @ 0x300008
   692                           ;	Code Protection bit
   693                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   694                           ;	Code Protection bit
   695                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   696                           ;	Code Protection bit
   697                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   698                           ;	Code Protection bit
   699                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   700   300008                     	org	3145736
   701   300008  0F                 	db	15
   702                           
   703                           ;Config register CONFIG5H @ 0x300009
   704                           ;	Boot Block Code Protection bit
   705                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   706                           ;	Data EEPROM Code Protection bit
   707                           ;	CPD = OFF, Data EEPROM is not code-protected
   708   300009                     	org	3145737
   709   300009  C0                 	db	192
   710                           
   711                           ;Config register CONFIG6L @ 0x30000A
   712                           ;	Write Protection bit
   713                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   714                           ;	Write Protection bit
   715                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   716                           ;	Write Protection bit
   717                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   718                           ;	Write Protection bit
   719                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   720   30000A                     	org	3145738
   721   30000A  0F                 	db	15
   722                           
   723                           ;Config register CONFIG6H @ 0x30000B
   724                           ;	Configuration Register Write Protection bit
   725                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   726                           ;	Boot Block Write Protection bit
   727                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   728                           ;	Data EEPROM Write Protection bit
   729                           ;	WRTD = OFF, Data EEPROM is not write-protected
   730   30000B                     	org	3145739
   731   30000B  E0                 	db	224
   732                           
   733                           ;Config register CONFIG7L @ 0x30000C
   734                           ;	Table Read Protection bit
   735                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   736                           ;	Table Read Protection bit
   737                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   738                           ;	Table Read Protection bit
   739                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   740                           ;	Table Read Protection bit
   741                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   742   30000C                     	org	3145740
   743   30000C  0F                 	db	15
   744                           
   745                           ;Config register CONFIG7H @ 0x30000D
   746                           ;	Boot Block Table Read Protection bit
   747                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   748   30000D                     	org	3145741
   749   30000D  40                 	db	64
   750                           tosu	equ	0xFFF
   751                           tosh	equ	0xFFE
   752                           tosl	equ	0xFFD
   753                           stkptr	equ	0xFFC
   754                           pclatu	equ	0xFFB
   755                           pclath	equ	0xFFA
   756                           pcl	equ	0xFF9
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           prodh	equ	0xFF4
   762                           prodl	equ	0xFF3
   763                           indf0	equ	0xFEF
   764                           postinc0	equ	0xFEE
   765                           postdec0	equ	0xFED
   766                           preinc0	equ	0xFEC
   767                           plusw0	equ	0xFEB
   768                           fsr0h	equ	0xFEA
   769                           fsr0l	equ	0xFE9
   770                           wreg	equ	0xFE8
   771                           indf1	equ	0xFE7
   772                           postinc1	equ	0xFE6
   773                           postdec1	equ	0xFE5
   774                           preinc1	equ	0xFE4
   775                           plusw1	equ	0xFE3
   776                           fsr1h	equ	0xFE2
   777                           fsr1l	equ	0xFE1
   778                           bsr	equ	0xFE0
   779                           indf2	equ	0xFDF
   780                           postinc2	equ	0xFDE
   781                           postdec2	equ	0xFDD
   782                           preinc2	equ	0xFDC
   783                           plusw2	equ	0xFDB
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Display_Function

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     316
                      _Configuration
                   _Display_Function
 ---------------------------------------------------------------------------------
 (1) _Display_Function                                     6     3      3     316
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Display_Function

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      18       1       25.5%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      29        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Dec 06 23:48:20 2023

                      l51 018A                        l54 00C4                        u57 0032  
                      u67 005E                        u77 008A                        u87 00B6  
                     l801 0018                       l811 0070                       l803 0028  
                     l741 0160                       l813 0080                       l805 0040  
                     l821 0190                       l751 0188                       l743 0180  
                     l815 009C                       l807 0054                       l745 0182  
                     l817 00AC                       l809 006C                       l747 0184  
                     l819 018C                       l749 0186                       l799 0014  
                     _INT 0008                       wreg 0FE8                      ?_INT 0010  
                    _LATA 0F89                      _LATB 0F8A                      _LATD 0F8C  
                    i2l61 012C                      i2l65 012C                      _Tens 0017  
                    _main 018C                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      btemp 0019                      start 000E  
            ___param_bank 0000                     ??_INT 0010                     ?_main 0010  
                   i2l781 00D8                     i2l791 0108                     i2l783 00DA  
                   i2l793 010C                     i2l785 00EC                     i2l777 00C8  
                   i2l795 0112                     i2l787 00F0                     i2l779 00D6  
                   i2l797 0124                     i2l789 00F6                     _TRISA 0F92  
                   _TRISB 0F93                     _TRISD 0F95                     _Units 0018  
                   tablat 0FF5                     ttemp5 001A                     ttemp6 001D  
                   ttemp7 0021                     status 0FD8                     wtemp8 001A  
         __initialization 0130              __end_of_main 01AA                    ??_main 0016  
           __activetblptr 0000                    _ADCON1 0FC1                    _INT0IF 7F91  
                  _OSCCON 0FD3                    i2u1_40 00D6                    i2u1_41 00D2  
                  i2u2_40 00EC                    i2u2_41 00E8                    i2u3_40 0108  
                  i2u3_41 0104                    i2u4_40 0124                    i2u4_41 0120  
                  isa$std 0001              __pdataCOMRAM 0001                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                __accesstop 0060  
 __end_of__initialization 0156             ___rparam_used 0001            __pcstackCOMRAM 0010  
      Display_Function@D1 0015        Display_Function@D2 0010        Display_Function@D3 0011  
      Display_Function@D4 0012     __end_of_Configuration 018C                   _Display 000B  
                 __Hparam 0000                   __Lparam 0000                   __pcinit 0130  
                 __ramtop 0800                   __ptext0 018C                   __ptext1 0012  
                 __ptext2 0160            __pintcode_body 00C6      end_of_initialization 0156  
                 int_func 00C6          _Display_Function 0012                   postdec1 0FE5  
                 postinc0 0FEE             __pidataCOMRAM 01AA       start_initialization 0130  
             __end_of_INT 0130                 _Numbers_2 0001               __pbssCOMRAM 0016  
               __pintcode 0008  __end_of_Display_Function 00C6                  _RCONbits 0FD0  
             _INTCON2bits 0FF1                 copy_data0 0144             _Configuration 0160  
                _Hundreds 0016                  __Hrparam 0000                  __Lrparam 0000  
          ?_Configuration 0010                  isa$xinst 0000                  int$flags 0019  
              _INTCONbits 0FF2                  intlevel2 0000         ?_Display_Function 0010  
      ??_Display_Function 0013           ??_Configuration 0010  
