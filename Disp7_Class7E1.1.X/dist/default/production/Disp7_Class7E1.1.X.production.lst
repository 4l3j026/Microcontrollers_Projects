

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Nov 11 15:32:00 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000114                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for Data_Display@F3216
    60   000114  BF                 	db	191
    61   000115  86                 	db	134
    62   000116  DB                 	db	219
    63   000117  CF                 	db	207
    64   000118  E6                 	db	230
    65   000119  ED                 	db	237
    66   00011A  FD                 	db	253
    67   00011B  87                 	db	135
    68   00011C  FF                 	db	255
    69   00011D  E7                 	db	231
    70                           
    71                           ;initializer for Data_Display@F3218
    72   00011E  01                 	db	1
    73   00011F  02                 	db	2
    74   000120  04                 	db	4
    75   000121  08                 	db	8
    76   000000                     _INT0IF	set	32657
    77   000000                     _LATA	set	3977
    78   000000                     _TRISA	set	3986
    79   000000                     _ADCON1	set	4033
    80   000000                     _OSCCON	set	4051
    81   000000                     _INTCON2bits	set	4081
    82   000000                     _INTCONbits	set	4082
    83   000000                     _RCONbits	set	4048
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISB	set	3987
    86   000000                     _LATD	set	3980
    87   000000                     _LATB	set	3978
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   000070                     __pcinit:
    93                           	callstack 0
    94   000070                     start_initialization:
    95                           	callstack 0
    96   000070                     __initialization:
    97                           	callstack 0
    98                           
    99                           ; Initialize objects allocated to COMRAM (14 bytes)
   100                           ; load TBLPTR registers with __pidataCOMRAM
   101   000070  0E14               	movlw	low __pidataCOMRAM
   102   000072  6EF6               	movwf	tblptrl,c
   103   000074  0E01               	movlw	high __pidataCOMRAM
   104   000076  6EF7               	movwf	tblptrh,c
   105   000078  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   106   00007A  6EF8               	movwf	tblptru,c
   107   00007C  EE00  F013         	lfsr	0,__pdataCOMRAM
   108   000080  EE10 F00E          	lfsr	1,14
   109   000084                     copy_data0:
   110   000084  0009               	tblrd		*+
   111   000086  CFF5 FFEE          	movff	tablat,postinc0
   112   00008A  50E5               	movf	postdec1,w,c
   113   00008C  50E1               	movf	fsr1l,w,c
   114   00008E  E1FA               	bnz	copy_data0
   115                           
   116                           ; Clear objects allocated to COMRAM (5 bytes)
   117   000090  6A25               	clrf	(__pbssCOMRAM+4)& (0+255),c
   118   000092  6A24               	clrf	(__pbssCOMRAM+3)& (0+255),c
   119   000094  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   000096  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   000098  6A21               	clrf	__pbssCOMRAM& (0+255),c
   122   00009A                     end_of_initialization:
   123                           	callstack 0
   124   00009A                     __end_of__initialization:
   125                           	callstack 0
   126   00009A  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127   00009C  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128   00009E  0100               	movlb	0
   129   0000A0  EF7F  F000         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132   000021                     __pbssCOMRAM:
   133                           	callstack 0
   134   000021                     _Hundreds:
   135                           	callstack 0
   136   000021                     	ds	1
   137   000022                     _Tens:
   138                           	callstack 0
   139   000022                     	ds	1
   140   000023                     _Units:
   141                           	callstack 0
   142   000023                     	ds	1
   143   000024                     _Display_Counter:
   144                           	callstack 0
   145   000024                     	ds	1
   146   000025                     _Number_Counter:
   147                           	callstack 0
   148   000025                     	ds	1
   149                           
   150                           	psect	dataCOMRAM
   151   000013                     __pdataCOMRAM:
   152                           	callstack 0
   153   000013                     Data_Display@F3216:
   154                           	callstack 0
   155   000013                     	ds	10
   156   00001D                     Data_Display@F3218:
   157                           	callstack 0
   158   00001D                     	ds	4
   159                           
   160                           	psect	cstackCOMRAM
   161   000001                     __pcstackCOMRAM:
   162                           	callstack 0
   163   000001                     Data_Display@D:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x0
   167   000001                     	ds	1
   168   000002                     ??_Data_Display:
   169                           
   170                           ; 1 bytes @ 0x1
   171   000002                     	ds	2
   172   000004                     Data_Display@Numbers_2:
   173                           	callstack 0
   174                           
   175                           ; 10 bytes @ 0x3
   176   000004                     	ds	10
   177   00000E                     Data_Display@Display:
   178                           	callstack 0
   179                           
   180                           ; 4 bytes @ 0xD
   181   00000E                     	ds	4
   182   000012                     Data_Display@N:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x11
   186   000012                     	ds	1
   187   000013                     
   188                           ; 1 bytes @ 0x12
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 31 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   208 ;;      Params:         0       0       0       0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0       0       0
   210 ;;      Temps:          0       0       0       0       0       0       0       0       0
   211 ;;      Totals:         0       0       0       0       0       0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called: 2
   214 ;; This function calls:
   215 ;;		_Configuration
   216 ;;		_Data_Display
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text0
   223   0000FE                     __ptext0:
   224                           	callstack 0
   225   0000FE                     _main:
   226                           	callstack 29
   227   0000FE                     
   228                           ;main.c: 34:     Configuration();
   229   0000FE  EC69  F000         	call	_Configuration	;wreg free
   230   000102                     l789:
   231                           
   232                           ;main.c: 46:         Data_Display(Number_Counter, Display_Counter);
   233   000102  0E00               	movlw	0
   234   000104  6E01               	movwf	Data_Display@D^0,c
   235   000106  5025               	movf	_Number_Counter^0,w,c
   236   000108  EC09  F000         	call	_Data_Display
   237   00010C  EF81  F000         	goto	l789
   238   000110  EF07  F000         	goto	start
   239   000114                     __end_of_main:
   240                           	callstack 0
   241                           
   242 ;; *************** function _Data_Display *****************
   243 ;; Defined at:
   244 ;;		line 79 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;  N               1    wreg     unsigned char 
   247 ;;  D               1    0[COMRAM] unsigned char 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  N               1   17[COMRAM] unsigned char 
   250 ;;  Numbers_2      10    3[COMRAM] unsigned char [10]
   251 ;;  Display         4   13[COMRAM] unsigned char [4]
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   261 ;;      Params:         1       0       0       0       0       0       0       0       0
   262 ;;      Locals:        15       0       0       0       0       0       0       0       0
   263 ;;      Temps:          2       0       0       0       0       0       0       0       0
   264 ;;      Totals:        18       0       0       0       0       0       0       0       0
   265 ;;Total ram usage:       18 bytes
   266 ;; Hardware stack levels used: 1
   267 ;; Hardware stack levels required when called: 1
   268 ;; This function calls:
   269 ;;		Nothing
   270 ;; This function is called by:
   271 ;;		_main
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text1
   276   000012                     __ptext1:
   277                           	callstack 0
   278   000012                     _Data_Display:
   279                           	callstack 29
   280                           
   281                           ;incstack = 0
   282                           ;Data_Display@N stored from wreg
   283   000012  6E12               	movwf	Data_Display@N^0,c
   284   000014                     
   285                           ;main.c: 82:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   286   000014  EE20  F013         	lfsr	2,Data_Display@F3216
   287   000018  EE10  F004         	lfsr	1,Data_Display@Numbers_2
   288   00001C  0E09               	movlw	9
   289   00001E                     u41:
   290   00001E  CFDB FFE3          	movff	plusw2,plusw1
   291   000022  06E8               	decf	wreg,f,c
   292   000024  E2FC               	bc	u41
   293   000026                     
   294                           ;main.c: 84:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   295   000026  C01D  F00E         	movff	Data_Display@F3218,Data_Display@Display
   296   00002A  C01E  F00F         	movff	Data_Display@F3218+1,Data_Display@Display+1
   297   00002E  C01F  F010         	movff	Data_Display@F3218+2,Data_Display@Display+2
   298   000032  C020  F011         	movff	Data_Display@F3218+3,Data_Display@Display+3
   299   000036                     
   300                           ;main.c: 87:     LATD = Numbers_2 [N];
   301   000036  0E04               	movlw	low Data_Display@Numbers_2
   302   000038  2412               	addwf	Data_Display@N^0,w,c
   303   00003A  6ED9               	movwf	fsr2l,c
   304   00003C  6ADA               	clrf	fsr2h,c
   305   00003E  0E00               	movlw	high Data_Display@Numbers_2
   306   000040  22DA               	addwfc	fsr2h,f,c
   307   000042  50DF               	movf	indf2,w,c
   308   000044  6E8C               	movwf	140,c	;volatile
   309   000046                     
   310                           ;main.c: 88:     LATA = Display [D];
   311   000046  0E0E               	movlw	low Data_Display@Display
   312   000048  2401               	addwf	Data_Display@D^0,w,c
   313   00004A  6ED9               	movwf	fsr2l,c
   314   00004C  6ADA               	clrf	fsr2h,c
   315   00004E  0E00               	movlw	high Data_Display@Display
   316   000050  22DA               	addwfc	fsr2h,f,c
   317   000052  50DF               	movf	indf2,w,c
   318   000054  6E89               	movwf	137,c	;volatile
   319   000056                     
   320                           ;main.c: 89:     _delay((unsigned long)((200)*(8000000/4000.0)));
   321   000056  0E03               	movlw	3
   322   000058  6E03               	movwf	(??_Data_Display+1)^0,c
   323   00005A  0E08               	movlw	8
   324   00005C  6E02               	movwf	??_Data_Display^0,c
   325   00005E  0E77               	movlw	119
   326   000060                     u57:
   327   000060  2EE8               	decfsz	wreg,f,c
   328   000062  D7FE               	bra	u57
   329   000064  2E02               	decfsz	??_Data_Display^0,f,c
   330   000066  D7FC               	bra	u57
   331   000068  2E03               	decfsz	(??_Data_Display+1)^0,f,c
   332   00006A  D7FA               	bra	u57
   333   00006C  F000               	nop	
   334   00006E  0012               	return		;funcret
   335   000070                     __end_of_Data_Display:
   336                           	callstack 0
   337                           
   338 ;; *************** function _Configuration *****************
   339 ;; Defined at:
   340 ;;		line 55 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; Hardware stack levels required when called: 1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369   0000D2                     __ptext2:
   370                           	callstack 0
   371   0000D2                     _Configuration:
   372                           	callstack 29
   373   0000D2                     
   374                           ;main.c: 57:     OSCCON = 0x72;
   375   0000D2  0E72               	movlw	114
   376   0000D4  6ED3               	movwf	211,c	;volatile
   377                           
   378                           ;main.c: 58:     ADCON1 = 0x0F;
   379   0000D6  0E0F               	movlw	15
   380   0000D8  6EC1               	movwf	193,c	;volatile
   381                           
   382                           ;main.c: 60:     TRISA = 0x00;
   383   0000DA  0E00               	movlw	0
   384   0000DC  6E92               	movwf	146,c	;volatile
   385                           
   386                           ;main.c: 61:     TRISB = 0x03;
   387   0000DE  0E03               	movlw	3
   388   0000E0  6E93               	movwf	147,c	;volatile
   389                           
   390                           ;main.c: 62:     TRISD = 0x00;
   391   0000E2  0E00               	movlw	0
   392   0000E4  6E95               	movwf	149,c	;volatile
   393                           
   394                           ;main.c: 64:     LATA = 0x00;
   395   0000E6  0E00               	movlw	0
   396   0000E8  6E89               	movwf	137,c	;volatile
   397                           
   398                           ;main.c: 65:     LATB = 0x00;
   399   0000EA  0E00               	movlw	0
   400   0000EC  6E8A               	movwf	138,c	;volatile
   401                           
   402                           ;main.c: 66:     LATD = 0x00;
   403   0000EE  0E00               	movlw	0
   404   0000F0  6E8C               	movwf	140,c	;volatile
   405   0000F2                     
   406                           ;main.c: 69:     RCONbits.IPEN = 0;
   407   0000F2  9ED0               	bcf	208,7,c	;volatile
   408   0000F4                     
   409                           ;main.c: 70:     INTCONbits.GIE = 1;
   410   0000F4  8EF2               	bsf	242,7,c	;volatile
   411   0000F6                     
   412                           ;main.c: 71:     INTCONbits.INT0IE = 1;
   413   0000F6  88F2               	bsf	242,4,c	;volatile
   414   0000F8                     
   415                           ;main.c: 72:     INTCONbits.INT0IF = 0;
   416   0000F8  92F2               	bcf	242,1,c	;volatile
   417   0000FA                     
   418                           ;main.c: 73:     INTCON2bits.INTEDG0 = 0;
   419   0000FA  9CF1               	bcf	241,6,c	;volatile
   420   0000FC  0012               	return		;funcret
   421   0000FE                     __end_of_Configuration:
   422                           	callstack 0
   423                           
   424 ;; *************** function _INT *****************
   425 ;; Defined at:
   426 ;;		line 96 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		Interrupt level 2
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	intcode
   454   000008                     __pintcode:
   455                           	callstack 0
   456   000008                     _INT:
   457                           	callstack 29
   458                           
   459                           ;incstack = 0
   460   000008  8226               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   461   00000A  ED52  F000         	call	int_func,f	;refresh shadow registers
   462                           
   463                           	psect	intcode_body
   464   0000A4                     __pintcode_body:
   465                           	callstack 29
   466   0000A4                     int_func:
   467                           	callstack 29
   468   0000A4  0006               	pop		; remove dummy address from shadow register refresh
   469   0000A6                     
   470                           ;main.c: 98:     if (INT0IF) {
   471   0000A6  A2F2               	btfss	4082,1,c	;volatile
   472   0000A8  EF58  F000         	goto	i2u2_41
   473   0000AC  EF5A  F000         	goto	i2u2_40
   474   0000B0                     i2u2_41:
   475   0000B0  EF67  F000         	goto	i2l65
   476   0000B4                     i2u2_40:
   477   0000B4                     
   478                           ;main.c: 100:         INT0IF = 0;
   479   0000B4  92F2               	bcf	4082,1,c	;volatile
   480   0000B6                     
   481                           ;main.c: 101:         Number_Counter++;
   482   0000B6  2A25               	incf	_Number_Counter^0,f,c
   483   0000B8                     
   484                           ;main.c: 102:         if (Number_Counter == 10) {
   485   0000B8  0E0A               	movlw	10
   486   0000BA  1825               	xorwf	_Number_Counter^0,w,c
   487   0000BC  A4D8               	btfss	status,2,c
   488   0000BE  EF63  F000         	goto	i2u3_41
   489   0000C2  EF65  F000         	goto	i2u3_40
   490   0000C6                     i2u3_41:
   491   0000C6  EF67  F000         	goto	i2l65
   492   0000CA                     i2u3_40:
   493   0000CA                     
   494                           ;main.c: 104:             Number_Counter = 0;
   495   0000CA  0E00               	movlw	0
   496   0000CC  6E25               	movwf	_Number_Counter^0,c
   497   0000CE                     i2l65:
   498   0000CE  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   499   0000D0  0011               	retfie		f
   500   0000D2                     __end_of_INT:
   501                           	callstack 0
   502   000000                     
   503                           	psect	rparam
   504   000000                     
   505                           	psect	temp
   506   000026                     btemp:
   507                           	callstack 0
   508   000026                     	ds	1
   509   000000                     int$flags	set	btemp
   510   000000                     wtemp8	set	btemp+1
   511   000000                     ttemp5	set	btemp+1
   512   000000                     ttemp6	set	btemp+4
   513   000000                     ttemp7	set	btemp+8
   514                           
   515                           	psect	config
   516                           
   517                           ;Config register CONFIG1L @ 0x300000
   518                           ;	PLL Prescaler Selection bits
   519                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   520                           ;	System Clock Postscaler Selection bits
   521                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   522                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   523                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   524   300000                     	org	3145728
   525   300000  00                 	db	0
   526                           
   527                           ;Config register CONFIG1H @ 0x300001
   528                           ;	Oscillator Selection bits
   529                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   530                           ;	Fail-Safe Clock Monitor Enable bit
   531                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   532                           ;	Internal/External Oscillator Switchover bit
   533                           ;	IESO = OFF, Oscillator Switchover mode disabled
   534   300001                     	org	3145729
   535   300001  05                 	db	5
   536                           
   537                           ;Config register CONFIG2L @ 0x300002
   538                           ;	Power-up Timer Enable bit
   539                           ;	PWRT = OFF, PWRT disabled
   540                           ;	Brown-out Reset Enable bits
   541                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   542                           ;	Brown-out Reset Voltage bits
   543                           ;	BORV = 3, Minimum setting 2.05V
   544                           ;	USB Voltage Regulator Enable bit
   545                           ;	VREGEN = OFF, USB voltage regulator disabled
   546   300002                     	org	3145730
   547   300002  1F                 	db	31
   548                           
   549                           ;Config register CONFIG2H @ 0x300003
   550                           ;	Watchdog Timer Enable bit
   551                           ;	WDT = ON, WDT enabled
   552                           ;	Watchdog Timer Postscale Select bits
   553                           ;	WDTPS = 32768, 1:32768
   554   300003                     	org	3145731
   555   300003  1F                 	db	31
   556                           
   557                           ; Padding undefined space
   558   300004                     	org	3145732
   559   300004  FF                 	db	255
   560                           
   561                           ;Config register CONFIG3H @ 0x300005
   562                           ;	CCP2 MUX bit
   563                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   564                           ;	PORTB A/D Enable bit
   565                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   566                           ;	Low-Power Timer 1 Oscillator Enable bit
   567                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   568                           ;	MCLR Pin Enable bit
   569                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   570   300005                     	org	3145733
   571   300005  83                 	db	131
   572                           
   573                           ;Config register CONFIG4L @ 0x300006
   574                           ;	Stack Full/Underflow Reset Enable bit
   575                           ;	STVREN = ON, Stack full/underflow will cause Reset
   576                           ;	Single-Supply ICSP Enable bit
   577                           ;	LVP = ON, Single-Supply ICSP enabled
   578                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   579                           ;	ICPRT = OFF, ICPORT disabled
   580                           ;	Extended Instruction Set Enable bit
   581                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   582                           ;	Background Debugger Enable bit
   583                           ;	DEBUG = 0x1, unprogrammed default
   584   300006                     	org	3145734
   585   300006  85                 	db	133
   586                           
   587                           ; Padding undefined space
   588   300007                     	org	3145735
   589   300007  FF                 	db	255
   590                           
   591                           ;Config register CONFIG5L @ 0x300008
   592                           ;	Code Protection bit
   593                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   594                           ;	Code Protection bit
   595                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   596                           ;	Code Protection bit
   597                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   598                           ;	Code Protection bit
   599                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   600   300008                     	org	3145736
   601   300008  0F                 	db	15
   602                           
   603                           ;Config register CONFIG5H @ 0x300009
   604                           ;	Boot Block Code Protection bit
   605                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   606                           ;	Data EEPROM Code Protection bit
   607                           ;	CPD = OFF, Data EEPROM is not code-protected
   608   300009                     	org	3145737
   609   300009  C0                 	db	192
   610                           
   611                           ;Config register CONFIG6L @ 0x30000A
   612                           ;	Write Protection bit
   613                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   614                           ;	Write Protection bit
   615                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   616                           ;	Write Protection bit
   617                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   618                           ;	Write Protection bit
   619                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   620   30000A                     	org	3145738
   621   30000A  0F                 	db	15
   622                           
   623                           ;Config register CONFIG6H @ 0x30000B
   624                           ;	Configuration Register Write Protection bit
   625                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   626                           ;	Boot Block Write Protection bit
   627                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   628                           ;	Data EEPROM Write Protection bit
   629                           ;	WRTD = OFF, Data EEPROM is not write-protected
   630   30000B                     	org	3145739
   631   30000B  E0                 	db	224
   632                           
   633                           ;Config register CONFIG7L @ 0x30000C
   634                           ;	Table Read Protection bit
   635                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   636                           ;	Table Read Protection bit
   637                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   638                           ;	Table Read Protection bit
   639                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   640                           ;	Table Read Protection bit
   641                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   642   30000C                     	org	3145740
   643   30000C  0F                 	db	15
   644                           
   645                           ;Config register CONFIG7H @ 0x30000D
   646                           ;	Boot Block Table Read Protection bit
   647                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   648   30000D                     	org	3145741
   649   30000D  40                 	db	64
   650                           tosu	equ	0xFFF
   651                           tosh	equ	0xFFE
   652                           tosl	equ	0xFFD
   653                           stkptr	equ	0xFFC
   654                           pclatu	equ	0xFFB
   655                           pclath	equ	0xFFA
   656                           pcl	equ	0xFF9
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           prodh	equ	0xFF4
   662                           prodl	equ	0xFF3
   663                           indf0	equ	0xFEF
   664                           postinc0	equ	0xFEE
   665                           postdec0	equ	0xFED
   666                           preinc0	equ	0xFEC
   667                           plusw0	equ	0xFEB
   668                           fsr0h	equ	0xFEA
   669                           fsr0l	equ	0xFE9
   670                           wreg	equ	0xFE8
   671                           indf1	equ	0xFE7
   672                           postinc1	equ	0xFE6
   673                           postdec1	equ	0xFE5
   674                           preinc1	equ	0xFE4
   675                           plusw1	equ	0xFE3
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           bsr	equ	0xFE0
   679                           indf2	equ	0xFDF
   680                           postinc2	equ	0xFDE
   681                           postdec2	equ	0xFDD
   682                           preinc2	equ	0xFDC
   683                           plusw2	equ	0xFDB
   684                           fsr2h	equ	0xFDA
   685                           fsr2l	equ	0xFD9
   686                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                      _Configuration
                       _Data_Display
 ---------------------------------------------------------------------------------
 (1) _Data_Display                                        18    17      1     168
                                              0 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      25       1       39.4%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      29        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Nov 11 15:32:00 2023

                     l51 00FC                       l58 006E                       u41 001E  
                     u57 0060                      l741 00D2                      l751 00FA  
                    l743 00F2                      l745 00F4                      l747 00F6  
                    l749 00F8                      l781 0036                      l783 0046  
                    l785 0056                      l777 0014                      l779 0026  
                    l787 00FE                      l789 0102                      _INT 0008  
                    wreg 0FE8                     ?_INT 0001                     _LATA 0F89  
                   _LATB 0F8A                     _LATD 0F8C                     i2l65 00CE  
                   _Tens 0022                     _main 00FE                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     btemp 0026  
                   start 000E             ___param_bank 0000                    ??_INT 0001  
                  ?_main 0001                    i2l771 00B6                    i2l773 00B8  
                  i2l775 00CA                    i2l767 00A6                    i2l769 00B4  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISD 0F95  
                  _Units 0023                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    ttemp5 0027                    ttemp6 002A  
                  ttemp7 002E                    status 0FD8                    wtemp8 0027  
        __initialization 0070             __end_of_main 0114                   ??_main 0013  
          __activetblptr 0000             _Data_Display 0012                   _ADCON1 0FC1  
  Data_Display@Numbers_2 0004                   _INT0IF 7F91                   _OSCCON 0FD3  
                 i2u2_40 00B4                   i2u2_41 00B0                   i2u3_40 00CA  
                 i2u3_41 00C6                   isa$std 0001          _Display_Counter 0024  
           __pdataCOMRAM 0013                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 009A  
          ___rparam_used 0001           __pcstackCOMRAM 0001      Data_Display@Display 000E  
         _Number_Counter 0025        Data_Display@F3216 0013        Data_Display@F3218 001D  
  __end_of_Configuration 00FE                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0070                  __ramtop 0800                  __ptext0 00FE  
                __ptext1 0012                  __ptext2 00D2           __pintcode_body 00A4  
   end_of_initialization 009A                  int_func 00A4                  postdec1 0FE5  
                postinc0 0FEE            __pidataCOMRAM 0114      start_initialization 0070  
            __end_of_INT 00D2              __pbssCOMRAM 0021                __pintcode 0008  
          ?_Data_Display 0001                 _RCONbits 0FD0           ??_Data_Display 0002  
            _INTCON2bits 0FF1                copy_data0 0084            _Configuration 00D2  
               _Hundreds 0021                 __Hrparam 0000                 __Lrparam 0000  
         ?_Configuration 0001                 isa$xinst 0000                 int$flags 0026  
             _INTCONbits 0FF2            Data_Display@D 0001            Data_Display@N 0012  
               intlevel2 0000     __end_of_Data_Display 0070          ??_Configuration 0001  
