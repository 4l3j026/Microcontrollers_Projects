

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Nov 12 01:27:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   00014A                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for Data_Display@F3217
    60   00014A  BF                 	db	191
    61   00014B  86                 	db	134
    62   00014C  DB                 	db	219
    63   00014D  CF                 	db	207
    64   00014E  E6                 	db	230
    65   00014F  ED                 	db	237
    66   000150  FD                 	db	253
    67   000151  87                 	db	135
    68   000152  FF                 	db	255
    69   000153  E7                 	db	231
    70                           
    71                           ;initializer for Data_Display@F3219
    72   000154  01                 	db	1
    73   000155  02                 	db	2
    74   000156  04                 	db	4
    75   000157  08                 	db	8
    76   000000                     _INT0IF	set	32657
    77   000000                     _LATA	set	3977
    78   000000                     _TRISA	set	3986
    79   000000                     _ADCON1	set	4033
    80   000000                     _OSCCON	set	4051
    81   000000                     _INTCON2bits	set	4081
    82   000000                     _INTCONbits	set	4082
    83   000000                     _RCONbits	set	4048
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISB	set	3987
    86   000000                     _LATD	set	3980
    87   000000                     _LATB	set	3978
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   0000BC                     __pcinit:
    93                           	callstack 0
    94   0000BC                     start_initialization:
    95                           	callstack 0
    96   0000BC                     __initialization:
    97                           	callstack 0
    98                           
    99                           ; Initialize objects allocated to COMRAM (14 bytes)
   100                           ; load TBLPTR registers with __pidataCOMRAM
   101   0000BC  0E4A               	movlw	low __pidataCOMRAM
   102   0000BE  6EF6               	movwf	tblptrl,c
   103   0000C0  0E01               	movlw	high __pidataCOMRAM
   104   0000C2  6EF7               	movwf	tblptrh,c
   105   0000C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   106   0000C6  6EF8               	movwf	tblptru,c
   107   0000C8  EE00  F016         	lfsr	0,__pdataCOMRAM
   108   0000CC  EE10 F00E          	lfsr	1,14
   109   0000D0                     copy_data0:
   110   0000D0  0009               	tblrd		*+
   111   0000D2  CFF5 FFEE          	movff	tablat,postinc0
   112   0000D6  50E5               	movf	postdec1,w,c
   113   0000D8  50E1               	movf	fsr1l,w,c
   114   0000DA  E1FA               	bnz	copy_data0
   115                           
   116                           ; Clear objects allocated to COMRAM (5 bytes)
   117   0000DC  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   118   0000DE  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   119   0000E0  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   0000E2  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   0000E4  6A24               	clrf	__pbssCOMRAM& (0+255),c
   122   0000E6                     end_of_initialization:
   123                           	callstack 0
   124   0000E6                     __end_of__initialization:
   125                           	callstack 0
   126   0000E6  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127   0000E8  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128   0000EA  0100               	movlb	0
   129   0000EC  EF38  F000         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132   000024                     __pbssCOMRAM:
   133                           	callstack 0
   134   000024                     _Hundreds:
   135                           	callstack 0
   136   000024                     	ds	1
   137   000025                     _Tens:
   138                           	callstack 0
   139   000025                     	ds	1
   140   000026                     _Units:
   141                           	callstack 0
   142   000026                     	ds	1
   143   000027                     _Display:
   144                           	callstack 0
   145   000027                     	ds	1
   146   000028                     _Number_Counter:
   147                           	callstack 0
   148   000028                     	ds	1
   149                           
   150                           	psect	dataCOMRAM
   151   000016                     __pdataCOMRAM:
   152                           	callstack 0
   153   000016                     Data_Display@F3217:
   154                           	callstack 0
   155   000016                     	ds	10
   156   000020                     Data_Display@F3219:
   157                           	callstack 0
   158   000020                     	ds	4
   159                           
   160                           	psect	cstackCOMRAM
   161   000001                     __pcstackCOMRAM:
   162                           	callstack 0
   163   000001                     Data_Display@D:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x0
   167   000001                     	ds	1
   168   000002                     ??_Data_Display:
   169                           
   170                           ; 1 bytes @ 0x1
   171   000002                     	ds	2
   172   000004                     Data_Display@Numbers_2:
   173                           	callstack 0
   174                           
   175                           ; 10 bytes @ 0x3
   176   000004                     	ds	10
   177   00000E                     Data_Display@Display:
   178                           	callstack 0
   179                           
   180                           ; 4 bytes @ 0xD
   181   00000E                     	ds	4
   182   000012                     Data_Display@N:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x11
   186   000012                     	ds	1
   187   000013                     ??_main:
   188                           
   189                           ; 1 bytes @ 0x12
   190   000013                     	ds	1
   191   000014                     main@i:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x13
   195   000014                     	ds	2
   196                           
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 32 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;  i               2   19[COMRAM] int 
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   216 ;;      Params:         0       0       0       0       0       0       0       0       0
   217 ;;      Locals:         2       0       0       0       0       0       0       0       0
   218 ;;      Temps:          1       0       0       0       0       0       0       0       0
   219 ;;      Totals:         3       0       0       0       0       0       0       0       0
   220 ;;Total ram usage:        3 bytes
   221 ;; Hardware stack levels required when called: 2
   222 ;; This function calls:
   223 ;;		_Configuration
   224 ;;		_Data_Display
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231   000070                     __ptext0:
   232                           	callstack 0
   233   000070                     _main:
   234                           	callstack 29
   235   000070                     
   236                           ;main.c: 35:     Configuration();
   237   000070  EC8F  F000         	call	_Configuration	;wreg free
   238   000074                     l803:
   239                           
   240                           ;main.c: 50:         for (int i = 0; i < 4; i++) {
   241   000074  0E00               	movlw	0
   242   000076  6E15               	movwf	(main@i+1)^0,c
   243   000078  0E00               	movlw	0
   244   00007A  6E14               	movwf	main@i^0,c
   245   00007C                     l809:
   246                           
   247                           ;main.c: 52:             Data_Display(0, i);
   248   00007C  C014  F001         	movff	main@i,Data_Display@D
   249   000080  0E00               	movlw	0
   250   000082  EC09  F000         	call	_Data_Display
   251   000086                     
   252                           ;main.c: 53:             _delay((unsigned long)((80)*(8000000/4000.0)));
   253   000086  0ED0               	movlw	208
   254   000088  6E13               	movwf	??_main^0,c
   255   00008A  0ECA               	movlw	202
   256   00008C                     u77:
   257   00008C  2EE8               	decfsz	wreg,f,c
   258   00008E  D7FE               	bra	u77
   259   000090  2E13               	decfsz	??_main^0,f,c
   260   000092  D7FC               	bra	u77
   261   000094                     
   262                           ;main.c: 55:         }
   263   000094  4A14               	infsnz	main@i^0,f,c
   264   000096  2A15               	incf	(main@i+1)^0,f,c
   265   000098  BE15               	btfsc	(main@i+1)^0,7,c
   266   00009A  EF58  F000         	goto	u61
   267   00009E  5015               	movf	(main@i+1)^0,w,c
   268   0000A0  E109               	bnz	u60
   269   0000A2  0E04               	movlw	4
   270   0000A4  5C14               	subwf	main@i^0,w,c
   271   0000A6  A0D8               	btfss	status,0,c
   272   0000A8  EF58  F000         	goto	u61
   273   0000AC  EF5A  F000         	goto	u60
   274   0000B0                     u61:
   275   0000B0  EF3E  F000         	goto	l809
   276   0000B4                     u60:
   277   0000B4  EF3A  F000         	goto	l803
   278   0000B8  EF07  F000         	goto	start
   279   0000BC                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function _Data_Display *****************
   283 ;; Defined at:
   284 ;;		line 89 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;  N               1    wreg     unsigned char 
   287 ;;  D               1    0[COMRAM] unsigned char 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  N               1   17[COMRAM] unsigned char 
   290 ;;  Numbers_2      10    3[COMRAM] unsigned char [10]
   291 ;;  Display         4   13[COMRAM] unsigned char [4]
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   301 ;;      Params:         1       0       0       0       0       0       0       0       0
   302 ;;      Locals:        15       0       0       0       0       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0       0       0       0       0
   304 ;;      Totals:        18       0       0       0       0       0       0       0       0
   305 ;;Total ram usage:       18 bytes
   306 ;; Hardware stack levels used: 1
   307 ;; Hardware stack levels required when called: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text1
   316   000012                     __ptext1:
   317                           	callstack 0
   318   000012                     _Data_Display:
   319                           	callstack 29
   320                           
   321                           ;incstack = 0
   322                           ;Data_Display@N stored from wreg
   323   000012  6E12               	movwf	Data_Display@N^0,c
   324   000014                     
   325                           ;main.c: 92:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   326   000014  EE20  F016         	lfsr	2,Data_Display@F3217
   327   000018  EE10  F004         	lfsr	1,Data_Display@Numbers_2
   328   00001C  0E09               	movlw	9
   329   00001E                     u51:
   330   00001E  CFDB FFE3          	movff	plusw2,plusw1
   331   000022  06E8               	decf	wreg,f,c
   332   000024  E2FC               	bc	u51
   333   000026                     
   334                           ;main.c: 94:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   335   000026  C020  F00E         	movff	Data_Display@F3219,Data_Display@Display
   336   00002A  C021  F00F         	movff	Data_Display@F3219+1,Data_Display@Display+1
   337   00002E  C022  F010         	movff	Data_Display@F3219+2,Data_Display@Display+2
   338   000032  C023  F011         	movff	Data_Display@F3219+3,Data_Display@Display+3
   339   000036                     
   340                           ;main.c: 97:     LATD = Numbers_2 [N];
   341   000036  0E04               	movlw	low Data_Display@Numbers_2
   342   000038  2412               	addwf	Data_Display@N^0,w,c
   343   00003A  6ED9               	movwf	fsr2l,c
   344   00003C  6ADA               	clrf	fsr2h,c
   345   00003E  0E00               	movlw	high Data_Display@Numbers_2
   346   000040  22DA               	addwfc	fsr2h,f,c
   347   000042  50DF               	movf	indf2,w,c
   348   000044  6E8C               	movwf	140,c	;volatile
   349   000046                     
   350                           ;main.c: 98:     LATA = Display [D];
   351   000046  0E0E               	movlw	low Data_Display@Display
   352   000048  2401               	addwf	Data_Display@D^0,w,c
   353   00004A  6ED9               	movwf	fsr2l,c
   354   00004C  6ADA               	clrf	fsr2h,c
   355   00004E  0E00               	movlw	high Data_Display@Display
   356   000050  22DA               	addwfc	fsr2h,f,c
   357   000052  50DF               	movf	indf2,w,c
   358   000054  6E89               	movwf	137,c	;volatile
   359   000056                     
   360                           ;main.c: 99:     _delay((unsigned long)((200)*(8000000/4000.0)));
   361   000056  0E03               	movlw	3
   362   000058  6E03               	movwf	(??_Data_Display+1)^0,c
   363   00005A  0E08               	movlw	8
   364   00005C  6E02               	movwf	??_Data_Display^0,c
   365   00005E  0E77               	movlw	119
   366   000060                     u87:
   367   000060  2EE8               	decfsz	wreg,f,c
   368   000062  D7FE               	bra	u87
   369   000064  2E02               	decfsz	??_Data_Display^0,f,c
   370   000066  D7FC               	bra	u87
   371   000068  2E03               	decfsz	(??_Data_Display+1)^0,f,c
   372   00006A  D7FA               	bra	u87
   373   00006C  F000               	nop	
   374   00006E  0012               	return		;funcret
   375   000070                     __end_of_Data_Display:
   376                           	callstack 0
   377                           
   378 ;; *************** function _Configuration *****************
   379 ;; Defined at:
   380 ;;		line 65 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         0       0       0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text2
   409   00011E                     __ptext2:
   410                           	callstack 0
   411   00011E                     _Configuration:
   412                           	callstack 29
   413   00011E                     
   414                           ;main.c: 67:     OSCCON = 0x72;
   415   00011E  0E72               	movlw	114
   416   000120  6ED3               	movwf	211,c	;volatile
   417                           
   418                           ;main.c: 68:     ADCON1 = 0x0F;
   419   000122  0E0F               	movlw	15
   420   000124  6EC1               	movwf	193,c	;volatile
   421                           
   422                           ;main.c: 70:     TRISA = 0x00;
   423   000126  0E00               	movlw	0
   424   000128  6E92               	movwf	146,c	;volatile
   425                           
   426                           ;main.c: 71:     TRISB = 0x03;
   427   00012A  0E03               	movlw	3
   428   00012C  6E93               	movwf	147,c	;volatile
   429                           
   430                           ;main.c: 72:     TRISD = 0x00;
   431   00012E  0E00               	movlw	0
   432   000130  6E95               	movwf	149,c	;volatile
   433                           
   434                           ;main.c: 74:     LATA = 0x00;
   435   000132  0E00               	movlw	0
   436   000134  6E89               	movwf	137,c	;volatile
   437                           
   438                           ;main.c: 75:     LATB = 0x00;
   439   000136  0E00               	movlw	0
   440   000138  6E8A               	movwf	138,c	;volatile
   441                           
   442                           ;main.c: 76:     LATD = 0x00;
   443   00013A  0E00               	movlw	0
   444   00013C  6E8C               	movwf	140,c	;volatile
   445   00013E                     
   446                           ;main.c: 79:     RCONbits.IPEN = 0;
   447   00013E  9ED0               	bcf	208,7,c	;volatile
   448   000140                     
   449                           ;main.c: 80:     INTCONbits.GIE = 1;
   450   000140  8EF2               	bsf	242,7,c	;volatile
   451   000142                     
   452                           ;main.c: 81:     INTCONbits.INT0IE = 1;
   453   000142  88F2               	bsf	242,4,c	;volatile
   454   000144                     
   455                           ;main.c: 82:     INTCONbits.INT0IF = 0;
   456   000144  92F2               	bcf	242,1,c	;volatile
   457   000146                     
   458                           ;main.c: 83:     INTCON2bits.INTEDG0 = 0;
   459   000146  9CF1               	bcf	241,6,c	;volatile
   460   000148  0012               	return		;funcret
   461   00014A                     __end_of_Configuration:
   462                           	callstack 0
   463                           
   464 ;; *************** function _INT *****************
   465 ;; Defined at:
   466 ;;		line 106 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         0       0       0       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		Interrupt level 2
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	intcode
   494   000008                     __pintcode:
   495                           	callstack 0
   496   000008                     _INT:
   497                           	callstack 29
   498                           
   499                           ;incstack = 0
   500   000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   501   00000A  ED78  F000         	call	int_func,f	;refresh shadow registers
   502                           
   503                           	psect	intcode_body
   504   0000F0                     __pintcode_body:
   505                           	callstack 29
   506   0000F0                     int_func:
   507                           	callstack 29
   508   0000F0  0006               	pop		; remove dummy address from shadow register refresh
   509   0000F2                     
   510                           ;main.c: 108:     if (INT0IF) {
   511   0000F2  A2F2               	btfss	4082,1,c	;volatile
   512   0000F4  EF7E  F000         	goto	i2u3_41
   513   0000F8  EF80  F000         	goto	i2u3_40
   514   0000FC                     i2u3_41:
   515   0000FC  EF8D  F000         	goto	i2l67
   516   000100                     i2u3_40:
   517   000100                     
   518                           ;main.c: 110:         INT0IF = 0;
   519   000100  92F2               	bcf	4082,1,c	;volatile
   520   000102                     
   521                           ;main.c: 111:         Number_Counter++;
   522   000102  2A28               	incf	_Number_Counter^0,f,c
   523   000104                     
   524                           ;main.c: 112:         if (Number_Counter == 10) {
   525   000104  0E0A               	movlw	10
   526   000106  1828               	xorwf	_Number_Counter^0,w,c
   527   000108  A4D8               	btfss	status,2,c
   528   00010A  EF89  F000         	goto	i2u4_41
   529   00010E  EF8B  F000         	goto	i2u4_40
   530   000112                     i2u4_41:
   531   000112  EF8D  F000         	goto	i2l67
   532   000116                     i2u4_40:
   533   000116                     
   534                           ;main.c: 114:             Number_Counter = 0;
   535   000116  0E00               	movlw	0
   536   000118  6E28               	movwf	_Number_Counter^0,c
   537   00011A                     i2l67:
   538   00011A  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   539   00011C  0011               	retfie		f
   540   00011E                     __end_of_INT:
   541                           	callstack 0
   542   000000                     
   543                           	psect	rparam
   544   000000                     
   545                           	psect	temp
   546   000029                     btemp:
   547                           	callstack 0
   548   000029                     	ds	1
   549   000000                     int$flags	set	btemp
   550   000000                     wtemp8	set	btemp+1
   551   000000                     ttemp5	set	btemp+1
   552   000000                     ttemp6	set	btemp+4
   553   000000                     ttemp7	set	btemp+8
   554                           
   555                           	psect	config
   556                           
   557                           ;Config register CONFIG1L @ 0x300000
   558                           ;	PLL Prescaler Selection bits
   559                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   560                           ;	System Clock Postscaler Selection bits
   561                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   562                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   563                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   564   300000                     	org	3145728
   565   300000  00                 	db	0
   566                           
   567                           ;Config register CONFIG1H @ 0x300001
   568                           ;	Oscillator Selection bits
   569                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   570                           ;	Fail-Safe Clock Monitor Enable bit
   571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   572                           ;	Internal/External Oscillator Switchover bit
   573                           ;	IESO = OFF, Oscillator Switchover mode disabled
   574   300001                     	org	3145729
   575   300001  05                 	db	5
   576                           
   577                           ;Config register CONFIG2L @ 0x300002
   578                           ;	Power-up Timer Enable bit
   579                           ;	PWRT = OFF, PWRT disabled
   580                           ;	Brown-out Reset Enable bits
   581                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   582                           ;	Brown-out Reset Voltage bits
   583                           ;	BORV = 3, Minimum setting 2.05V
   584                           ;	USB Voltage Regulator Enable bit
   585                           ;	VREGEN = OFF, USB voltage regulator disabled
   586   300002                     	org	3145730
   587   300002  1F                 	db	31
   588                           
   589                           ;Config register CONFIG2H @ 0x300003
   590                           ;	Watchdog Timer Enable bit
   591                           ;	WDT = ON, WDT enabled
   592                           ;	Watchdog Timer Postscale Select bits
   593                           ;	WDTPS = 32768, 1:32768
   594   300003                     	org	3145731
   595   300003  1F                 	db	31
   596                           
   597                           ; Padding undefined space
   598   300004                     	org	3145732
   599   300004  FF                 	db	255
   600                           
   601                           ;Config register CONFIG3H @ 0x300005
   602                           ;	CCP2 MUX bit
   603                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   604                           ;	PORTB A/D Enable bit
   605                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   606                           ;	Low-Power Timer 1 Oscillator Enable bit
   607                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   608                           ;	MCLR Pin Enable bit
   609                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   610   300005                     	org	3145733
   611   300005  83                 	db	131
   612                           
   613                           ;Config register CONFIG4L @ 0x300006
   614                           ;	Stack Full/Underflow Reset Enable bit
   615                           ;	STVREN = ON, Stack full/underflow will cause Reset
   616                           ;	Single-Supply ICSP Enable bit
   617                           ;	LVP = ON, Single-Supply ICSP enabled
   618                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   619                           ;	ICPRT = OFF, ICPORT disabled
   620                           ;	Extended Instruction Set Enable bit
   621                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   622                           ;	Background Debugger Enable bit
   623                           ;	DEBUG = 0x1, unprogrammed default
   624   300006                     	org	3145734
   625   300006  85                 	db	133
   626                           
   627                           ; Padding undefined space
   628   300007                     	org	3145735
   629   300007  FF                 	db	255
   630                           
   631                           ;Config register CONFIG5L @ 0x300008
   632                           ;	Code Protection bit
   633                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   634                           ;	Code Protection bit
   635                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   636                           ;	Code Protection bit
   637                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   638                           ;	Code Protection bit
   639                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   640   300008                     	org	3145736
   641   300008  0F                 	db	15
   642                           
   643                           ;Config register CONFIG5H @ 0x300009
   644                           ;	Boot Block Code Protection bit
   645                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   646                           ;	Data EEPROM Code Protection bit
   647                           ;	CPD = OFF, Data EEPROM is not code-protected
   648   300009                     	org	3145737
   649   300009  C0                 	db	192
   650                           
   651                           ;Config register CONFIG6L @ 0x30000A
   652                           ;	Write Protection bit
   653                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   654                           ;	Write Protection bit
   655                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   656                           ;	Write Protection bit
   657                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   658                           ;	Write Protection bit
   659                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   660   30000A                     	org	3145738
   661   30000A  0F                 	db	15
   662                           
   663                           ;Config register CONFIG6H @ 0x30000B
   664                           ;	Configuration Register Write Protection bit
   665                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   666                           ;	Boot Block Write Protection bit
   667                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   668                           ;	Data EEPROM Write Protection bit
   669                           ;	WRTD = OFF, Data EEPROM is not write-protected
   670   30000B                     	org	3145739
   671   30000B  E0                 	db	224
   672                           
   673                           ;Config register CONFIG7L @ 0x30000C
   674                           ;	Table Read Protection bit
   675                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   676                           ;	Table Read Protection bit
   677                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   678                           ;	Table Read Protection bit
   679                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   680                           ;	Table Read Protection bit
   681                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   682   30000C                     	org	3145740
   683   30000C  0F                 	db	15
   684                           
   685                           ;Config register CONFIG7H @ 0x30000D
   686                           ;	Boot Block Table Read Protection bit
   687                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   688   30000D                     	org	3145741
   689   30000D  40                 	db	64
   690                           tosu	equ	0xFFF
   691                           tosh	equ	0xFFE
   692                           tosl	equ	0xFFD
   693                           stkptr	equ	0xFFC
   694                           pclatu	equ	0xFFB
   695                           pclath	equ	0xFFA
   696                           pcl	equ	0xFF9
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           prodh	equ	0xFF4
   702                           prodl	equ	0xFF3
   703                           indf0	equ	0xFEF
   704                           postinc0	equ	0xFEE
   705                           postdec0	equ	0xFED
   706                           preinc0	equ	0xFEC
   707                           plusw0	equ	0xFEB
   708                           fsr0h	equ	0xFEA
   709                           fsr0l	equ	0xFE9
   710                           wreg	equ	0xFE8
   711                           indf1	equ	0xFE7
   712                           postinc1	equ	0xFE6
   713                           postdec1	equ	0xFE5
   714                           preinc1	equ	0xFE4
   715                           plusw1	equ	0xFE3
   716                           fsr1h	equ	0xFE2
   717                           fsr1l	equ	0xFE1
   718                           bsr	equ	0xFE0
   719                           indf2	equ	0xFDF
   720                           postinc2	equ	0xFDE
   721                           postdec2	equ	0xFDD
   722                           preinc2	equ	0xFDC
   723                           plusw2	equ	0xFDB
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     236
                                             18 COMRAM     3     3      0
                      _Configuration
                       _Data_Display
 ---------------------------------------------------------------------------------
 (1) _Data_Display                                        18    17      1     168
                                              0 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      28       1       42.6%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      29        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Nov 12 01:27:03 2023

                     l60 006E                       l53 0148                       u51 001E  
                     u60 00B4                       u61 00B0                       u77 008C  
                     u87 0060                      l801 0070                      l811 0086  
                    l803 0074                      l813 0094                      l751 0144  
                    l743 011E                      l815 0098                      l753 0146  
                    l745 013E                      l809 007C                      l747 0140  
                    l749 0142                      l791 0014                      l793 0026  
                    l795 0036                      l797 0046                      l799 0056  
                    _INT 0008                      wreg 0FE8                     ?_INT 0001  
                   _LATA 0F89                     _LATB 0F8A                     _LATD 0F8C  
                   i2l67 011A                     _Tens 0025                     _main 0070  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 0029                     start 000E             ___param_bank 0000  
                  ??_INT 0001                    ?_main 0001                    i2l781 00F2  
                  i2l783 0100                    i2l785 0102                    i2l787 0104  
                  i2l789 0116                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISD 0F95                    _Units 0026                    main@i 0014  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  ttemp5 002A                    ttemp6 002D                    ttemp7 0031  
                  status 0FD8                    wtemp8 002A          __initialization 00BC  
           __end_of_main 00BC                   ??_main 0013            __activetblptr 0000  
           _Data_Display 0012                   _ADCON1 0FC1    Data_Display@Numbers_2 0004  
                 _INT0IF 7F91                   _OSCCON 0FD3                   i2u3_40 0100  
                 i2u3_41 00FC                   i2u4_40 0116                   i2u4_41 0112  
                 isa$std 0001             __pdataCOMRAM 0016                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 00E6            ___rparam_used 0001           __pcstackCOMRAM 0001  
    Data_Display@Display 000E           _Number_Counter 0028        Data_Display@F3217 0016  
      Data_Display@F3219 0020    __end_of_Configuration 014A                  _Display 0027  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00BC  
                __ramtop 0800                  __ptext0 0070                  __ptext1 0012  
                __ptext2 011E           __pintcode_body 00F0     end_of_initialization 00E6  
                int_func 00F0                  postdec1 0FE5                  postinc0 0FEE  
          __pidataCOMRAM 014A      start_initialization 00BC              __end_of_INT 011E  
            __pbssCOMRAM 0024                __pintcode 0008            ?_Data_Display 0001  
               _RCONbits 0FD0           ??_Data_Display 0002              _INTCON2bits 0FF1  
              copy_data0 00D0            _Configuration 011E                 _Hundreds 0024  
               __Hrparam 0000                 __Lrparam 0000           ?_Configuration 0001  
               isa$xinst 0000                 int$flags 0029               _INTCONbits 0FF2  
          Data_Display@D 0001            Data_Display@N 0012                 intlevel2 0000  
   __end_of_Data_Display 0070          ??_Configuration 0001  
