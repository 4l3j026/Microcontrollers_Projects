

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 29 00:08:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000168                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for Data_Display@F3217
    61   000168  BF                 	db	191
    62   000169  86                 	db	134
    63   00016A  DB                 	db	219
    64   00016B  CF                 	db	207
    65   00016C  E6                 	db	230
    66   00016D  ED                 	db	237
    67   00016E  FD                 	db	253
    68   00016F  87                 	db	135
    69   000170  FF                 	db	255
    70   000171  E7                 	db	231
    71                           
    72                           ;initializer for Data_Display@F3219
    73   000172  01                 	db	1
    74   000173  02                 	db	2
    75   000174  04                 	db	4
    76   000175  08                 	db	8
    77   000000                     _INT0IF	set	32657
    78   000000                     _LATA	set	3977
    79   000000                     _TRISA	set	3986
    80   000000                     _ADCON1	set	4033
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84   000000                     _RCONbits	set	4048
    85   000000                     _TRISD	set	3989
    86   000000                     _TRISB	set	3987
    87   000000                     _LATD	set	3980
    88   000000                     _LATB	set	3978
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000108                     __pcinit:
    94                           	callstack 0
    95   000108                     start_initialization:
    96                           	callstack 0
    97   000108                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (14 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000108  0E68               	movlw	low __pidataCOMRAM
   103   00010A  6EF6               	movwf	tblptrl,c
   104   00010C  0E01               	movlw	high __pidataCOMRAM
   105   00010E  6EF7               	movwf	tblptrh,c
   106   000110  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   000112  6EF8               	movwf	tblptru,c
   108   000114  EE00  F016         	lfsr	0,__pdataCOMRAM
   109   000118  EE10 F00E          	lfsr	1,14
   110   00011C                     copy_data0:
   111   00011C  0009               	tblrd		*+
   112   00011E  CFF5 FFEE          	movff	tablat,postinc0
   113   000122  50E5               	movf	postdec1,w,c
   114   000124  50E1               	movf	fsr1l,w,c
   115   000126  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (5 bytes)
   118   000128  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   119   00012A  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120   00012C  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121   00012E  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122   000130  6A24               	clrf	__pbssCOMRAM& (0+255),c
   123   000132                     end_of_initialization:
   124                           	callstack 0
   125   000132                     __end_of__initialization:
   126                           	callstack 0
   127   000132  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128   000134  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129   000136  0100               	movlb	0
   130   000138  EF38  F000         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000024                     __pbssCOMRAM:
   134                           	callstack 0
   135   000024                     _Hundreds:
   136                           	callstack 0
   137   000024                     	ds	1
   138   000025                     _Tens:
   139                           	callstack 0
   140   000025                     	ds	1
   141   000026                     _Units:
   142                           	callstack 0
   143   000026                     	ds	1
   144   000027                     _Display:
   145                           	callstack 0
   146   000027                     	ds	1
   147   000028                     _Number_Counter:
   148                           	callstack 0
   149   000028                     	ds	1
   150                           
   151                           	psect	dataCOMRAM
   152   000016                     __pdataCOMRAM:
   153                           	callstack 0
   154   000016                     Data_Display@F3217:
   155                           	callstack 0
   156   000016                     	ds	10
   157   000020                     Data_Display@F3219:
   158                           	callstack 0
   159   000020                     	ds	4
   160                           
   161                           	psect	cstackCOMRAM
   162   000001                     __pcstackCOMRAM:
   163                           	callstack 0
   164   000001                     Data_Display@D:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x0
   168   000001                     	ds	1
   169   000002                     ??_Data_Display:
   170                           
   171                           ; 1 bytes @ 0x1
   172   000002                     	ds	2
   173   000004                     Data_Display@Numbers_2:
   174                           	callstack 0
   175                           
   176                           ; 10 bytes @ 0x3
   177   000004                     	ds	10
   178   00000E                     Data_Display@Display:
   179                           	callstack 0
   180                           
   181                           ; 4 bytes @ 0xD
   182   00000E                     	ds	4
   183   000012                     Data_Display@N:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x11
   187   000012                     	ds	1
   188   000013                     ??_main:
   189                           
   190                           ; 1 bytes @ 0x12
   191   000013                     	ds	1
   192   000014                     main@i:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x13
   196   000014                     	ds	2
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 32 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  i               2   19[COMRAM] int 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         2       0       0       0       0       0       0       0       0
   219 ;;      Temps:          1       0       0       0       0       0       0       0       0
   220 ;;      Totals:         3       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        3 bytes
   222 ;; Hardware stack levels required when called: 2
   223 ;; This function calls:
   224 ;;		_Configuration
   225 ;;		_Data_Display
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232   000070                     __ptext0:
   233                           	callstack 0
   234   000070                     _main:
   235                           	callstack 29
   236   000070                     
   237                           ;main.c: 35:     Configuration();
   238   000070  EC9E  F000         	call	_Configuration	;wreg free
   239   000074                     l813:
   240                           
   241                           ;main.c: 50:         for (int i = 0; i < 4; i++) {
   242   000074  0E00               	movlw	0
   243   000076  6E15               	movwf	(main@i+1)^0,c
   244   000078  0E00               	movlw	0
   245   00007A  6E14               	movwf	main@i^0,c
   246   00007C                     l819:
   247                           
   248                           ;main.c: 52:             Data_Display(0, i);
   249   00007C  C014  F001         	movff	main@i,Data_Display@D
   250   000080  0E00               	movlw	0
   251   000082  EC09  F000         	call	_Data_Display
   252   000086                     
   253                           ;main.c: 53:             _delay((unsigned long)((80)*(8000000/4000.0)));
   254   000086  0ED0               	movlw	208
   255   000088  6E13               	movwf	??_main^0,c
   256   00008A  0ECA               	movlw	202
   257   00008C                     u87:
   258   00008C  2EE8               	decfsz	wreg,f,c
   259   00008E  D7FE               	bra	u87
   260   000090  2E13               	decfsz	??_main^0,f,c
   261   000092  D7FC               	bra	u87
   262   000094                     
   263                           ;main.c: 55:         }
   264   000094  4A14               	infsnz	main@i^0,f,c
   265   000096  2A15               	incf	(main@i+1)^0,f,c
   266   000098  BE15               	btfsc	(main@i+1)^0,7,c
   267   00009A  EF58  F000         	goto	u71
   268   00009E  5015               	movf	(main@i+1)^0,w,c
   269   0000A0  E109               	bnz	u70
   270   0000A2  0E04               	movlw	4
   271   0000A4  5C14               	subwf	main@i^0,w,c
   272   0000A6  A0D8               	btfss	status,0,c
   273   0000A8  EF58  F000         	goto	u71
   274   0000AC  EF5A  F000         	goto	u70
   275   0000B0                     u71:
   276   0000B0  EF3E  F000         	goto	l819
   277   0000B4                     u70:
   278   0000B4  EF3A  F000         	goto	l813
   279   0000B8  EF07  F000         	goto	start
   280   0000BC                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _Data_Display *****************
   284 ;; Defined at:
   285 ;;		line 89 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  N               1    wreg     unsigned char 
   288 ;;  D               1    0[COMRAM] unsigned char 
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  N               1   17[COMRAM] unsigned char 
   291 ;;  Numbers_2      10    3[COMRAM] unsigned char [10]
   292 ;;  Display         4   13[COMRAM] unsigned char [4]
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   302 ;;      Params:         1       0       0       0       0       0       0       0       0
   303 ;;      Locals:        15       0       0       0       0       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0       0       0       0       0
   305 ;;      Totals:        18       0       0       0       0       0       0       0       0
   306 ;;Total ram usage:       18 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; Hardware stack levels required when called: 1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317   000012                     __ptext1:
   318                           	callstack 0
   319   000012                     _Data_Display:
   320                           	callstack 29
   321                           
   322                           ;incstack = 0
   323                           ;Data_Display@N stored from wreg
   324   000012  6E12               	movwf	Data_Display@N^0,c
   325   000014                     
   326                           ;main.c: 92:     unsigned char Numbers_2 [10] = {0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xF
      +                          D, 0x87, 0xFF, 0xE7};
   327   000014  EE20  F016         	lfsr	2,Data_Display@F3217
   328   000018  EE10  F004         	lfsr	1,Data_Display@Numbers_2
   329   00001C  0E09               	movlw	9
   330   00001E                     u61:
   331   00001E  CFDB FFE3          	movff	plusw2,plusw1
   332   000022  06E8               	decf	wreg,f,c
   333   000024  E2FC               	bc	u61
   334   000026                     
   335                           ;main.c: 94:     unsigned char Display [4] = {0x01, 0x02, 0x04, 0x08};
   336   000026  C020  F00E         	movff	Data_Display@F3219,Data_Display@Display
   337   00002A  C021  F00F         	movff	Data_Display@F3219+1,Data_Display@Display+1
   338   00002E  C022  F010         	movff	Data_Display@F3219+2,Data_Display@Display+2
   339   000032  C023  F011         	movff	Data_Display@F3219+3,Data_Display@Display+3
   340   000036                     
   341                           ;main.c: 97:     LATD = Numbers_2 [N];
   342   000036  0E04               	movlw	low Data_Display@Numbers_2
   343   000038  2412               	addwf	Data_Display@N^0,w,c
   344   00003A  6ED9               	movwf	fsr2l,c
   345   00003C  6ADA               	clrf	fsr2h,c
   346   00003E  0E00               	movlw	high Data_Display@Numbers_2
   347   000040  22DA               	addwfc	fsr2h,f,c
   348   000042  50DF               	movf	indf2,w,c
   349   000044  6E8C               	movwf	140,c	;volatile
   350   000046                     
   351                           ;main.c: 98:     LATA = Display [D];
   352   000046  0E0E               	movlw	low Data_Display@Display
   353   000048  2401               	addwf	Data_Display@D^0,w,c
   354   00004A  6ED9               	movwf	fsr2l,c
   355   00004C  6ADA               	clrf	fsr2h,c
   356   00004E  0E00               	movlw	high Data_Display@Display
   357   000050  22DA               	addwfc	fsr2h,f,c
   358   000052  50DF               	movf	indf2,w,c
   359   000054  6E89               	movwf	137,c	;volatile
   360   000056                     
   361                           ;main.c: 99:     _delay((unsigned long)((200)*(8000000/4000.0)));
   362   000056  0E03               	movlw	3
   363   000058  6E03               	movwf	(??_Data_Display+1)^0,c
   364   00005A  0E08               	movlw	8
   365   00005C  6E02               	movwf	??_Data_Display^0,c
   366   00005E  0E77               	movlw	119
   367   000060                     u97:
   368   000060  2EE8               	decfsz	wreg,f,c
   369   000062  D7FE               	bra	u97
   370   000064  2E02               	decfsz	??_Data_Display^0,f,c
   371   000066  D7FC               	bra	u97
   372   000068  2E03               	decfsz	(??_Data_Display+1)^0,f,c
   373   00006A  D7FA               	bra	u97
   374   00006C  F000               	nop	
   375   00006E  0012               	return		;funcret
   376   000070                     __end_of_Data_Display:
   377                           	callstack 0
   378                           
   379 ;; *************** function _Configuration *****************
   380 ;; Defined at:
   381 ;;		line 65 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         0       0       0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text2
   410   00013C                     __ptext2:
   411                           	callstack 0
   412   00013C                     _Configuration:
   413                           	callstack 29
   414   00013C                     
   415                           ;main.c: 67:     OSCCON = 0x72;
   416   00013C  0E72               	movlw	114
   417   00013E  6ED3               	movwf	211,c	;volatile
   418                           
   419                           ;main.c: 68:     ADCON1 = 0x0F;
   420   000140  0E0F               	movlw	15
   421   000142  6EC1               	movwf	193,c	;volatile
   422                           
   423                           ;main.c: 70:     TRISA = 0x00;
   424   000144  0E00               	movlw	0
   425   000146  6E92               	movwf	146,c	;volatile
   426                           
   427                           ;main.c: 71:     TRISB = 0x03;
   428   000148  0E03               	movlw	3
   429   00014A  6E93               	movwf	147,c	;volatile
   430                           
   431                           ;main.c: 72:     TRISD = 0x00;
   432   00014C  0E00               	movlw	0
   433   00014E  6E95               	movwf	149,c	;volatile
   434                           
   435                           ;main.c: 74:     LATA = 0x00;
   436   000150  0E00               	movlw	0
   437   000152  6E89               	movwf	137,c	;volatile
   438                           
   439                           ;main.c: 75:     LATB = 0x00;
   440   000154  0E00               	movlw	0
   441   000156  6E8A               	movwf	138,c	;volatile
   442                           
   443                           ;main.c: 76:     LATD = 0x00;
   444   000158  0E00               	movlw	0
   445   00015A  6E8C               	movwf	140,c	;volatile
   446   00015C                     
   447                           ;main.c: 79:     RCONbits.IPEN = 0;
   448   00015C  9ED0               	bcf	208,7,c	;volatile
   449   00015E                     
   450                           ;main.c: 80:     INTCONbits.GIE = 1;
   451   00015E  8EF2               	bsf	242,7,c	;volatile
   452   000160                     
   453                           ;main.c: 81:     INTCONbits.INT0IE = 1;
   454   000160  88F2               	bsf	242,4,c	;volatile
   455   000162                     
   456                           ;main.c: 82:     INTCONbits.INT0IF = 0;
   457   000162  92F2               	bcf	242,1,c	;volatile
   458   000164                     
   459                           ;main.c: 83:     INTCON2bits.INTEDG0 = 0;
   460   000164  9CF1               	bcf	241,6,c	;volatile
   461   000166  0012               	return		;funcret
   462   000168                     __end_of_Configuration:
   463                           	callstack 0
   464                           
   465 ;; *************** function _INT *****************
   466 ;; Defined at:
   467 ;;		line 106 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         0       0       0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used: 1
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		Interrupt level 2
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	intcode
   495   000008                     __pintcode:
   496                           	callstack 0
   497   000008                     _INT:
   498                           	callstack 29
   499                           
   500                           ;incstack = 0
   501   000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   502   00000A  ED5E  F000         	call	int_func,f	;refresh shadow registers
   503                           
   504                           	psect	intcode_body
   505   0000BC                     __pintcode_body:
   506                           	callstack 29
   507   0000BC                     int_func:
   508                           	callstack 29
   509   0000BC  0006               	pop		; remove dummy address from shadow register refresh
   510   0000BE                     
   511                           ;main.c: 108:     if (INT0IF) {
   512   0000BE  A2F2               	btfss	4082,1,c	;volatile
   513   0000C0  EF64  F000         	goto	i2u3_41
   514   0000C4  EF66  F000         	goto	i2u3_40
   515   0000C8                     i2u3_41:
   516   0000C8  EF82  F000         	goto	i2l69
   517   0000CC                     i2u3_40:
   518   0000CC                     
   519                           ;main.c: 110:         INT0IF = 0;
   520   0000CC  92F2               	bcf	4082,1,c	;volatile
   521   0000CE                     
   522                           ;main.c: 111:         Number_Counter++;
   523   0000CE  2A28               	incf	_Number_Counter^0,f,c
   524   0000D0                     
   525                           ;main.c: 112:         if (Number_Counter == 10) {
   526   0000D0  0E0A               	movlw	10
   527   0000D2  1828               	xorwf	_Number_Counter^0,w,c
   528   0000D4  A4D8               	btfss	status,2,c
   529   0000D6  EF6F  F000         	goto	i2u4_41
   530   0000DA  EF71  F000         	goto	i2u4_40
   531   0000DE                     i2u4_41:
   532   0000DE  EF76  F000         	goto	i2l795
   533   0000E2                     i2u4_40:
   534   0000E2                     
   535                           ;main.c: 114:             Number_Counter = 0;
   536   0000E2  0E00               	movlw	0
   537   0000E4  6E28               	movwf	_Number_Counter^0,c
   538   0000E6                     
   539                           ;main.c: 115:             Tens++;
   540   0000E6  2A25               	incf	_Tens^0,f,c
   541                           
   542                           ;main.c: 116:         } else if (Tens == 10) {
   543   0000E8  EF82  F000         	goto	i2l69
   544   0000EC                     i2l795:
   545   0000EC  0E0A               	movlw	10
   546   0000EE  1825               	xorwf	_Tens^0,w,c
   547   0000F0  A4D8               	btfss	status,2,c
   548   0000F2  EF7D  F000         	goto	i2u5_41
   549   0000F6  EF7F  F000         	goto	i2u5_40
   550   0000FA                     i2u5_41:
   551   0000FA  EF82  F000         	goto	i2l69
   552   0000FE                     i2u5_40:
   553   0000FE                     
   554                           ;main.c: 118:             Tens = 0;
   555   0000FE  0E00               	movlw	0
   556   000100  6E25               	movwf	_Tens^0,c
   557   000102                     
   558                           ;main.c: 119:             Hundreds++;
   559   000102  2A24               	incf	_Hundreds^0,f,c
   560   000104                     i2l69:
   561   000104  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   562   000106  0011               	retfie		f
   563   000108                     __end_of_INT:
   564                           	callstack 0
   565   000000                     
   566                           	psect	rparam
   567   000000                     
   568                           	psect	temp
   569   000029                     btemp:
   570                           	callstack 0
   571   000029                     	ds	1
   572   000000                     int$flags	set	btemp
   573   000000                     wtemp8	set	btemp+1
   574   000000                     ttemp5	set	btemp+1
   575   000000                     ttemp6	set	btemp+4
   576   000000                     ttemp7	set	btemp+8
   577                           
   578                           	psect	config
   579                           
   580                           ;Config register CONFIG1L @ 0x300000
   581                           ;	PLL Prescaler Selection bits
   582                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   583                           ;	System Clock Postscaler Selection bits
   584                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   585                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   586                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   587   300000                     	org	3145728
   588   300000  00                 	db	0
   589                           
   590                           ;Config register CONFIG1H @ 0x300001
   591                           ;	Oscillator Selection bits
   592                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   593                           ;	Fail-Safe Clock Monitor Enable bit
   594                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   595                           ;	Internal/External Oscillator Switchover bit
   596                           ;	IESO = OFF, Oscillator Switchover mode disabled
   597   300001                     	org	3145729
   598   300001  05                 	db	5
   599                           
   600                           ;Config register CONFIG2L @ 0x300002
   601                           ;	Power-up Timer Enable bit
   602                           ;	PWRT = OFF, PWRT disabled
   603                           ;	Brown-out Reset Enable bits
   604                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   605                           ;	Brown-out Reset Voltage bits
   606                           ;	BORV = 3, Minimum setting 2.05V
   607                           ;	USB Voltage Regulator Enable bit
   608                           ;	VREGEN = OFF, USB voltage regulator disabled
   609   300002                     	org	3145730
   610   300002  1F                 	db	31
   611                           
   612                           ;Config register CONFIG2H @ 0x300003
   613                           ;	Watchdog Timer Enable bit
   614                           ;	WDT = ON, WDT enabled
   615                           ;	Watchdog Timer Postscale Select bits
   616                           ;	WDTPS = 32768, 1:32768
   617   300003                     	org	3145731
   618   300003  1F                 	db	31
   619                           
   620                           ; Padding undefined space
   621   300004                     	org	3145732
   622   300004  FF                 	db	255
   623                           
   624                           ;Config register CONFIG3H @ 0x300005
   625                           ;	CCP2 MUX bit
   626                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   627                           ;	PORTB A/D Enable bit
   628                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   629                           ;	Low-Power Timer 1 Oscillator Enable bit
   630                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   631                           ;	MCLR Pin Enable bit
   632                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   633   300005                     	org	3145733
   634   300005  83                 	db	131
   635                           
   636                           ;Config register CONFIG4L @ 0x300006
   637                           ;	Stack Full/Underflow Reset Enable bit
   638                           ;	STVREN = ON, Stack full/underflow will cause Reset
   639                           ;	Single-Supply ICSP Enable bit
   640                           ;	LVP = ON, Single-Supply ICSP enabled
   641                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   642                           ;	ICPRT = OFF, ICPORT disabled
   643                           ;	Extended Instruction Set Enable bit
   644                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   645                           ;	Background Debugger Enable bit
   646                           ;	DEBUG = 0x1, unprogrammed default
   647   300006                     	org	3145734
   648   300006  85                 	db	133
   649                           
   650                           ; Padding undefined space
   651   300007                     	org	3145735
   652   300007  FF                 	db	255
   653                           
   654                           ;Config register CONFIG5L @ 0x300008
   655                           ;	Code Protection bit
   656                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   657                           ;	Code Protection bit
   658                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   659                           ;	Code Protection bit
   660                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   661                           ;	Code Protection bit
   662                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   663   300008                     	org	3145736
   664   300008  0F                 	db	15
   665                           
   666                           ;Config register CONFIG5H @ 0x300009
   667                           ;	Boot Block Code Protection bit
   668                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   669                           ;	Data EEPROM Code Protection bit
   670                           ;	CPD = OFF, Data EEPROM is not code-protected
   671   300009                     	org	3145737
   672   300009  C0                 	db	192
   673                           
   674                           ;Config register CONFIG6L @ 0x30000A
   675                           ;	Write Protection bit
   676                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   677                           ;	Write Protection bit
   678                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   679                           ;	Write Protection bit
   680                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   681                           ;	Write Protection bit
   682                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   683   30000A                     	org	3145738
   684   30000A  0F                 	db	15
   685                           
   686                           ;Config register CONFIG6H @ 0x30000B
   687                           ;	Configuration Register Write Protection bit
   688                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   689                           ;	Boot Block Write Protection bit
   690                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   691                           ;	Data EEPROM Write Protection bit
   692                           ;	WRTD = OFF, Data EEPROM is not write-protected
   693   30000B                     	org	3145739
   694   30000B  E0                 	db	224
   695                           
   696                           ;Config register CONFIG7L @ 0x30000C
   697                           ;	Table Read Protection bit
   698                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   699                           ;	Table Read Protection bit
   700                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   701                           ;	Table Read Protection bit
   702                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   703                           ;	Table Read Protection bit
   704                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   705   30000C                     	org	3145740
   706   30000C  0F                 	db	15
   707                           
   708                           ;Config register CONFIG7H @ 0x30000D
   709                           ;	Boot Block Table Read Protection bit
   710                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   711   30000D                     	org	3145741
   712   30000D  40                 	db	64
   713                           tosu	equ	0xFFF
   714                           tosh	equ	0xFFE
   715                           tosl	equ	0xFFD
   716                           stkptr	equ	0xFFC
   717                           pclatu	equ	0xFFB
   718                           pclath	equ	0xFFA
   719                           pcl	equ	0xFF9
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           prodh	equ	0xFF4
   725                           prodl	equ	0xFF3
   726                           indf0	equ	0xFEF
   727                           postinc0	equ	0xFEE
   728                           postdec0	equ	0xFED
   729                           preinc0	equ	0xFEC
   730                           plusw0	equ	0xFEB
   731                           fsr0h	equ	0xFEA
   732                           fsr0l	equ	0xFE9
   733                           wreg	equ	0xFE8
   734                           indf1	equ	0xFE7
   735                           postinc1	equ	0xFE6
   736                           postdec1	equ	0xFE5
   737                           preinc1	equ	0xFE4
   738                           plusw1	equ	0xFE3
   739                           fsr1h	equ	0xFE2
   740                           fsr1l	equ	0xFE1
   741                           bsr	equ	0xFE0
   742                           indf2	equ	0xFDF
   743                           postinc2	equ	0xFDE
   744                           postdec2	equ	0xFDD
   745                           preinc2	equ	0xFDC
   746                           plusw2	equ	0xFDB
   747                           fsr2h	equ	0xFDA
   748                           fsr2l	equ	0xFD9
   749                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Data_Display

Critical Paths under _INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     236
                                             18 COMRAM     3     3      0
                      _Configuration
                       _Data_Display
 ---------------------------------------------------------------------------------
 (1) _Data_Display                                        18    17      1     168
                                              0 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
   _Data_Display

 _INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      28       1       42.6%
BITBIGSFRllhh       2B      0       0      24        0.0%
BITBIGSFRllll       29      0       0      28        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllhh       5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      29        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 29 00:08:07 2023

                     l60 006E                       l53 0166                       u61 001E  
                     u70 00B4                       u71 00B0                       u87 008C  
                     u97 0060                      l801 0014                      l803 0026  
                    l811 0070                      l805 0036                      l821 0086  
                    l813 0074                      l751 0160                      l807 0046  
                    l823 0094                      l753 0162                      l745 013C  
                    l809 0056                      l825 0098                      l755 0164  
                    l747 015C                      l819 007C                      l749 015E  
                    _INT 0008                      wreg 0FE8                     ?_INT 0001  
                   _LATA 0F89                     _LATB 0F8A                     _LATD 0F8C  
                   i2l69 0104                     _Tens 0025                     _main 0070  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 0029                     start 000E             ___param_bank 0000  
                  ??_INT 0001                    ?_main 0001                    i2l791 00E2  
                  i2l783 00BE                    i2l793 00E6                    i2l785 00CC  
                  i2l795 00EC                    i2l787 00CE                    i2l797 00FE  
                  i2l789 00D0                    i2l799 0102                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISD 0F95                    _Units 0026  
                  main@i 0014                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    ttemp5 002A                    ttemp6 002D  
                  ttemp7 0031                    status 0FD8                    wtemp8 002A  
        __initialization 0108             __end_of_main 00BC                   ??_main 0013  
          __activetblptr 0000             _Data_Display 0012                   _ADCON1 0FC1  
  Data_Display@Numbers_2 0004                   _INT0IF 7F91                   _OSCCON 0FD3  
                 i2u3_40 00CC                   i2u3_41 00C8                   i2u4_40 00E2  
                 i2u4_41 00DE                   i2u5_40 00FE                   i2u5_41 00FA  
                 isa$std 0001             __pdataCOMRAM 0016                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0132            ___rparam_used 0001           __pcstackCOMRAM 0001  
    Data_Display@Display 000E           _Number_Counter 0028        Data_Display@F3217 0016  
      Data_Display@F3219 0020    __end_of_Configuration 0168                  _Display 0027  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0108  
                __ramtop 0800                  __ptext0 0070                  __ptext1 0012  
                __ptext2 013C           __pintcode_body 00BC     end_of_initialization 0132  
                int_func 00BC                  postdec1 0FE5                  postinc0 0FEE  
          __pidataCOMRAM 0168      start_initialization 0108              __end_of_INT 0108  
            __pbssCOMRAM 0024                __pintcode 0008            ?_Data_Display 0001  
               _RCONbits 0FD0           ??_Data_Display 0002              _INTCON2bits 0FF1  
              copy_data0 011C            _Configuration 013C                 _Hundreds 0024  
               __Hrparam 0000                 __Lrparam 0000           ?_Configuration 0001  
               isa$xinst 0000                 int$flags 0029               _INTCONbits 0FF2  
          Data_Display@D 0001            Data_Display@N 0012                 intlevel2 0000  
   __end_of_Data_Display 0070          ??_Configuration 0001  
