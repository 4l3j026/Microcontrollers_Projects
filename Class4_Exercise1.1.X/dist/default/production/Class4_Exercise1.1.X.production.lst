

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 24 20:06:58 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   007E8C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _Time
    58   007E8C  0190               	dw	400
    59   000000                     _LATA	set	3977
    60   000000                     _TRISA	set	3986
    61   000000                     _ADCON1	set	4033
    62   000000                     _OSCCON	set	4051
    63   000000                     _TRISE	set	3990
    64   000000                     _TRISD	set	3989
    65   000000                     _TRISC	set	3988
    66   000000                     _TRISB	set	3987
    67   000000                     _LATE	set	3981
    68   000000                     _LATD	set	3980
    69   000000                     _LATC	set	3979
    70   000000                     _LATB	set	3978
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   007E9E                     __pcinit:
    76                           	callstack 0
    77   007E9E                     start_initialization:
    78                           	callstack 0
    79   007E9E                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (2 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84   007E9E  0E8C               	movlw	low __pidataCOMRAM
    85   007EA0  6EF6               	movwf	tblptrl,c
    86   007EA2  0E7E               	movlw	high __pidataCOMRAM
    87   007EA4  6EF7               	movwf	tblptrh,c
    88   007EA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89   007EA8  6EF8               	movwf	tblptru,c
    90   007EAA  0009               	tblrd		*+	;fetch initializer
    91   007EAC  CFF5 F001          	movff	tablat,__pdataCOMRAM
    92   007EB0  0009               	tblrd		*+	;fetch initializer
    93   007EB2  CFF5 F002          	movff	tablat,__pdataCOMRAM+1
    94   007EB6                     end_of_initialization:
    95                           	callstack 0
    96   007EB6                     __end_of__initialization:
    97                           	callstack 0
    98   007EB6  0100               	movlb	0
    99   007EB8  EF47  F03F         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	dataCOMRAM
   102   000001                     __pdataCOMRAM:
   103                           	callstack 0
   104   000001                     _Time:
   105                           	callstack 0
   106   000001                     	ds	2
   107                           
   108                           	psect	cstackCOMRAM
   109   000003                     __pcstackCOMRAM:
   110                           	callstack 0
   111   000003                     ??_Exercise:
   112   000003                     
   113                           ; 1 bytes @ 0x0
   114   000003                     	ds	2
   115   000005                     
   116                           ; 1 bytes @ 0x2
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 34 in file "main.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;		None
   125 ;; Auto vars:     Size  Location     Type
   126 ;;		None
   127 ;; Return value:  Size  Location     Type
   128 ;;                  1    wreg      void 
   129 ;; Registers used:
   130 ;;		wreg, status,2, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   136 ;;      Params:         0       0       0       0       0       0       0       0       0
   137 ;;      Locals:         0       0       0       0       0       0       0       0       0
   138 ;;      Temps:          0       0       0       0       0       0       0       0       0
   139 ;;      Totals:         0       0       0       0       0       0       0       0       0
   140 ;;Total ram usage:        0 bytes
   141 ;; Hardware stack levels required when called: 1
   142 ;; This function calls:
   143 ;;		_Exercise
   144 ;;		_Settings
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151   007E8E                     __ptext0:
   152                           	callstack 0
   153   007E8E                     _main:
   154                           	callstack 30
   155   007E8E                     
   156                           ;main.c: 36:     Settings();
   157   007E8E  EC5E  F03F         	call	_Settings	;wreg free
   158   007E92                     l37:
   159                           
   160                           ;main.c: 39:         Exercise();
   161   007E92  EC77  F03F         	call	_Exercise	;wreg free
   162   007E96  EF49  F03F         	goto	l37
   163   007E9A  EF00  F000         	goto	start
   164   007E9E                     __end_of_main:
   165                           	callstack 0
   166                           
   167 ;; *************** function _Settings *****************
   168 ;; Defined at:
   169 ;;		line 45 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   183 ;;      Params:         0       0       0       0       0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0       0       0
   185 ;;      Temps:          0       0       0       0       0       0       0       0       0
   186 ;;      Totals:         0       0       0       0       0       0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels used: 1
   189 ;; This function calls:
   190 ;;		Nothing
   191 ;; This function is called by:
   192 ;;		_main
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text1
   197   007EBC                     __ptext1:
   198                           	callstack 0
   199   007EBC                     _Settings:
   200                           	callstack 30
   201   007EBC                     
   202                           ;main.c: 48:     OSCCON = 0x72;
   203   007EBC  0E72               	movlw	114
   204   007EBE  6ED3               	movwf	211,c	;volatile
   205                           
   206                           ;main.c: 49:     ADCON1 = 0x0F;
   207   007EC0  0E0F               	movlw	15
   208   007EC2  6EC1               	movwf	193,c	;volatile
   209                           
   210                           ;main.c: 52:     TRISA = 0;
   211   007EC4  0E00               	movlw	0
   212   007EC6  6E92               	movwf	146,c	;volatile
   213                           
   214                           ;main.c: 53:     TRISB = 0;
   215   007EC8  0E00               	movlw	0
   216   007ECA  6E93               	movwf	147,c	;volatile
   217                           
   218                           ;main.c: 54:     TRISC = 0;
   219   007ECC  0E00               	movlw	0
   220   007ECE  6E94               	movwf	148,c	;volatile
   221                           
   222                           ;main.c: 55:     TRISD = 0;
   223   007ED0  0E00               	movlw	0
   224   007ED2  6E95               	movwf	149,c	;volatile
   225                           
   226                           ;main.c: 56:     TRISE = 0;
   227   007ED4  0E00               	movlw	0
   228   007ED6  6E96               	movwf	150,c	;volatile
   229                           
   230                           ;main.c: 59:     LATA = 0;
   231   007ED8  0E00               	movlw	0
   232   007EDA  6E89               	movwf	137,c	;volatile
   233                           
   234                           ;main.c: 60:     LATB = 0;
   235   007EDC  0E00               	movlw	0
   236   007EDE  6E8A               	movwf	138,c	;volatile
   237                           
   238                           ;main.c: 61:     LATC = 0;
   239   007EE0  0E00               	movlw	0
   240   007EE2  6E8B               	movwf	139,c	;volatile
   241                           
   242                           ;main.c: 62:     LATD = 0;
   243   007EE4  0E00               	movlw	0
   244   007EE6  6E8C               	movwf	140,c	;volatile
   245                           
   246                           ;main.c: 63:     LATE = 0;
   247   007EE8  0E00               	movlw	0
   248   007EEA  6E8D               	movwf	141,c	;volatile
   249   007EEC  0012               	return		;funcret
   250   007EEE                     __end_of_Settings:
   251                           	callstack 0
   252                           
   253 ;; *************** function _Exercise *****************
   254 ;; Defined at:
   255 ;;		line 69 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          2       0       0       0       0       0       0       0       0
   272 ;;      Totals:         2       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        2 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text2
   283   007EEE                     __ptext2:
   284                           	callstack 0
   285   007EEE                     _Exercise:
   286                           	callstack 30
   287   007EEE                     
   288                           ;main.c: 71:     LATA = 0xFF;
   289   007EEE  6889               	setf	137,c	;volatile
   290   007EF0                     
   291                           ;main.c: 72:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   292   007EF0  0E05               	movlw	5
   293   007EF2  6E04               	movwf	(??_Exercise+1)^0,c
   294   007EF4  0E0F               	movlw	15
   295   007EF6  6E03               	movwf	??_Exercise^0,c
   296   007EF8  0EF1               	movlw	241
   297   007EFA                     u377:
   298   007EFA  2EE8               	decfsz	wreg,f,c
   299   007EFC  D7FE               	bra	u377
   300   007EFE  2E03               	decfsz	??_Exercise^0,f,c
   301   007F00  D7FC               	bra	u377
   302   007F02  2E04               	decfsz	(??_Exercise+1)^0,f,c
   303   007F04  D7FA               	bra	u377
   304   007F06  F000               	nop	
   305   007F08                     
   306                           ;main.c: 73:     LATA = 0x00;
   307   007F08  0E00               	movlw	0
   308   007F0A  6E89               	movwf	137,c	;volatile
   309   007F0C                     
   310                           ;main.c: 74:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   311   007F0C  0E05               	movlw	5
   312   007F0E  6E04               	movwf	(??_Exercise+1)^0,c
   313   007F10  0E0F               	movlw	15
   314   007F12  6E03               	movwf	??_Exercise^0,c
   315   007F14  0EF1               	movlw	241
   316   007F16                     u387:
   317   007F16  2EE8               	decfsz	wreg,f,c
   318   007F18  D7FE               	bra	u387
   319   007F1A  2E03               	decfsz	??_Exercise^0,f,c
   320   007F1C  D7FC               	bra	u387
   321   007F1E  2E04               	decfsz	(??_Exercise+1)^0,f,c
   322   007F20  D7FA               	bra	u387
   323   007F22  F000               	nop	
   324   007F24                     
   325                           ;main.c: 75:     LATB = 0xFF;
   326   007F24  688A               	setf	138,c	;volatile
   327   007F26                     
   328                           ;main.c: 76:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   329   007F26  0E05               	movlw	5
   330   007F28  6E04               	movwf	(??_Exercise+1)^0,c
   331   007F2A  0E0F               	movlw	15
   332   007F2C  6E03               	movwf	??_Exercise^0,c
   333   007F2E  0EF1               	movlw	241
   334   007F30                     u397:
   335   007F30  2EE8               	decfsz	wreg,f,c
   336   007F32  D7FE               	bra	u397
   337   007F34  2E03               	decfsz	??_Exercise^0,f,c
   338   007F36  D7FC               	bra	u397
   339   007F38  2E04               	decfsz	(??_Exercise+1)^0,f,c
   340   007F3A  D7FA               	bra	u397
   341   007F3C  F000               	nop	
   342   007F3E                     
   343                           ;main.c: 77:     LATB = 0x00;
   344   007F3E  0E00               	movlw	0
   345   007F40  6E8A               	movwf	138,c	;volatile
   346                           
   347                           ;main.c: 78:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   348   007F42  0E05               	movlw	5
   349   007F44  6E04               	movwf	(??_Exercise+1)^0,c
   350   007F46  0E0F               	movlw	15
   351   007F48  6E03               	movwf	??_Exercise^0,c
   352   007F4A  0EF1               	movlw	241
   353   007F4C                     u407:
   354   007F4C  2EE8               	decfsz	wreg,f,c
   355   007F4E  D7FE               	bra	u407
   356   007F50  2E03               	decfsz	??_Exercise^0,f,c
   357   007F52  D7FC               	bra	u407
   358   007F54  2E04               	decfsz	(??_Exercise+1)^0,f,c
   359   007F56  D7FA               	bra	u407
   360   007F58  F000               	nop	
   361   007F5A                     
   362                           ;main.c: 79:     LATC = 0xFF;
   363   007F5A  688B               	setf	139,c	;volatile
   364                           
   365                           ;main.c: 80:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   366   007F5C  0E05               	movlw	5
   367   007F5E  6E04               	movwf	(??_Exercise+1)^0,c
   368   007F60  0E0F               	movlw	15
   369   007F62  6E03               	movwf	??_Exercise^0,c
   370   007F64  0EF1               	movlw	241
   371   007F66                     u417:
   372   007F66  2EE8               	decfsz	wreg,f,c
   373   007F68  D7FE               	bra	u417
   374   007F6A  2E03               	decfsz	??_Exercise^0,f,c
   375   007F6C  D7FC               	bra	u417
   376   007F6E  2E04               	decfsz	(??_Exercise+1)^0,f,c
   377   007F70  D7FA               	bra	u417
   378   007F72  F000               	nop	
   379   007F74                     
   380                           ;main.c: 81:     LATC = 0x00;
   381   007F74  0E00               	movlw	0
   382   007F76  6E8B               	movwf	139,c	;volatile
   383   007F78                     
   384                           ;main.c: 82:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   385   007F78  0E05               	movlw	5
   386   007F7A  6E04               	movwf	(??_Exercise+1)^0,c
   387   007F7C  0E0F               	movlw	15
   388   007F7E  6E03               	movwf	??_Exercise^0,c
   389   007F80  0EF1               	movlw	241
   390   007F82                     u427:
   391   007F82  2EE8               	decfsz	wreg,f,c
   392   007F84  D7FE               	bra	u427
   393   007F86  2E03               	decfsz	??_Exercise^0,f,c
   394   007F88  D7FC               	bra	u427
   395   007F8A  2E04               	decfsz	(??_Exercise+1)^0,f,c
   396   007F8C  D7FA               	bra	u427
   397   007F8E  F000               	nop	
   398   007F90                     
   399                           ;main.c: 83:     LATD = 0xFF;
   400   007F90  688C               	setf	140,c	;volatile
   401   007F92                     
   402                           ;main.c: 84:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   403   007F92  0E05               	movlw	5
   404   007F94  6E04               	movwf	(??_Exercise+1)^0,c
   405   007F96  0E0F               	movlw	15
   406   007F98  6E03               	movwf	??_Exercise^0,c
   407   007F9A  0EF1               	movlw	241
   408   007F9C                     u437:
   409   007F9C  2EE8               	decfsz	wreg,f,c
   410   007F9E  D7FE               	bra	u437
   411   007FA0  2E03               	decfsz	??_Exercise^0,f,c
   412   007FA2  D7FC               	bra	u437
   413   007FA4  2E04               	decfsz	(??_Exercise+1)^0,f,c
   414   007FA6  D7FA               	bra	u437
   415   007FA8  F000               	nop	
   416   007FAA                     
   417                           ;main.c: 85:     LATD = 0x00;
   418   007FAA  0E00               	movlw	0
   419   007FAC  6E8C               	movwf	140,c	;volatile
   420                           
   421                           ;main.c: 86:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   422   007FAE  0E05               	movlw	5
   423   007FB0  6E04               	movwf	(??_Exercise+1)^0,c
   424   007FB2  0E0F               	movlw	15
   425   007FB4  6E03               	movwf	??_Exercise^0,c
   426   007FB6  0EF1               	movlw	241
   427   007FB8                     u447:
   428   007FB8  2EE8               	decfsz	wreg,f,c
   429   007FBA  D7FE               	bra	u447
   430   007FBC  2E03               	decfsz	??_Exercise^0,f,c
   431   007FBE  D7FC               	bra	u447
   432   007FC0  2E04               	decfsz	(??_Exercise+1)^0,f,c
   433   007FC2  D7FA               	bra	u447
   434   007FC4  F000               	nop	
   435   007FC6                     
   436                           ;main.c: 87:     LATE = 0xF;
   437   007FC6  0E0F               	movlw	15
   438   007FC8  6E8D               	movwf	141,c	;volatile
   439   007FCA                     
   440                           ;main.c: 88:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   441   007FCA  0E05               	movlw	5
   442   007FCC  6E04               	movwf	(??_Exercise+1)^0,c
   443   007FCE  0E0F               	movlw	15
   444   007FD0  6E03               	movwf	??_Exercise^0,c
   445   007FD2  0EF1               	movlw	241
   446   007FD4                     u457:
   447   007FD4  2EE8               	decfsz	wreg,f,c
   448   007FD6  D7FE               	bra	u457
   449   007FD8  2E03               	decfsz	??_Exercise^0,f,c
   450   007FDA  D7FC               	bra	u457
   451   007FDC  2E04               	decfsz	(??_Exercise+1)^0,f,c
   452   007FDE  D7FA               	bra	u457
   453   007FE0  F000               	nop	
   454                           
   455                           ;main.c: 89:     LATE = 0x0;
   456   007FE2  0E00               	movlw	0
   457   007FE4  6E8D               	movwf	141,c	;volatile
   458   007FE6                     
   459                           ;main.c: 90:     _delay((unsigned long)((Time)*(8000000/4000.0)));
   460   007FE6  0E05               	movlw	5
   461   007FE8  6E04               	movwf	(??_Exercise+1)^0,c
   462   007FEA  0E0F               	movlw	15
   463   007FEC  6E03               	movwf	??_Exercise^0,c
   464   007FEE  0EF1               	movlw	241
   465   007FF0                     u467:
   466   007FF0  2EE8               	decfsz	wreg,f,c
   467   007FF2  D7FE               	bra	u467
   468   007FF4  2E03               	decfsz	??_Exercise^0,f,c
   469   007FF6  D7FC               	bra	u467
   470   007FF8  2E04               	decfsz	(??_Exercise+1)^0,f,c
   471   007FFA  D7FA               	bra	u467
   472   007FFC  F000               	nop	
   473   007FFE  0012               	return		;funcret
   474   008000                     __end_of_Exercise:
   475                           	callstack 0
   476   000000                     
   477                           	psect	rparam
   478   000000                     
   479                           	psect	idloc
   480                           
   481                           ;Config register IDLOC0 @ 0x200000
   482                           ;	unspecified, using default values
   483   200000                     	org	2097152
   484   200000  FF                 	db	255
   485                           
   486                           ;Config register IDLOC1 @ 0x200001
   487                           ;	unspecified, using default values
   488   200001                     	org	2097153
   489   200001  FF                 	db	255
   490                           
   491                           ;Config register IDLOC2 @ 0x200002
   492                           ;	unspecified, using default values
   493   200002                     	org	2097154
   494   200002  FF                 	db	255
   495                           
   496                           ;Config register IDLOC3 @ 0x200003
   497                           ;	unspecified, using default values
   498   200003                     	org	2097155
   499   200003  FF                 	db	255
   500                           
   501                           ;Config register IDLOC4 @ 0x200004
   502                           ;	unspecified, using default values
   503   200004                     	org	2097156
   504   200004  FF                 	db	255
   505                           
   506                           ;Config register IDLOC5 @ 0x200005
   507                           ;	unspecified, using default values
   508   200005                     	org	2097157
   509   200005  FF                 	db	255
   510                           
   511                           ;Config register IDLOC6 @ 0x200006
   512                           ;	unspecified, using default values
   513   200006                     	org	2097158
   514   200006  FF                 	db	255
   515                           
   516                           ;Config register IDLOC7 @ 0x200007
   517                           ;	unspecified, using default values
   518   200007                     	org	2097159
   519   200007  FF                 	db	255
   520                           
   521                           	psect	config
   522                           
   523                           ;Config register CONFIG1L @ 0x300000
   524                           ;	PLL Prescaler Selection bits
   525                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   526                           ;	System Clock Postscaler Selection bits
   527                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   528                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   529                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   530   300000                     	org	3145728
   531   300000  00                 	db	0
   532                           
   533                           ;Config register CONFIG1H @ 0x300001
   534                           ;	Oscillator Selection bits
   535                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   536                           ;	Fail-Safe Clock Monitor Enable bit
   537                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   538                           ;	Internal/External Oscillator Switchover bit
   539                           ;	IESO = OFF, Oscillator Switchover mode disabled
   540   300001                     	org	3145729
   541   300001  08                 	db	8
   542                           
   543                           ;Config register CONFIG2L @ 0x300002
   544                           ;	Power-up Timer Enable bit
   545                           ;	PWRT = OFF, PWRT disabled
   546                           ;	Brown-out Reset Enable bits
   547                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   548                           ;	Brown-out Reset Voltage bits
   549                           ;	BORV = 3, Minimum setting 2.05V
   550                           ;	USB Voltage Regulator Enable bit
   551                           ;	VREGEN = OFF, USB voltage regulator disabled
   552   300002                     	org	3145730
   553   300002  1F                 	db	31
   554                           
   555                           ;Config register CONFIG2H @ 0x300003
   556                           ;	Watchdog Timer Enable bit
   557                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   558                           ;	Watchdog Timer Postscale Select bits
   559                           ;	WDTPS = 32768, 1:32768
   560   300003                     	org	3145731
   561   300003  1E                 	db	30
   562                           
   563                           ; Padding undefined space
   564   300004                     	org	3145732
   565   300004  FF                 	db	255
   566                           
   567                           ;Config register CONFIG3H @ 0x300005
   568                           ;	CCP2 MUX bit
   569                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   570                           ;	PORTB A/D Enable bit
   571                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   572                           ;	Low-Power Timer 1 Oscillator Enable bit
   573                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   574                           ;	MCLR Pin Enable bit
   575                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   576   300005                     	org	3145733
   577   300005  83                 	db	131
   578                           
   579                           ;Config register CONFIG4L @ 0x300006
   580                           ;	Stack Full/Underflow Reset Enable bit
   581                           ;	STVREN = ON, Stack full/underflow will cause Reset
   582                           ;	Single-Supply ICSP Enable bit
   583                           ;	LVP = OFF, Single-Supply ICSP disabled
   584                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   585                           ;	ICPRT = OFF, ICPORT disabled
   586                           ;	Extended Instruction Set Enable bit
   587                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   588                           ;	Background Debugger Enable bit
   589                           ;	DEBUG = 0x1, unprogrammed default
   590   300006                     	org	3145734
   591   300006  81                 	db	129
   592                           
   593                           ; Padding undefined space
   594   300007                     	org	3145735
   595   300007  FF                 	db	255
   596                           
   597                           ;Config register CONFIG5L @ 0x300008
   598                           ;	Code Protection bit
   599                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   600                           ;	Code Protection bit
   601                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   602                           ;	Code Protection bit
   603                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   604                           ;	Code Protection bit
   605                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   606   300008                     	org	3145736
   607   300008  0F                 	db	15
   608                           
   609                           ;Config register CONFIG5H @ 0x300009
   610                           ;	Boot Block Code Protection bit
   611                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   612                           ;	Data EEPROM Code Protection bit
   613                           ;	CPD = OFF, Data EEPROM is not code-protected
   614   300009                     	org	3145737
   615   300009  C0                 	db	192
   616                           
   617                           ;Config register CONFIG6L @ 0x30000A
   618                           ;	Write Protection bit
   619                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   620                           ;	Write Protection bit
   621                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   622                           ;	Write Protection bit
   623                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   624                           ;	Write Protection bit
   625                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   626   30000A                     	org	3145738
   627   30000A  0F                 	db	15
   628                           
   629                           ;Config register CONFIG6H @ 0x30000B
   630                           ;	Configuration Register Write Protection bit
   631                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   632                           ;	Boot Block Write Protection bit
   633                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   634                           ;	Data EEPROM Write Protection bit
   635                           ;	WRTD = OFF, Data EEPROM is not write-protected
   636   30000B                     	org	3145739
   637   30000B  E0                 	db	224
   638                           
   639                           ;Config register CONFIG7L @ 0x30000C
   640                           ;	Table Read Protection bit
   641                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   642                           ;	Table Read Protection bit
   643                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   644                           ;	Table Read Protection bit
   645                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   646                           ;	Table Read Protection bit
   647                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   648   30000C                     	org	3145740
   649   30000C  0F                 	db	15
   650                           
   651                           ;Config register CONFIG7H @ 0x30000D
   652                           ;	Boot Block Table Read Protection bit
   653                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   654   30000D                     	org	3145741
   655   30000D  40                 	db	64
   656                           tosu	equ	0xFFF
   657                           tosh	equ	0xFFE
   658                           tosl	equ	0xFFD
   659                           stkptr	equ	0xFFC
   660                           pclatu	equ	0xFFB
   661                           pclath	equ	0xFFA
   662                           pcl	equ	0xFF9
   663                           tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           prodh	equ	0xFF4
   668                           prodl	equ	0xFF3
   669                           indf0	equ	0xFEF
   670                           postinc0	equ	0xFEE
   671                           postdec0	equ	0xFED
   672                           preinc0	equ	0xFEC
   673                           plusw0	equ	0xFEB
   674                           fsr0h	equ	0xFEA
   675                           fsr0l	equ	0xFE9
   676                           wreg	equ	0xFE8
   677                           indf1	equ	0xFE7
   678                           postinc1	equ	0xFE6
   679                           postdec1	equ	0xFE5
   680                           preinc1	equ	0xFE4
   681                           plusw1	equ	0xFE3
   682                           fsr1h	equ	0xFE2
   683                           fsr1l	equ	0xFE1
   684                           bsr	equ	0xFE0
   685                           indf2	equ	0xFDF
   686                           postinc2	equ	0xFDE
   687                           postdec2	equ	0xFDD
   688                           preinc2	equ	0xFDC
   689                           plusw2	equ	0xFDB
   690                           fsr2h	equ	0xFDA
   691                           fsr2l	equ	0xFD9
   692                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Exercise

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Exercise
                           _Settings
 ---------------------------------------------------------------------------------
 (1) _Settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Exercise                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Exercise
   _Settings

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       4       1        4.2%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRllh        2A      0       0      23        0.0%
BITBIGSFRllll       29      0       0      25        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BITBIGSFRlllh        4      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4       3        0.0%
DATA                 0      0       4       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 24 20:06:58 2023

                     l43 7EEC                       l37 7E92                       l46 7FFE  
                    l730 7F0C                      l722 7EBC                      l740 7F74  
                    l732 7F24                      l724 7EEE                      l750 7FC6  
                    l742 7F78                      l734 7F26                      l726 7EF0  
                    l752 7FCA                      l744 7F90                      l736 7F3E  
                    l728 7F08                      l754 7FE6                      l746 7F92  
                    l738 7F5A                      l748 7FAA                      l756 7E8E  
                    u407 7F4C                      u417 7F66                      u427 7F82  
                    u437 7F9C                      u447 7FB8                      u457 7FD4  
                    u377 7EFA                      u467 7FF0                      u387 7F16  
                    u397 7F30                      wreg 0FE8                     _LATA 0F89  
                   _LATB 0F8A                     _LATC 0F8B                     _LATD 0F8C  
                   _LATE 0F8D                     _Time 0001                     _main 7E8E  
                   start 0000             ___param_bank 0000                    ?_main 0003  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95                    _TRISE 0F96                    tablat 0FF5  
        __initialization 7E9E             __end_of_main 7E9E         __end_of_Exercise 8000  
                 ??_main 0005            __activetblptr 0000         __end_of_Settings 7EEE  
                 _ADCON1 0FC1                   _OSCCON 0FD3                   isa$std 0001  
           __pdataCOMRAM 0001                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 7EB6  
          ___rparam_used 0001           __pcstackCOMRAM 0003                ?_Exercise 0003  
              ?_Settings 0003               ??_Exercise 0003                  __Hparam 0000  
                __Lparam 0000               ??_Settings 0003                  __pcinit 7E9E  
                __ramtop 0800                  __ptext0 7E8E                  __ptext1 7EBC  
                __ptext2 7EEE     end_of_initialization 7EB6            __pidataCOMRAM 7E8C  
    start_initialization 7E9E                 _Exercise 7EEE                 __Hrparam 0000  
               __Lrparam 0000                 _Settings 7EBC                 isa$xinst 0000  
