

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jan 27 14:29:18 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 09/02/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F46K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _TXSTA1bits	set	4012
    53   000000                     _ANSELCbits	set	3898
    54   000000                     _OSCCON	set	4051
    55   000000                     _LATCbits	set	3979
    56   000000                     _TRISCbits	set	3988
    57   000000                     _ANSELD	set	3899
    58   000000                     _RCSTA1bits	set	4011
    59   000000                     _TRISD	set	3989
    60   000000                     _BRGH1	set	32098
    61   000000                     _LATD	set	3980
    62   000000                     _SPBRG1	set	4015
    63   000000                     _BRG161	set	32195
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   00013E                     __pcinit:
    69                           	callstack 0
    70   00013E                     start_initialization:
    71                           	callstack 0
    72   00013E                     __initialization:
    73                           	callstack 0
    74   00013E                     end_of_initialization:
    75                           	callstack 0
    76   00013E                     __end_of__initialization:
    77                           	callstack 0
    78   00013E  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79   000140  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80   000142  0100               	movlb	0
    81   000144  EF97  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	cstackCOMRAM
    84   000001                     __pcstackCOMRAM:
    85                           	callstack 0
    86   000001                     ??_LCD_Data_Instruction:
    87   000001                     
    88                           ; 1 bytes @ 0x0
    89   000001                     	ds	1
    90   000002                     LCD_Data_Instruction@Data:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x1
    94   000002                     	ds	1
    95   000003                     LCD_Set_Write@Command:
    96                           	callstack 0
    97                           
    98                           ; 1 bytes @ 0x2
    99   000003                     	ds	1
   100   000004                     LCD_Set_Write@WR_SE:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x3
   104   000004                     	ds	1
   105   000005                     ??_LCD_Init:
   106                           
   107                           ; 1 bytes @ 0x4
   108   000005                     	ds	1
   109   000006                     
   110                           ; 1 bytes @ 0x5
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 35 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   134 ;;Total ram usage:        0 bytes
   135 ;; Hardware stack levels required when called: 4
   136 ;; This function calls:
   137 ;;		_Configurations
   138 ;;		_LCD_Init
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145   00012E                     __ptext0:
   146                           	callstack 0
   147   00012E                     _main:
   148                           	callstack 27
   149   00012E                     
   150                           ;main.c: 38:     Configurations();
   151   00012E  EC70  F000         	call	_Configurations	;wreg free
   152   000132                     
   153                           ;main.c: 39:     LCD_Init();
   154   000132  EC09  F000         	call	_LCD_Init	;wreg free
   155   000136                     l39:
   156   000136  EF9B  F000         	goto	l39
   157   00013A  EF07  F000         	goto	start
   158   00013E                     __end_of_main:
   159                           	callstack 0
   160                           
   161 ;; *************** function _LCD_Init *****************
   162 ;; Defined at:
   163 ;;		line 87 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;Total ram usage:        1 bytes
   182 ;; Hardware stack levels used: 1
   183 ;; Hardware stack levels required when called: 3
   184 ;; This function calls:
   185 ;;		_LCD_Set_Write
   186 ;; This function is called by:
   187 ;;		_main
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text1
   192   000012                     __ptext1:
   193                           	callstack 0
   194   000012                     _LCD_Init:
   195                           	callstack 27
   196   000012                     
   197                           ;main.c: 89:     _delay((unsigned long)((20)*(16000000/4000.0)));
   198   000012  0E68               	movlw	104
   199   000014  6E05               	movwf	??_LCD_Init^0,c
   200   000016  0EE4               	movlw	228
   201   000018                     u37:
   202   000018  2EE8               	decfsz	wreg,f,c
   203   00001A  D7FE               	bra	u37
   204   00001C  2E05               	decfsz	??_LCD_Init^0,f,c
   205   00001E  D7FC               	bra	u37
   206   000020  D000               	nop2	
   207   000022                     
   208                           ;main.c: 90:     LCD_Set_Write(0, 0x30);
   209   000022  0E30               	movlw	48
   210   000024  6E03               	movwf	LCD_Set_Write@Command^0,c
   211   000026  0E00               	movlw	0
   212   000028  EC89  F000         	call	_LCD_Set_Write
   213   00002C                     
   214                           ;main.c: 91:     _delay((unsigned long)((5)*(16000000/4000.0)));
   215   00002C  0E1A               	movlw	26
   216   00002E  6E05               	movwf	??_LCD_Init^0,c
   217   000030  0EF8               	movlw	248
   218   000032                     u47:
   219   000032  2EE8               	decfsz	wreg,f,c
   220   000034  D7FE               	bra	u47
   221   000036  2E05               	decfsz	??_LCD_Init^0,f,c
   222   000038  D7FC               	bra	u47
   223   00003A  D000               	nop2	
   224                           
   225                           ;main.c: 92:     LCD_Set_Write(0, 0x30);
   226   00003C  0E30               	movlw	48
   227   00003E  6E03               	movwf	LCD_Set_Write@Command^0,c
   228   000040  0E00               	movlw	0
   229   000042  EC89  F000         	call	_LCD_Set_Write
   230   000046                     
   231                           ;main.c: 93:     _delay((unsigned long)((5)*(16000000/4000.0)));
   232   000046  0E1A               	movlw	26
   233   000048  6E05               	movwf	??_LCD_Init^0,c
   234   00004A  0EF8               	movlw	248
   235   00004C                     u57:
   236   00004C  2EE8               	decfsz	wreg,f,c
   237   00004E  D7FE               	bra	u57
   238   000050  2E05               	decfsz	??_LCD_Init^0,f,c
   239   000052  D7FC               	bra	u57
   240   000054  D000               	nop2	
   241   000056                     
   242                           ;main.c: 94:     LCD_Set_Write(0, 0x30);
   243   000056  0E30               	movlw	48
   244   000058  6E03               	movwf	LCD_Set_Write@Command^0,c
   245   00005A  0E00               	movlw	0
   246   00005C  EC89  F000         	call	_LCD_Set_Write
   247   000060                     
   248                           ;main.c: 95:     LCD_Set_Write(0, 0x02);
   249   000060  0E02               	movlw	2
   250   000062  6E03               	movwf	LCD_Set_Write@Command^0,c
   251   000064  0E00               	movlw	0
   252   000066  EC89  F000         	call	_LCD_Set_Write
   253   00006A                     
   254                           ;main.c: 96:     LCD_Set_Write(0, 0x06);
   255   00006A  0E06               	movlw	6
   256   00006C  6E03               	movwf	LCD_Set_Write@Command^0,c
   257   00006E  0E00               	movlw	0
   258   000070  EC89  F000         	call	_LCD_Set_Write
   259   000074                     
   260                           ;main.c: 97:     LCD_Set_Write(0, 0x0F);
   261   000074  0E0F               	movlw	15
   262   000076  6E03               	movwf	LCD_Set_Write@Command^0,c
   263   000078  0E00               	movlw	0
   264   00007A  EC89  F000         	call	_LCD_Set_Write
   265   00007E                     
   266                           ;main.c: 98:     LCD_Set_Write(0, 0x28);
   267   00007E  0E28               	movlw	40
   268   000080  6E03               	movwf	LCD_Set_Write@Command^0,c
   269   000082  0E00               	movlw	0
   270   000084  EC89  F000         	call	_LCD_Set_Write
   271   000088                     
   272                           ;main.c: 99:     LCD_Set_Write(0, 0x01);
   273   000088  0E01               	movlw	1
   274   00008A  6E03               	movwf	LCD_Set_Write@Command^0,c
   275   00008C  0E00               	movlw	0
   276   00008E  EC89  F000         	call	_LCD_Set_Write
   277   000092                     
   278                           ;main.c: 100:     _delay((unsigned long)((5)*(16000000/4000.0)));
   279   000092  0E1A               	movlw	26
   280   000094  6E05               	movwf	??_LCD_Init^0,c
   281   000096  0EF8               	movlw	248
   282   000098                     u67:
   283   000098  2EE8               	decfsz	wreg,f,c
   284   00009A  D7FE               	bra	u67
   285   00009C  2E05               	decfsz	??_LCD_Init^0,f,c
   286   00009E  D7FC               	bra	u67
   287   0000A0  D000               	nop2	
   288   0000A2  0012               	return		;funcret
   289   0000A4                     __end_of_LCD_Init:
   290                           	callstack 0
   291                           
   292 ;; *************** function _LCD_Set_Write *****************
   293 ;; Defined at:
   294 ;;		line 106 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  WR_SE           1    wreg     unsigned char 
   297 ;;  Command         1    2[COMRAM] unsigned char 
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  WR_SE           1    3[COMRAM] unsigned char 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;Total ram usage:        2 bytes
   314 ;; Hardware stack levels used: 1
   315 ;; Hardware stack levels required when called: 2
   316 ;; This function calls:
   317 ;;		_LCD_Data_Instruction
   318 ;; This function is called by:
   319 ;;		_LCD_Init
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text2
   324   000112                     __ptext2:
   325                           	callstack 0
   326   000112                     _LCD_Set_Write:
   327                           	callstack 27
   328                           
   329                           ;incstack = 0
   330                           ;LCD_Set_Write@WR_SE stored from wreg
   331   000112  6E04               	movwf	LCD_Set_Write@WR_SE^0,c
   332   000114                     
   333                           ;main.c: 108:     LATCbits.LATC4 = WR_SE;
   334   000114  B004               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   335   000116  D002               	bra	u25
   336   000118  988B               	bcf	139,4,c	;volatile
   337   00011A  D001               	bra	u26
   338   00011C                     u25:
   339   00011C  888B               	bsf	139,4,c	;volatile
   340   00011E                     u26:
   341   00011E                     
   342                           ;main.c: 109:     LCD_Data_Instruction(Command >> 4);
   343   00011E  3803               	swapf	LCD_Set_Write@Command^0,w,c
   344   000120  0B0F               	andlw	15
   345   000122  EC52  F000         	call	_LCD_Data_Instruction
   346   000126                     
   347                           ;main.c: 110:     LCD_Data_Instruction(Command);
   348   000126  5003               	movf	LCD_Set_Write@Command^0,w,c
   349   000128  EC52  F000         	call	_LCD_Data_Instruction
   350   00012C  0012               	return		;funcret
   351   00012E                     __end_of_LCD_Set_Write:
   352                           	callstack 0
   353                           
   354 ;; *************** function _LCD_Data_Instruction *****************
   355 ;; Defined at:
   356 ;;		line 116 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;  Data            1    wreg     unsigned char 
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  Data            1    1[COMRAM] unsigned char 
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;Total ram usage:        2 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_LCD_Set_Write
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text3
   385   0000A4                     __ptext3:
   386                           	callstack 0
   387   0000A4                     _LCD_Data_Instruction:
   388                           	callstack 27
   389                           
   390                           ;incstack = 0
   391                           ;LCD_Data_Instruction@Data stored from wreg
   392   0000A4  6E02               	movwf	LCD_Data_Instruction@Data^0,c
   393   0000A6                     
   394                           ;main.c: 118:     LATCbits.LATC5 = 1;
   395   0000A6  8A8B               	bsf	139,5,c	;volatile
   396   0000A8                     
   397                           ;main.c: 119:     _delay((unsigned long)((15)*(16000000/4000.0)));
   398   0000A8  0E4E               	movlw	78
   399   0000AA  6E01               	movwf	??_LCD_Data_Instruction^0,c
   400   0000AC  0EEB               	movlw	235
   401   0000AE                     u77:
   402   0000AE  2EE8               	decfsz	wreg,f,c
   403   0000B0  D7FE               	bra	u77
   404   0000B2  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   405   0000B4  D7FC               	bra	u77
   406   0000B6  F000               	nop	
   407   0000B8                     
   408                           ;main.c: 120:     LATD = Data;
   409   0000B8  C002  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   410   0000BC                     
   411                           ;main.c: 121:     _delay((unsigned long)((15)*(16000000/4000.0)));
   412   0000BC  0E4E               	movlw	78
   413   0000BE  6E01               	movwf	??_LCD_Data_Instruction^0,c
   414   0000C0  0EEB               	movlw	235
   415   0000C2                     u87:
   416   0000C2  2EE8               	decfsz	wreg,f,c
   417   0000C4  D7FE               	bra	u87
   418   0000C6  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   419   0000C8  D7FC               	bra	u87
   420   0000CA  F000               	nop	
   421   0000CC                     
   422                           ;main.c: 122:     LATCbits.LATC5 = 0;
   423   0000CC  9A8B               	bcf	139,5,c	;volatile
   424   0000CE                     
   425                           ;main.c: 123:     _delay((unsigned long)((15)*(16000000/4000.0)));
   426   0000CE  0E4E               	movlw	78
   427   0000D0  6E01               	movwf	??_LCD_Data_Instruction^0,c
   428   0000D2  0EEB               	movlw	235
   429   0000D4                     u97:
   430   0000D4  2EE8               	decfsz	wreg,f,c
   431   0000D6  D7FE               	bra	u97
   432   0000D8  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   433   0000DA  D7FC               	bra	u97
   434   0000DC  F000               	nop	
   435   0000DE  0012               	return		;funcret
   436   0000E0                     __end_of_LCD_Data_Instruction:
   437                           	callstack 0
   438                           
   439 ;; *************** function _Configurations *****************
   440 ;; Defined at:
   441 ;;		line 49 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text4
   470   0000E0                     __ptext4:
   471                           	callstack 0
   472   0000E0                     _Configurations:
   473                           	callstack 29
   474   0000E0                     
   475                           ;main.c: 51:     OSCCON = 0x72;
   476   0000E0  0E72               	movlw	114
   477   0000E2  6ED3               	movwf	211,c	;volatile
   478   0000E4                     
   479                           ;main.c: 54:     ANSELCbits.ANSC4 = 0;
   480   0000E4  010F               	movlb	15	; () banked
   481   0000E6  993A               	bcf	58,4,b	;volatile
   482   0000E8                     
   483                           ; BSR set to: 15
   484                           ;main.c: 55:     ANSELCbits.ANSC5 = 0;
   485   0000E8  9B3A               	bcf	58,5,b	;volatile
   486   0000EA                     
   487                           ; BSR set to: 15
   488                           ;main.c: 56:     ANSELCbits.ANSC6 = 0;
   489   0000EA  9D3A               	bcf	58,6,b	;volatile
   490   0000EC                     
   491                           ; BSR set to: 15
   492                           ;main.c: 57:     ANSELCbits.ANSC7 = 0;
   493   0000EC  9F3A               	bcf	58,7,b	;volatile
   494                           
   495                           ;main.c: 59:     ANSELD = 0x00;
   496   0000EE  0E00               	movlw	0
   497   0000F0  6F3B               	movwf	59,b	;volatile
   498   0000F2                     
   499                           ; BSR set to: 15
   500                           ;main.c: 62:     TRISCbits.RC4 = 0;
   501   0000F2  9894               	bcf	148,4,c	;volatile
   502   0000F4                     
   503                           ; BSR set to: 15
   504                           ;main.c: 63:     TRISCbits.RC5 = 0;
   505   0000F4  9A94               	bcf	148,5,c	;volatile
   506                           
   507                           ;main.c: 65:     TRISD = 0x00;
   508   0000F6  0E00               	movlw	0
   509   0000F8  6E95               	movwf	149,c	;volatile
   510   0000FA                     
   511                           ; BSR set to: 15
   512                           ;main.c: 68:     LATCbits.LC4 = 0;
   513   0000FA  988B               	bcf	139,4,c	;volatile
   514   0000FC                     
   515                           ; BSR set to: 15
   516                           ;main.c: 69:     LATCbits.LC5 = 0;
   517   0000FC  9A8B               	bcf	139,5,c	;volatile
   518                           
   519                           ;main.c: 71:     LATD = 0;
   520   0000FE  0E00               	movlw	0
   521   000100  6E8C               	movwf	140,c	;volatile
   522   000102                     
   523                           ; BSR set to: 15
   524                           ;main.c: 76:     BRGH1 = 1;
   525   000102  84AC               	bsf	4012,2,c	;volatile
   526   000104                     
   527                           ; BSR set to: 15
   528                           ;main.c: 77:     BRG161 = 0;
   529   000104  96B8               	bcf	4024,3,c	;volatile
   530                           
   531                           ;main.c: 78:     SPBRG1 = 0x00;
   532   000106  0E00               	movlw	0
   533   000108  6EAF               	movwf	175,c	;volatile
   534   00010A                     
   535                           ; BSR set to: 15
   536                           ;main.c: 79:     RCSTA1bits.SPEN = 1;
   537   00010A  8EAB               	bsf	171,7,c	;volatile
   538   00010C                     
   539                           ; BSR set to: 15
   540                           ;main.c: 80:     TXSTA1bits.SYNC = 0;
   541   00010C  98AC               	bcf	172,4,c	;volatile
   542   00010E                     
   543                           ; BSR set to: 15
   544                           ;main.c: 81:     RCSTA1bits.CREN = 1;
   545   00010E  88AB               	bsf	171,4,c	;volatile
   546   000110                     
   547                           ; BSR set to: 15
   548   000110  0012               	return		;funcret
   549   000112                     __end_of_Configurations:
   550                           	callstack 0
   551                           
   552 ;; *************** function _EUSART_Int_Rx *****************
   553 ;; Defined at:
   554 ;;		line 127 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		None
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		Interrupt level 2
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	intcode
   582   000008                     __pintcode:
   583                           	callstack 0
   584   000008                     _EUSART_Int_Rx:
   585                           	callstack 27
   586                           
   587                           ; BSR set to: 15
   588                           ;incstack = 0
   589   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   590   00000A  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   591   00000C  0011               	retfie		f
   592   00000E                     __end_of_EUSART_Int_Rx:
   593                           	callstack 0
   594   000000                     
   595                           	psect	rparam
   596   000000                     
   597                           	psect	temp
   598   000006                     btemp:
   599                           	callstack 0
   600   000006                     	ds	1
   601   000000                     int$flags	set	btemp
   602   000000                     wtemp8	set	btemp+1
   603   000000                     ttemp5	set	btemp+1
   604   000000                     ttemp6	set	btemp+4
   605   000000                     ttemp7	set	btemp+8
   606                           
   607                           	psect	config
   608                           
   609                           ; Padding undefined space
   610   300000                     	org	3145728
   611   300000  FF                 	db	255
   612                           
   613                           ;Config register CONFIG1H @ 0x300001
   614                           ;	Oscillator Selection bits
   615                           ;	FOSC = INTIO67, Internal oscillator block
   616                           ;	4X PLL Enable
   617                           ;	PLLCFG = OFF, Oscillator used directly
   618                           ;	Primary clock enable bit
   619                           ;	PRICLKEN = ON, Primary clock is always enabled
   620                           ;	Fail-Safe Clock Monitor Enable bit
   621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   622                           ;	Internal/External Oscillator Switchover bit
   623                           ;	IESO = OFF, Oscillator Switchover mode disabled
   624   300001                     	org	3145729
   625   300001  28                 	db	40
   626                           
   627                           ;Config register CONFIG2L @ 0x300002
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRTEN = OFF, Power up timer disabled
   630                           ;	Brown-out Reset Enable bits
   631                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   632                           ;	Brown Out Reset Voltage bits
   633                           ;	BORV = 190, VBOR set to 1.90 V nominal
   634   300002                     	org	3145730
   635   300002  1F                 	db	31
   636                           
   637                           ;Config register CONFIG2H @ 0x300003
   638                           ;	Watchdog Timer Enable bits
   639                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   640                           ;	Watchdog Timer Postscale Select bits
   641                           ;	WDTPS = 32768, 1:32768
   642   300003                     	org	3145731
   643   300003  3C                 	db	60
   644                           
   645                           ; Padding undefined space
   646   300004                     	org	3145732
   647   300004  FF                 	db	255
   648                           
   649                           ;Config register CONFIG3H @ 0x300005
   650                           ;	CCP2 MUX bit
   651                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   652                           ;	PORTB A/D Enable bit
   653                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   654                           ;	P3A/CCP3 Mux bit
   655                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   656                           ;	HFINTOSC Fast Start-up
   657                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   658                           ;	Timer3 Clock input mux bit
   659                           ;	T3CMX = PORTC0, T3CKI is on RC0
   660                           ;	ECCP2 B output mux bit
   661                           ;	P2BMX = PORTD2, P2B is on RD2
   662                           ;	MCLR Pin Enable bit
   663                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   664   300005                     	org	3145733
   665   300005  BF                 	db	191
   666                           
   667                           ;Config register CONFIG4L @ 0x300006
   668                           ;	Stack Full/Underflow Reset Enable bit
   669                           ;	STVREN = ON, Stack full/underflow will cause Reset
   670                           ;	Single-Supply ICSP Enable bit
   671                           ;	LVP = OFF, Single-Supply ICSP disabled
   672                           ;	Extended Instruction Set Enable bit
   673                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   674                           ;	Background Debug
   675                           ;	DEBUG = 0x1, unprogrammed default
   676   300006                     	org	3145734
   677   300006  81                 	db	129
   678                           
   679                           ; Padding undefined space
   680   300007                     	org	3145735
   681   300007  FF                 	db	255
   682                           
   683                           ;Config register CONFIG5L @ 0x300008
   684                           ;	Code Protection Block 0
   685                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   686                           ;	Code Protection Block 1
   687                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   688                           ;	Code Protection Block 2
   689                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   690                           ;	Code Protection Block 3
   691                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   692   300008                     	org	3145736
   693   300008  0F                 	db	15
   694                           
   695                           ;Config register CONFIG5H @ 0x300009
   696                           ;	Boot Block Code Protection bit
   697                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   698                           ;	Data EEPROM Code Protection bit
   699                           ;	CPD = OFF, Data EEPROM not code-protected
   700   300009                     	org	3145737
   701   300009  C0                 	db	192
   702                           
   703                           ;Config register CONFIG6L @ 0x30000A
   704                           ;	Write Protection Block 0
   705                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   706                           ;	Write Protection Block 1
   707                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   708                           ;	Write Protection Block 2
   709                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   710                           ;	Write Protection Block 3
   711                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   712   30000A                     	org	3145738
   713   30000A  0F                 	db	15
   714                           
   715                           ;Config register CONFIG6H @ 0x30000B
   716                           ;	Configuration Register Write Protection bit
   717                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   718                           ;	Boot Block Write Protection bit
   719                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   720                           ;	Data EEPROM Write Protection bit
   721                           ;	WRTD = OFF, Data EEPROM not write-protected
   722   30000B                     	org	3145739
   723   30000B  E0                 	db	224
   724                           
   725                           ;Config register CONFIG7L @ 0x30000C
   726                           ;	Table Read Protection Block 0
   727                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   728                           ;	Table Read Protection Block 1
   729                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   730                           ;	Table Read Protection Block 2
   731                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   732                           ;	Table Read Protection Block 3
   733                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   734   30000C                     	org	3145740
   735   30000C  0F                 	db	15
   736                           
   737                           ;Config register CONFIG7H @ 0x30000D
   738                           ;	Boot Block Table Read Protection bit
   739                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   740   30000D                     	org	3145741
   741   30000D  40                 	db	64
   742                           tosu	equ	0xFFF
   743                           tosh	equ	0xFFE
   744                           tosl	equ	0xFFD
   745                           stkptr	equ	0xFFC
   746                           pclatu	equ	0xFFB
   747                           pclath	equ	0xFFA
   748                           pcl	equ	0xFF9
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           prodh	equ	0xFF4
   754                           prodl	equ	0xFF3
   755                           indf0	equ	0xFEF
   756                           postinc0	equ	0xFEE
   757                           postdec0	equ	0xFED
   758                           preinc0	equ	0xFEC
   759                           plusw0	equ	0xFEB
   760                           fsr0h	equ	0xFEA
   761                           fsr0l	equ	0xFE9
   762                           wreg	equ	0xFE8
   763                           indf1	equ	0xFE7
   764                           postinc1	equ	0xFE6
   765                           postdec1	equ	0xFE5
   766                           preinc1	equ	0xFE4
   767                           plusw1	equ	0xFE3
   768                           fsr1h	equ	0xFE2
   769                           fsr1l	equ	0xFE1
   770                           bsr	equ	0xFE0
   771                           indf2	equ	0xFDF
   772                           postinc2	equ	0xFDE
   773                           postdec2	equ	0xFDD
   774                           preinc2	equ	0xFDC
   775                           plusw2	equ	0xFDB
   776                           fsr2h	equ	0xFDA
   777                           fsr2l	equ	0xFD9
   778                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     689
                     _Configurations
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     689
                                              4 COMRAM     1     1      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1     689
                                              2 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction

 _EUSART_Int_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRh          2C      0       0      37        0.0%
BITBIGSFRlhhhh      1A      0       0      38        0.0%
BITBIGSFRlhhhlh      8      0       0      39        0.0%
BITBIGSFRlhhhll      2      0       0      40        0.0%
BITBIGSFRlhhl       15      0       0      41        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhll       4F      0       0      43        0.0%
BITBIGSFRll          2      0       0      44        0.0%
BIGRAM             F37      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jan 27 14:29:18 2024

                          l40 0136                            l51 012C                            l45 0110  
                          l54 00DE                            l39 0136                            l48 00A2  
                          u25 011C                            u26 011E                            u37 0018  
                          u47 0032                            u57 004C                            u67 0098  
                          u77 00AE                            u87 00C2                            u97 00D4  
                         l811 0126                           l741 00BC                           l821 0056  
                         l813 0012                           l743 00CC                           l735 00A6  
                         l807 0114                           l831 0088                           l823 0060  
                         l815 0022                           l761 00EC                           l753 00E0  
                         l745 00CE                           l737 00A8                           l809 011E  
                         l833 0092                           l825 006A                           l817 002C  
                         l771 0102                           l763 00F2                           l755 00E4  
                         l739 00B8                           l827 0074                           l819 0046  
                         l835 012E                           l773 0104                           l765 00F4  
                         l757 00E8                           l829 007E                           l837 0132  
                         l775 010A                           l767 00FA                           l759 00EA  
                         l777 010C                           l769 00FC                           l779 010E  
               _LCD_Set_Write 0112                           wreg 0FE8                    _TXSTA1bits 0FAC  
                        _LATD 0F8C                          i2l59 000A                          _main 012E  
                        btemp 0006                          start 000E                  ___param_bank 0000  
            __end_of_LCD_Init 00A4                         ?_main 0001                ?_LCD_Set_Write 0003  
                       _BRGH1 7D62                 _EUSART_Int_Rx 0008                         _TRISD 0F95  
                       ttemp5 0007                         ttemp6 000A                         ttemp7 000E  
                       wtemp8 0007               __initialization 013E                  __end_of_main 013E  
                      ??_main 0006                ?_EUSART_Int_Rx 0001                 __activetblptr 0000  
                      _BRG161 7DC3                        _ANSELD 0F3B                        _OSCCON 0FD3  
          LCD_Set_Write@WR_SE 0004                        _SPBRG1 0FAF               ??_LCD_Set_Write 0004  
                      isa$std 0001                    __accesstop 0060       __end_of__initialization 013E  
                   ?_LCD_Init 0001                 ___rparam_used 0001                __pcstackCOMRAM 0001  
             ??_EUSART_Int_Rx 0001                    ??_LCD_Init 0005                       __Hparam 0000  
                     __Lparam 0000                       __pcinit 013E                       __ramtop 1000  
                     __ptext0 012E                       __ptext1 0012                       __ptext2 0112  
                     __ptext3 00A4                       __ptext4 00E0          end_of_initialization 013E  
                   _TRISCbits 0F94         __end_of_LCD_Set_Write 012E           start_initialization 013E  
__end_of_LCD_Data_Instruction 00E0                _Configurations 00E0         __end_of_EUSART_Int_Rx 000E  
      __end_of_Configurations 0112      LCD_Data_Instruction@Data 0002                     __pintcode 0008  
             ?_Configurations 0001                      _LCD_Init 0012                      _LATCbits 0F8B  
        _LCD_Data_Instruction 00A4          LCD_Set_Write@Command 0003                      __Hrparam 0000  
       ?_LCD_Data_Instruction 0001                      __Lrparam 0000                    _ANSELCbits 0F3A  
                    isa$xinst 0000                      int$flags 0006                      intlevel2 0000  
                  _RCSTA1bits 0FAB        ??_LCD_Data_Instruction 0001              ??_Configurations 0001  
