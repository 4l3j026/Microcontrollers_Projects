

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jan 28 21:01:31 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 09/02/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   0003F0                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _Text1
    66   0003F0  48                 	db	72
    67   0003F1  65                 	db	101
    68   0003F2  6C                 	db	108
    69   0003F3  6C                 	db	108
    70   0003F4  6F                 	db	111
    71   0003F5  20                 	db	32
    72   0003F6  61                 	db	97
    73   0003F7  6E                 	db	110
    74   0003F8  64                 	db	100
    75   0003F9  20                 	db	32
    76   0003FA  57                 	db	87
    77   0003FB  65                 	db	101
    78   0003FC  6C                 	db	108
    79   0003FD  63                 	db	99
    80   0003FE  6F                 	db	111
    81   0003FF  6D                 	db	109
    82   000400  65                 	db	101
    83   000401  21                 	db	33
    84   000402  00                 	db	0
    85   000403  00                 	db	0
    86                           
    87                           ;initializer for _Text3
    88   000404  43                 	db	67
    89   000405  6F                 	db	111
    90   000406  75                 	db	117
    91   000407  6E                 	db	110
    92   000408  74                 	db	116
    93   000409  65                 	db	101
    94   00040A  72                 	db	114
    95   00040B  20                 	db	32
    96   00040C  49                 	db	73
    97   00040D  6E                 	db	110
    98   00040E  74                 	db	116
    99   00040F  20                 	db	32
   100   000410  32                 	db	50
   101   000411  3A                 	db	58
   102   000412  20                 	db	32
   103   000413  00                 	db	0
   104                           
   105                           ;initializer for _Text2
   106   000414  43                 	db	67
   107   000415  6F                 	db	111
   108   000416  75                 	db	117
   109   000417  6E                 	db	110
   110   000418  74                 	db	116
   111   000419  65                 	db	101
   112   00041A  72                 	db	114
   113   00041B  20                 	db	32
   114   00041C  49                 	db	73
   115   00041D  6E                 	db	110
   116   00041E  74                 	db	116
   117   00041F  20                 	db	32
   118   000420  30                 	db	48
   119   000421  3A                 	db	58
   120   000422  20                 	db	32
   121   000423  00                 	db	0
   122   000000                     _TXSTA1bits	set	4012
   123   000000                     _ANSELCbits	set	3898
   124   000000                     _OSCCON	set	4051
   125   000000                     _INTCONbits	set	4082
   126   000000                     _LATCbits	set	3979
   127   000000                     _TRISCbits	set	3988
   128   000000                     _ANSELD	set	3899
   129   000000                     _PIE1bits	set	3997
   130   000000                     _RCONbits	set	4048
   131   000000                     _TRISD	set	3989
   132   000000                     _LATD	set	3980
   133   000000                     _RCSTA1bits	set	4011
   134   000000                     _SPBRG1	set	4015
   135   000000                     _PIR1bits	set	3998
   136   000000                     _BRGH1	set	32098
   137   000000                     _BRG161	set	32195
   138   000000                     _RC1REG	set	4014
   139                           
   140                           ; #config settings
   141                           
   142                           	psect	cinit
   143   000424                     __pcinit:
   144                           	callstack 0
   145   000424                     start_initialization:
   146                           	callstack 0
   147   000424                     __initialization:
   148                           	callstack 0
   149                           
   150                           ; Initialize objects allocated to COMRAM (52 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152   000424  0EF0               	movlw	low __pidataCOMRAM
   153   000426  6EF6               	movwf	tblptrl,c
   154   000428  0E03               	movlw	high __pidataCOMRAM
   155   00042A  6EF7               	movwf	tblptrh,c
   156   00042C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157   00042E  6EF8               	movwf	tblptru,c
   158   000430  EE00  F001         	lfsr	0,__pdataCOMRAM
   159   000434  EE10 F034          	lfsr	1,52
   160   000438                     copy_data0:
   161   000438  0009               	tblrd		*+
   162   00043A  CFF5 FFEE          	movff	tablat,postinc0
   163   00043E  50E5               	movf	postdec1,w,c
   164   000440  50E1               	movf	fsr1l,w,c
   165   000442  E1FA               	bnz	copy_data0
   166   000444                     end_of_initialization:
   167                           	callstack 0
   168   000444                     __end_of__initialization:
   169                           	callstack 0
   170   000444  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   171   000446  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   172   000448  0100               	movlb	0
   173   00044A  EF43  F002         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	dataCOMRAM
   176   000001                     __pdataCOMRAM:
   177                           	callstack 0
   178   000001                     _Text1:
   179                           	callstack 0
   180   000001                     	ds	20
   181   000015                     _Text3:
   182                           	callstack 0
   183   000015                     	ds	16
   184   000025                     _Text2:
   185                           	callstack 0
   186   000025                     	ds	16
   187                           
   188                           	psect	cstackCOMRAM
   189   000035                     __pcstackCOMRAM:
   190                           	callstack 0
   191   000035                     ??i2_LCD_Data_Instruction:
   192   000035                     ?i2_strlen:
   193                           	callstack 0
   194   000035                     i2strlen@s:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x0
   198   000035                     	ds	1
   199   000036                     i2LCD_Data_Instruction@Data:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x1
   203   000036                     	ds	1
   204   000037                     i2LCD_Set_Write@Command:
   205                           	callstack 0
   206   000037                     i2strlen@a:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x2
   210   000037                     	ds	1
   211   000038                     i2LCD_Set_Write@WR_SE:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x3
   215   000038                     	ds	1
   216   000039                     ??i2_Show_Data_LCD:
   217                           
   218                           ; 1 bytes @ 0x4
   219   000039                     	ds	2
   220   00003B                     i2Show_Data_LCD@i:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x6
   224   00003B                     	ds	1
   225   00003C                     i2Show_Data_LCD@i_560:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x7
   229   00003C                     	ds	1
   230   00003D                     i2Show_Data_LCD@i_561:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x8
   234   00003D                     	ds	1
   235   00003E                     ??_EUSART_Int_Rx:
   236                           
   237                           ; 1 bytes @ 0x9
   238   00003E                     	ds	2
   239   000040                     ??_LCD_Data_Instruction:
   240   000040                     ?_strlen:
   241                           	callstack 0
   242   000040                     strlen@s:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xB
   246   000040                     	ds	1
   247   000041                     LCD_Data_Instruction@Data:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xC
   251   000041                     	ds	1
   252   000042                     LCD_Set_Write@Command:
   253                           	callstack 0
   254   000042                     strlen@a:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xD
   258   000042                     	ds	1
   259   000043                     LCD_Set_Write@WR_SE:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0xE
   263   000043                     	ds	1
   264   000044                     ??_LCD_Init:
   265   000044                     ??_Show_Data_LCD:
   266                           
   267                           ; 1 bytes @ 0xF
   268   000044                     	ds	2
   269   000046                     Show_Data_LCD@i:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x11
   273   000046                     	ds	1
   274   000047                     Show_Data_LCD@i_560:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x12
   278   000047                     	ds	1
   279   000048                     Show_Data_LCD@i_561:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x13
   283   000048                     	ds	1
   284   000049                     
   285                           ; 1 bytes @ 0x14
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 43 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels required when called: 7
   311 ;; This function calls:
   312 ;;		_Configurations
   313 ;;		_LCD_Init
   314 ;;		_Show_Data_LCD
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321   000486                     __ptext0:
   322                           	callstack 0
   323   000486                     _main:
   324                           	callstack 24
   325   000486                     
   326                           ;main.c: 46:     Configurations();
   327   000486  EC86  F001         	call	_Configurations	;wreg free
   328   00048A                     
   329                           ;main.c: 47:     LCD_Init();
   330   00048A  EC1B  F001         	call	_LCD_Init	;wreg free
   331   00048E                     
   332                           ;main.c: 48:     Show_Data_LCD();
   333   00048E  EC23  F000         	call	_Show_Data_LCD	;wreg free
   334   000492                     l59:
   335   000492  EF49  F002         	goto	l59
   336   000496  EF21  F000         	goto	start
   337   00049A                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _Show_Data_LCD *****************
   341 ;; Defined at:
   342 ;;		line 167 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  i               1   19[COMRAM] unsigned char 
   347 ;;  i               1   18[COMRAM] unsigned char 
   348 ;;  i               1   17[COMRAM] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        5 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 6
   365 ;; This function calls:
   366 ;;		_LCD_Set_Write
   367 ;;		_strlen
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374   000046                     __ptext1:
   375                           	callstack 0
   376   000046                     _Show_Data_LCD:
   377                           	callstack 24
   378   000046                     
   379                           ;main.c: 169:     LCD_Set_Write(0, 0X80);
   380   000046  0E80               	movlw	128
   381   000048  6E42               	movwf	LCD_Set_Write@Command^0,c
   382   00004A  0E00               	movlw	0
   383   00004C  EC27  F002         	call	_LCD_Set_Write
   384   000050                     
   385                           ;main.c: 171:     for (uint8_t i = 0; i < strlen(Text1); i++) {
   386   000050  0E00               	movlw	0
   387   000052  6E46               	movwf	Show_Data_LCD@i^0,c
   388   000054  EF38  F000         	goto	l1037
   389   000058                     l1033:
   390                           
   391                           ;main.c: 173:         LCD_Set_Write(1, Text1[i]);
   392   000058  0E01               	movlw	low _Text1
   393   00005A  2446               	addwf	Show_Data_LCD@i^0,w,c
   394   00005C  6ED9               	movwf	fsr2l,c
   395   00005E  6ADA               	clrf	fsr2h,c
   396   000060  0E00               	movlw	high _Text1
   397   000062  22DA               	addwfc	fsr2h,f,c
   398   000064  50DF               	movf	indf2,w,c
   399   000066  6E42               	movwf	LCD_Set_Write@Command^0,c
   400   000068  0E01               	movlw	1
   401   00006A  EC27  F002         	call	_LCD_Set_Write
   402   00006E                     
   403                           ;main.c: 175:     }
   404   00006E  2A46               	incf	Show_Data_LCD@i^0,f,c
   405   000070                     l1037:
   406   000070  0E01               	movlw	low _Text1
   407   000072  6E40               	movwf	strlen@s^0,c
   408   000074  0E00               	movlw	high _Text1
   409   000076  6E41               	movwf	(strlen@s+1)^0,c
   410   000078  ECC2  F001         	call	_strlen	;wreg free
   411   00007C  5046               	movf	Show_Data_LCD@i^0,w,c
   412   00007E  6E44               	movwf	??_Show_Data_LCD^0,c
   413   000080  6A45               	clrf	(??_Show_Data_LCD+1)^0,c
   414   000082  5040               	movf	?_strlen^0,w,c
   415   000084  5C44               	subwf	??_Show_Data_LCD^0,w,c
   416   000086  5041               	movf	(?_strlen+1)^0,w,c
   417   000088  5845               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   418   00008A  A0D8               	btfss	status,0,c
   419   00008C  EF4A  F000         	goto	u171
   420   000090  EF4C  F000         	goto	u170
   421   000094                     u171:
   422   000094  EF2C  F000         	goto	l1033
   423   000098                     u170:
   424   000098                     
   425                           ;main.c: 177:     LCD_Set_Write(0, 0xC0);
   426   000098  0EC0               	movlw	192
   427   00009A  6E42               	movwf	LCD_Set_Write@Command^0,c
   428   00009C  0E00               	movlw	0
   429   00009E  EC27  F002         	call	_LCD_Set_Write
   430   0000A2                     
   431                           ;main.c: 179:     for (uint8_t i = 0; i < strlen(Text2); i++) {
   432   0000A2  0E00               	movlw	0
   433   0000A4  6E47               	movwf	Show_Data_LCD@i_560^0,c
   434   0000A6  EF61  F000         	goto	l1047
   435   0000AA                     l1043:
   436                           
   437                           ;main.c: 181:         LCD_Set_Write(1, Text2[i]);
   438   0000AA  0E25               	movlw	low _Text2
   439   0000AC  2447               	addwf	Show_Data_LCD@i_560^0,w,c
   440   0000AE  6ED9               	movwf	fsr2l,c
   441   0000B0  6ADA               	clrf	fsr2h,c
   442   0000B2  0E00               	movlw	high _Text2
   443   0000B4  22DA               	addwfc	fsr2h,f,c
   444   0000B6  50DF               	movf	indf2,w,c
   445   0000B8  6E42               	movwf	LCD_Set_Write@Command^0,c
   446   0000BA  0E01               	movlw	1
   447   0000BC  EC27  F002         	call	_LCD_Set_Write
   448   0000C0                     
   449                           ;main.c: 183:     }
   450   0000C0  2A47               	incf	Show_Data_LCD@i_560^0,f,c
   451   0000C2                     l1047:
   452   0000C2  0E25               	movlw	low _Text2
   453   0000C4  6E40               	movwf	strlen@s^0,c
   454   0000C6  0E00               	movlw	high _Text2
   455   0000C8  6E41               	movwf	(strlen@s+1)^0,c
   456   0000CA  ECC2  F001         	call	_strlen	;wreg free
   457   0000CE  5047               	movf	Show_Data_LCD@i_560^0,w,c
   458   0000D0  6E44               	movwf	??_Show_Data_LCD^0,c
   459   0000D2  6A45               	clrf	(??_Show_Data_LCD+1)^0,c
   460   0000D4  5040               	movf	?_strlen^0,w,c
   461   0000D6  5C44               	subwf	??_Show_Data_LCD^0,w,c
   462   0000D8  5041               	movf	(?_strlen+1)^0,w,c
   463   0000DA  5845               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   464   0000DC  A0D8               	btfss	status,0,c
   465   0000DE  EF73  F000         	goto	u181
   466   0000E2  EF75  F000         	goto	u180
   467   0000E6                     u181:
   468   0000E6  EF55  F000         	goto	l1043
   469   0000EA                     u180:
   470   0000EA                     
   471                           ;main.c: 185:     LCD_Set_Write(0, 0X94);
   472   0000EA  0E94               	movlw	148
   473   0000EC  6E42               	movwf	LCD_Set_Write@Command^0,c
   474   0000EE  0E00               	movlw	0
   475   0000F0  EC27  F002         	call	_LCD_Set_Write
   476   0000F4                     
   477                           ;main.c: 187:     for (uint8_t i = 0; i < strlen(Text3); i++) {
   478   0000F4  0E00               	movlw	0
   479   0000F6  6E48               	movwf	Show_Data_LCD@i_561^0,c
   480   0000F8  EF8A  F000         	goto	l1057
   481   0000FC                     l1053:
   482                           
   483                           ;main.c: 189:         LCD_Set_Write(1, Text3[i]);
   484   0000FC  0E15               	movlw	low _Text3
   485   0000FE  2448               	addwf	Show_Data_LCD@i_561^0,w,c
   486   000100  6ED9               	movwf	fsr2l,c
   487   000102  6ADA               	clrf	fsr2h,c
   488   000104  0E00               	movlw	high _Text3
   489   000106  22DA               	addwfc	fsr2h,f,c
   490   000108  50DF               	movf	indf2,w,c
   491   00010A  6E42               	movwf	LCD_Set_Write@Command^0,c
   492   00010C  0E01               	movlw	1
   493   00010E  EC27  F002         	call	_LCD_Set_Write
   494   000112                     
   495                           ;main.c: 191:     }
   496   000112  2A48               	incf	Show_Data_LCD@i_561^0,f,c
   497   000114                     l1057:
   498   000114  0E15               	movlw	low _Text3
   499   000116  6E40               	movwf	strlen@s^0,c
   500   000118  0E00               	movlw	high _Text3
   501   00011A  6E41               	movwf	(strlen@s+1)^0,c
   502   00011C  ECC2  F001         	call	_strlen	;wreg free
   503   000120  5048               	movf	Show_Data_LCD@i_561^0,w,c
   504   000122  6E44               	movwf	??_Show_Data_LCD^0,c
   505   000124  6A45               	clrf	(??_Show_Data_LCD+1)^0,c
   506   000126  5040               	movf	?_strlen^0,w,c
   507   000128  5C44               	subwf	??_Show_Data_LCD^0,w,c
   508   00012A  5041               	movf	(?_strlen+1)^0,w,c
   509   00012C  5845               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   510   00012E  A0D8               	btfss	status,0,c
   511   000130  EF9C  F000         	goto	u191
   512   000134  EF9E  F000         	goto	u190
   513   000138                     u191:
   514   000138  EF7E  F000         	goto	l1053
   515   00013C                     u190:
   516   00013C  0012               	return		;funcret
   517   00013E                     __end_of_Show_Data_LCD:
   518                           	callstack 0
   519                           
   520 ;; *************** function _strlen *****************
   521 ;; Defined at:
   522 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  s               2   11[COMRAM] PTR const unsigned char 
   525 ;;		 -> Text3(16), Text2(16), Text1(20), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  a               2   13[COMRAM] PTR const unsigned char 
   528 ;;		 -> Text3(16), Text2(16), Text1(20), 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2   11[COMRAM] unsigned int 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:        4 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 4
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_Show_Data_LCD
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text2
   553   000384                     __ptext2:
   554                           	callstack 0
   555   000384                     _strlen:
   556                           	callstack 25
   557   000384  C040  F042         	movff	strlen@s,strlen@a
   558   000388  C041  F043         	movff	strlen@s+1,strlen@a+1
   559   00038C  EFCA  F001         	goto	l985
   560   000390                     l983:
   561   000390  4A40               	infsnz	strlen@s^0,f,c
   562   000392  2A41               	incf	(strlen@s+1)^0,f,c
   563   000394                     l985:
   564   000394  C040  FFD9         	movff	strlen@s,fsr2l
   565   000398  C041  FFDA         	movff	strlen@s+1,fsr2h
   566   00039C  50DF               	movf	indf2,w,c
   567   00039E  A4D8               	btfss	status,2,c
   568   0003A0  EFD4  F001         	goto	u141
   569   0003A4  EFD6  F001         	goto	u140
   570   0003A8                     u141:
   571   0003A8  EFC8  F001         	goto	l983
   572   0003AC                     u140:
   573   0003AC  5042               	movf	strlen@a^0,w,c
   574   0003AE  5C40               	subwf	strlen@s^0,w,c
   575   0003B0  6E40               	movwf	?_strlen^0,c
   576   0003B2  5043               	movf	(strlen@a+1)^0,w,c
   577   0003B4  5841               	subwfb	(strlen@s+1)^0,w,c
   578   0003B6  6E41               	movwf	(?_strlen+1)^0,c
   579   0003B8  0012               	return		;funcret
   580   0003BA                     __end_of_strlen:
   581                           	callstack 0
   582                           
   583 ;; *************** function _LCD_Init *****************
   584 ;; Defined at:
   585 ;;		line 108 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        2 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 6
   606 ;; This function calls:
   607 ;;		_LCD_Set_Write
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text3
   614   000236                     __ptext3:
   615                           	callstack 0
   616   000236                     _LCD_Init:
   617                           	callstack 24
   618   000236                     
   619                           ;main.c: 110:     _delay((unsigned long)((20)*(16000000/4000.0)));
   620   000236  0E68               	movlw	104
   621   000238  6E44               	movwf	??_LCD_Init^0,c
   622   00023A  0EE4               	movlw	228
   623   00023C                     u257:
   624   00023C  2EE8               	decfsz	wreg,f,c
   625   00023E  D7FE               	bra	u257
   626   000240  2E44               	decfsz	??_LCD_Init^0,f,c
   627   000242  D7FC               	bra	u257
   628   000244  D000               	nop2	
   629   000246                     
   630                           ;main.c: 111:     LCD_Set_Write(0, 0x30);
   631   000246  0E30               	movlw	48
   632   000248  6E42               	movwf	LCD_Set_Write@Command^0,c
   633   00024A  0E00               	movlw	0
   634   00024C  EC27  F002         	call	_LCD_Set_Write
   635   000250                     
   636                           ;main.c: 112:     _delay((unsigned long)((5)*(16000000/4000.0)));
   637   000250  0E1A               	movlw	26
   638   000252  6E44               	movwf	??_LCD_Init^0,c
   639   000254  0EF8               	movlw	248
   640   000256                     u267:
   641   000256  2EE8               	decfsz	wreg,f,c
   642   000258  D7FE               	bra	u267
   643   00025A  2E44               	decfsz	??_LCD_Init^0,f,c
   644   00025C  D7FC               	bra	u267
   645   00025E  D000               	nop2	
   646                           
   647                           ;main.c: 113:     LCD_Set_Write(0, 0x30);
   648   000260  0E30               	movlw	48
   649   000262  6E42               	movwf	LCD_Set_Write@Command^0,c
   650   000264  0E00               	movlw	0
   651   000266  EC27  F002         	call	_LCD_Set_Write
   652   00026A                     
   653                           ;main.c: 114:     _delay((unsigned long)((5)*(16000000/4000.0)));
   654   00026A  0E1A               	movlw	26
   655   00026C  6E44               	movwf	??_LCD_Init^0,c
   656   00026E  0EF8               	movlw	248
   657   000270                     u277:
   658   000270  2EE8               	decfsz	wreg,f,c
   659   000272  D7FE               	bra	u277
   660   000274  2E44               	decfsz	??_LCD_Init^0,f,c
   661   000276  D7FC               	bra	u277
   662   000278  D000               	nop2	
   663   00027A                     
   664                           ;main.c: 115:     LCD_Set_Write(0, 0x30);
   665   00027A  0E30               	movlw	48
   666   00027C  6E42               	movwf	LCD_Set_Write@Command^0,c
   667   00027E  0E00               	movlw	0
   668   000280  EC27  F002         	call	_LCD_Set_Write
   669   000284                     
   670                           ;main.c: 116:     LCD_Set_Write(0, 0x02);
   671   000284  0E02               	movlw	2
   672   000286  6E42               	movwf	LCD_Set_Write@Command^0,c
   673   000288  0E00               	movlw	0
   674   00028A  EC27  F002         	call	_LCD_Set_Write
   675   00028E                     
   676                           ;main.c: 117:     LCD_Set_Write(0, 0x06);
   677   00028E  0E06               	movlw	6
   678   000290  6E42               	movwf	LCD_Set_Write@Command^0,c
   679   000292  0E00               	movlw	0
   680   000294  EC27  F002         	call	_LCD_Set_Write
   681   000298                     
   682                           ;main.c: 118:     LCD_Set_Write(0, 0x0F);
   683   000298  0E0F               	movlw	15
   684   00029A  6E42               	movwf	LCD_Set_Write@Command^0,c
   685   00029C  0E00               	movlw	0
   686   00029E  EC27  F002         	call	_LCD_Set_Write
   687   0002A2                     
   688                           ;main.c: 119:     LCD_Set_Write(0, 0x28);
   689   0002A2  0E28               	movlw	40
   690   0002A4  6E42               	movwf	LCD_Set_Write@Command^0,c
   691   0002A6  0E00               	movlw	0
   692   0002A8  EC27  F002         	call	_LCD_Set_Write
   693   0002AC                     
   694                           ;main.c: 120:     LCD_Set_Write(0, 0x01);
   695   0002AC  0E01               	movlw	1
   696   0002AE  6E42               	movwf	LCD_Set_Write@Command^0,c
   697   0002B0  0E00               	movlw	0
   698   0002B2  EC27  F002         	call	_LCD_Set_Write
   699   0002B6                     
   700                           ;main.c: 121:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   701   0002B6  0E15               	movlw	21
   702   0002B8  6E45               	movwf	(??_LCD_Init+1)^0,c
   703   0002BA  0E4B               	movlw	75
   704   0002BC  6E44               	movwf	??_LCD_Init^0,c
   705   0002BE  0EBE               	movlw	190
   706   0002C0                     u287:
   707   0002C0  2EE8               	decfsz	wreg,f,c
   708   0002C2  D7FE               	bra	u287
   709   0002C4  2E44               	decfsz	??_LCD_Init^0,f,c
   710   0002C6  D7FC               	bra	u287
   711   0002C8  2E45               	decfsz	(??_LCD_Init+1)^0,f,c
   712   0002CA  D7FA               	bra	u287
   713   0002CC  D000               	nop2	
   714   0002CE  0012               	return		;funcret
   715   0002D0                     __end_of_LCD_Init:
   716                           	callstack 0
   717                           
   718 ;; *************** function _LCD_Set_Write *****************
   719 ;; Defined at:
   720 ;;		line 127 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  WR_SE           1    wreg     unsigned char 
   723 ;;  Command         1   13[COMRAM] unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  WR_SE           1   14[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        2 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 5
   742 ;; This function calls:
   743 ;;		_LCD_Data_Instruction
   744 ;; This function is called by:
   745 ;;		_LCD_Init
   746 ;;		_Show_Data_LCD
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text4
   751   00044E                     __ptext4:
   752                           	callstack 0
   753   00044E                     _LCD_Set_Write:
   754                           	callstack 24
   755                           
   756                           ;incstack = 0
   757                           ;LCD_Set_Write@WR_SE stored from wreg
   758   00044E  6E43               	movwf	LCD_Set_Write@WR_SE^0,c
   759   000450                     
   760                           ;main.c: 129:     LATCbits.LATC4 = WR_SE;
   761   000450  B043               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   762   000452  D002               	bra	u135
   763   000454  988B               	bcf	139,4,c	;volatile
   764   000456  D001               	bra	u136
   765   000458                     u135:
   766   000458  888B               	bsf	139,4,c	;volatile
   767   00045A                     u136:
   768   00045A                     
   769                           ;main.c: 130:     LCD_Data_Instruction(Command >> 4);
   770   00045A  3842               	swapf	LCD_Set_Write@Command^0,w,c
   771   00045C  0B0F               	andlw	15
   772   00045E  EC68  F001         	call	_LCD_Data_Instruction
   773   000462                     
   774                           ;main.c: 131:     LCD_Data_Instruction(Command);
   775   000462  5042               	movf	LCD_Set_Write@Command^0,w,c
   776   000464  EC68  F001         	call	_LCD_Data_Instruction
   777   000468  0012               	return		;funcret
   778   00046A                     __end_of_LCD_Set_Write:
   779                           	callstack 0
   780                           
   781 ;; *************** function _LCD_Data_Instruction *****************
   782 ;; Defined at:
   783 ;;		line 137 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  Data            1    wreg     unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  Data            1   12[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 4
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_LCD_Set_Write
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text5
   812   0002D0                     __ptext5:
   813                           	callstack 0
   814   0002D0                     _LCD_Data_Instruction:
   815                           	callstack 24
   816                           
   817                           ;incstack = 0
   818                           ;LCD_Data_Instruction@Data stored from wreg
   819   0002D0  6E41               	movwf	LCD_Data_Instruction@Data^0,c
   820   0002D2                     
   821                           ;main.c: 139:     LATCbits.LATC5 = 1;
   822   0002D2  8A8B               	bsf	139,5,c	;volatile
   823   0002D4                     
   824                           ;main.c: 140:     _delay((unsigned long)((15)*(16000000/4000.0)));
   825   0002D4  0E4E               	movlw	78
   826   0002D6  6E40               	movwf	??_LCD_Data_Instruction^0,c
   827   0002D8  0EEB               	movlw	235
   828   0002DA                     u297:
   829   0002DA  2EE8               	decfsz	wreg,f,c
   830   0002DC  D7FE               	bra	u297
   831   0002DE  2E40               	decfsz	??_LCD_Data_Instruction^0,f,c
   832   0002E0  D7FC               	bra	u297
   833   0002E2  F000               	nop	
   834   0002E4                     
   835                           ;main.c: 141:     LATD = Data;
   836   0002E4  C041  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   837   0002E8                     
   838                           ;main.c: 142:     _delay((unsigned long)((15)*(16000000/4000.0)));
   839   0002E8  0E4E               	movlw	78
   840   0002EA  6E40               	movwf	??_LCD_Data_Instruction^0,c
   841   0002EC  0EEB               	movlw	235
   842   0002EE                     u307:
   843   0002EE  2EE8               	decfsz	wreg,f,c
   844   0002F0  D7FE               	bra	u307
   845   0002F2  2E40               	decfsz	??_LCD_Data_Instruction^0,f,c
   846   0002F4  D7FC               	bra	u307
   847   0002F6  F000               	nop	
   848   0002F8                     
   849                           ;main.c: 143:     LATCbits.LATC5 = 0;
   850   0002F8  9A8B               	bcf	139,5,c	;volatile
   851   0002FA                     
   852                           ;main.c: 144:     _delay((unsigned long)((15)*(16000000/4000.0)));
   853   0002FA  0E4E               	movlw	78
   854   0002FC  6E40               	movwf	??_LCD_Data_Instruction^0,c
   855   0002FE  0EEB               	movlw	235
   856   000300                     u317:
   857   000300  2EE8               	decfsz	wreg,f,c
   858   000302  D7FE               	bra	u317
   859   000304  2E40               	decfsz	??_LCD_Data_Instruction^0,f,c
   860   000306  D7FC               	bra	u317
   861   000308  F000               	nop	
   862   00030A  0012               	return		;funcret
   863   00030C                     __end_of_LCD_Data_Instruction:
   864                           	callstack 0
   865                           
   866 ;; *************** function _Configurations *****************
   867 ;; Defined at:
   868 ;;		line 60 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 4
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text6
   897   00030C                     __ptext6:
   898                           	callstack 0
   899   00030C                     _Configurations:
   900                           	callstack 26
   901   00030C                     
   902                           ;main.c: 62:     OSCCON = 0x72;
   903   00030C  0E72               	movlw	114
   904   00030E  6ED3               	movwf	211,c	;volatile
   905   000310                     
   906                           ;main.c: 65:     ANSELCbits.ANSC4 = 0;
   907   000310  010F               	movlb	15	; () banked
   908   000312  993A               	bcf	58,4,b	;volatile
   909   000314                     
   910                           ; BSR set to: 15
   911                           ;main.c: 66:     ANSELCbits.ANSC5 = 0;
   912   000314  9B3A               	bcf	58,5,b	;volatile
   913   000316                     
   914                           ; BSR set to: 15
   915                           ;main.c: 67:     ANSELCbits.ANSC6 = 0;
   916   000316  9D3A               	bcf	58,6,b	;volatile
   917   000318                     
   918                           ; BSR set to: 15
   919                           ;main.c: 68:     ANSELCbits.ANSC7 = 0;
   920   000318  9F3A               	bcf	58,7,b	;volatile
   921                           
   922                           ;main.c: 70:     ANSELD = 0x00;
   923   00031A  0E00               	movlw	0
   924   00031C  6F3B               	movwf	59,b	;volatile
   925   00031E                     
   926                           ; BSR set to: 15
   927                           ;main.c: 73:     TRISCbits.RC4 = 0;
   928   00031E  9894               	bcf	148,4,c	;volatile
   929   000320                     
   930                           ; BSR set to: 15
   931                           ;main.c: 74:     TRISCbits.RC5 = 0;
   932   000320  9A94               	bcf	148,5,c	;volatile
   933                           
   934                           ;main.c: 76:     TRISD = 0x00;
   935   000322  0E00               	movlw	0
   936   000324  6E95               	movwf	149,c	;volatile
   937   000326                     
   938                           ; BSR set to: 15
   939                           ;main.c: 79:     LATCbits.LC4 = 0;
   940   000326  988B               	bcf	139,4,c	;volatile
   941   000328                     
   942                           ; BSR set to: 15
   943                           ;main.c: 80:     LATCbits.LC5 = 0;
   944   000328  9A8B               	bcf	139,5,c	;volatile
   945                           
   946                           ;main.c: 82:     LATD = 0;
   947   00032A  0E00               	movlw	0
   948   00032C  6E8C               	movwf	140,c	;volatile
   949   00032E                     
   950                           ; BSR set to: 15
   951                           ;main.c: 86:     INTCONbits.GIE = 1;
   952   00032E  8EF2               	bsf	242,7,c	;volatile
   953   000330                     
   954                           ; BSR set to: 15
   955                           ;main.c: 87:     INTCONbits.PEIE = 1;
   956   000330  8CF2               	bsf	242,6,c	;volatile
   957   000332                     
   958                           ; BSR set to: 15
   959                           ;main.c: 88:     RCONbits.IPEN = 0;
   960   000332  9ED0               	bcf	208,7,c	;volatile
   961   000334                     
   962                           ; BSR set to: 15
   963                           ;main.c: 90:     PIE1bits.RC1IE = 1;
   964   000334  8A9D               	bsf	157,5,c	;volatile
   965   000336                     
   966                           ; BSR set to: 15
   967                           ;main.c: 91:     PIR1bits.RC1IF = 0;
   968   000336  9A9E               	bcf	158,5,c	;volatile
   969                           
   970                           ;main.c: 95:     SPBRG1 = 0x67;
   971   000338  0E67               	movlw	103
   972   00033A  6EAF               	movwf	175,c	;volatile
   973   00033C                     
   974                           ; BSR set to: 15
   975                           ;main.c: 96:     BRGH1 = 1;
   976   00033C  84AC               	bsf	4012,2,c	;volatile
   977   00033E                     
   978                           ; BSR set to: 15
   979                           ;main.c: 97:     BRG161 = 0;
   980   00033E  96B8               	bcf	4024,3,c	;volatile
   981   000340                     
   982                           ; BSR set to: 15
   983                           ;main.c: 100:     RCSTA1bits.CREN = 1;
   984   000340  88AB               	bsf	171,4,c	;volatile
   985   000342                     
   986                           ; BSR set to: 15
   987                           ;main.c: 101:     TXSTA1bits.SYNC = 0;
   988   000342  98AC               	bcf	172,4,c	;volatile
   989   000344                     
   990                           ; BSR set to: 15
   991                           ;main.c: 102:     RCSTA1bits.SPEN = 1;
   992   000344  8EAB               	bsf	171,7,c	;volatile
   993   000346                     
   994                           ; BSR set to: 15
   995   000346  0012               	return		;funcret
   996   000348                     __end_of_Configurations:
   997                           	callstack 0
   998                           
   999 ;; *************** function _EUSART_Int_Rx *****************
  1000 ;; Defined at:
  1001 ;;		line 150 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  Var             1    0        unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 3
  1022 ;; This function calls:
  1023 ;;		i2_Show_Data_LCD
  1024 ;; This function is called by:
  1025 ;;		Interrupt level 2
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	intcode
  1030   000008                     __pintcode:
  1031                           	callstack 0
  1032   000008                     _EUSART_Int_Rx:
  1033                           	callstack 24
  1034                           
  1035                           ; BSR set to: 15
  1036                           ;incstack = 0
  1037   000008  8249               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1038   00000A  CFD9 F03E          	movff	fsr2l,??_EUSART_Int_Rx
  1039   00000E  CFDA F03F          	movff	fsr2h,??_EUSART_Int_Rx+1
  1040   000012                     
  1041                           ;main.c: 152:     char Var;;main.c: 154:     if (PIR1bits.RC1IF) {
  1042   000012  AA9E               	btfss	158,5,c	;volatile
  1043   000014  EF0E  F000         	goto	i2u23_41
  1044   000018  EF10  F000         	goto	i2u23_40
  1045   00001C                     i2u23_41:
  1046   00001C  EF1B  F000         	goto	i2l81
  1047   000020                     i2u23_40:
  1048   000020                     
  1049                           ;main.c: 157:         if (RC1REG == '4') {
  1050   000020  0E34               	movlw	52
  1051   000022  18AE               	xorwf	174,w,c	;volatile
  1052   000024  A4D8               	btfss	status,2,c
  1053   000026  EF17  F000         	goto	i2u24_41
  1054   00002A  EF19  F000         	goto	i2u24_40
  1055   00002E                     i2u24_41:
  1056   00002E  EF1B  F000         	goto	i2l81
  1057   000032                     i2u24_40:
  1058   000032                     
  1059                           ;main.c: 159:             Show_Data_LCD();
  1060   000032  EC9F  F000         	call	i2_Show_Data_LCD	;wreg free
  1061   000036                     i2l81:
  1062   000036  C03F  FFDA         	movff	??_EUSART_Int_Rx+1,fsr2h
  1063   00003A  C03E  FFD9         	movff	??_EUSART_Int_Rx,fsr2l
  1064   00003E  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1065   000040  0011               	retfie		f
  1066   000042                     __end_of_EUSART_Int_Rx:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function i2_Show_Data_LCD *****************
  1070 ;; Defined at:
  1071 ;;		line 167 in file "main.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  i               1    8[COMRAM] unsigned char 
  1076 ;;  i               1    7[COMRAM] unsigned char 
  1077 ;;  i               1    6[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        5 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 2
  1094 ;; This function calls:
  1095 ;;		i2_LCD_Set_Write
  1096 ;;		i2_strlen
  1097 ;; This function is called by:
  1098 ;;		_EUSART_Int_Rx
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text8
  1103   00013E                     __ptext8:
  1104                           	callstack 0
  1105   00013E                     i2_Show_Data_LCD:
  1106                           	callstack 24
  1107   00013E                     
  1108                           ;main.c: 169:     LCD_Set_Write(0, 0X80);
  1109   00013E  0E80               	movlw	128
  1110   000140  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1111   000142  0E00               	movlw	0
  1112   000144  EC35  F002         	call	i2_LCD_Set_Write
  1113   000148                     
  1114                           ;main.c: 171:     for (uint8_t i = 0; i < strlen(Text1); i++) {
  1115   000148  0E00               	movlw	0
  1116   00014A  6E3B               	movwf	i2Show_Data_LCD@i^0,c
  1117   00014C  EFB4  F000         	goto	i2l1067
  1118   000150                     i2l1063:
  1119                           
  1120                           ;main.c: 173:         LCD_Set_Write(1, Text1[i]);
  1121   000150  0E01               	movlw	low _Text1
  1122   000152  243B               	addwf	i2Show_Data_LCD@i^0,w,c
  1123   000154  6ED9               	movwf	fsr2l,c
  1124   000156  6ADA               	clrf	fsr2h,c
  1125   000158  0E00               	movlw	high _Text1
  1126   00015A  22DA               	addwfc	fsr2h,f,c
  1127   00015C  50DF               	movf	indf2,w,c
  1128   00015E  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1129   000160  0E01               	movlw	1
  1130   000162  EC35  F002         	call	i2_LCD_Set_Write
  1131   000166                     
  1132                           ;main.c: 175:     }
  1133   000166  2A3B               	incf	i2Show_Data_LCD@i^0,f,c
  1134   000168                     i2l1067:
  1135   000168  0E01               	movlw	low _Text1
  1136   00016A  6E35               	movwf	i2strlen@s^0,c
  1137   00016C  0E00               	movlw	high _Text1
  1138   00016E  6E36               	movwf	(i2strlen@s+1)^0,c
  1139   000170  ECDD  F001         	call	i2_strlen	;wreg free
  1140   000174  503B               	movf	i2Show_Data_LCD@i^0,w,c
  1141   000176  6E39               	movwf	??i2_Show_Data_LCD^0,c
  1142   000178  6A3A               	clrf	(??i2_Show_Data_LCD+1)^0,c
  1143   00017A  5035               	movf	?i2_strlen^0,w,c
  1144   00017C  5C39               	subwf	??i2_Show_Data_LCD^0,w,c
  1145   00017E  5036               	movf	(?i2_strlen+1)^0,w,c
  1146   000180  583A               	subwfb	(??i2_Show_Data_LCD+1)^0,w,c
  1147   000182  A0D8               	btfss	status,0,c
  1148   000184  EFC6  F000         	goto	i2u20_41
  1149   000188  EFC8  F000         	goto	i2u20_40
  1150   00018C                     i2u20_41:
  1151   00018C  EFA8  F000         	goto	i2l1063
  1152   000190                     i2u20_40:
  1153   000190                     
  1154                           ;main.c: 177:     LCD_Set_Write(0, 0xC0);
  1155   000190  0EC0               	movlw	192
  1156   000192  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1157   000194  0E00               	movlw	0
  1158   000196  EC35  F002         	call	i2_LCD_Set_Write
  1159   00019A                     
  1160                           ;main.c: 179:     for (uint8_t i = 0; i < strlen(Text2); i++) {
  1161   00019A  0E00               	movlw	0
  1162   00019C  6E3C               	movwf	i2Show_Data_LCD@i_560^0,c
  1163   00019E  EFDD  F000         	goto	i2l1077
  1164   0001A2                     i2l1073:
  1165                           
  1166                           ;main.c: 181:         LCD_Set_Write(1, Text2[i]);
  1167   0001A2  0E25               	movlw	low _Text2
  1168   0001A4  243C               	addwf	i2Show_Data_LCD@i_560^0,w,c
  1169   0001A6  6ED9               	movwf	fsr2l,c
  1170   0001A8  6ADA               	clrf	fsr2h,c
  1171   0001AA  0E00               	movlw	high _Text2
  1172   0001AC  22DA               	addwfc	fsr2h,f,c
  1173   0001AE  50DF               	movf	indf2,w,c
  1174   0001B0  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1175   0001B2  0E01               	movlw	1
  1176   0001B4  EC35  F002         	call	i2_LCD_Set_Write
  1177   0001B8                     
  1178                           ;main.c: 183:     }
  1179   0001B8  2A3C               	incf	i2Show_Data_LCD@i_560^0,f,c
  1180   0001BA                     i2l1077:
  1181   0001BA  0E25               	movlw	low _Text2
  1182   0001BC  6E35               	movwf	i2strlen@s^0,c
  1183   0001BE  0E00               	movlw	high _Text2
  1184   0001C0  6E36               	movwf	(i2strlen@s+1)^0,c
  1185   0001C2  ECDD  F001         	call	i2_strlen	;wreg free
  1186   0001C6  503C               	movf	i2Show_Data_LCD@i_560^0,w,c
  1187   0001C8  6E39               	movwf	??i2_Show_Data_LCD^0,c
  1188   0001CA  6A3A               	clrf	(??i2_Show_Data_LCD+1)^0,c
  1189   0001CC  5035               	movf	?i2_strlen^0,w,c
  1190   0001CE  5C39               	subwf	??i2_Show_Data_LCD^0,w,c
  1191   0001D0  5036               	movf	(?i2_strlen+1)^0,w,c
  1192   0001D2  583A               	subwfb	(??i2_Show_Data_LCD+1)^0,w,c
  1193   0001D4  A0D8               	btfss	status,0,c
  1194   0001D6  EFEF  F000         	goto	i2u21_41
  1195   0001DA  EFF1  F000         	goto	i2u21_40
  1196   0001DE                     i2u21_41:
  1197   0001DE  EFD1  F000         	goto	i2l1073
  1198   0001E2                     i2u21_40:
  1199   0001E2                     
  1200                           ;main.c: 185:     LCD_Set_Write(0, 0X94);
  1201   0001E2  0E94               	movlw	148
  1202   0001E4  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1203   0001E6  0E00               	movlw	0
  1204   0001E8  EC35  F002         	call	i2_LCD_Set_Write
  1205   0001EC                     
  1206                           ;main.c: 187:     for (uint8_t i = 0; i < strlen(Text3); i++) {
  1207   0001EC  0E00               	movlw	0
  1208   0001EE  6E3D               	movwf	i2Show_Data_LCD@i_561^0,c
  1209   0001F0  EF06  F001         	goto	i2l1087
  1210   0001F4                     i2l1083:
  1211                           
  1212                           ;main.c: 189:         LCD_Set_Write(1, Text3[i]);
  1213   0001F4  0E15               	movlw	low _Text3
  1214   0001F6  243D               	addwf	i2Show_Data_LCD@i_561^0,w,c
  1215   0001F8  6ED9               	movwf	fsr2l,c
  1216   0001FA  6ADA               	clrf	fsr2h,c
  1217   0001FC  0E00               	movlw	high _Text3
  1218   0001FE  22DA               	addwfc	fsr2h,f,c
  1219   000200  50DF               	movf	indf2,w,c
  1220   000202  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1221   000204  0E01               	movlw	1
  1222   000206  EC35  F002         	call	i2_LCD_Set_Write
  1223   00020A                     
  1224                           ;main.c: 191:     }
  1225   00020A  2A3D               	incf	i2Show_Data_LCD@i_561^0,f,c
  1226   00020C                     i2l1087:
  1227   00020C  0E15               	movlw	low _Text3
  1228   00020E  6E35               	movwf	i2strlen@s^0,c
  1229   000210  0E00               	movlw	high _Text3
  1230   000212  6E36               	movwf	(i2strlen@s+1)^0,c
  1231   000214  ECDD  F001         	call	i2_strlen	;wreg free
  1232   000218  503D               	movf	i2Show_Data_LCD@i_561^0,w,c
  1233   00021A  6E39               	movwf	??i2_Show_Data_LCD^0,c
  1234   00021C  6A3A               	clrf	(??i2_Show_Data_LCD+1)^0,c
  1235   00021E  5035               	movf	?i2_strlen^0,w,c
  1236   000220  5C39               	subwf	??i2_Show_Data_LCD^0,w,c
  1237   000222  5036               	movf	(?i2_strlen+1)^0,w,c
  1238   000224  583A               	subwfb	(??i2_Show_Data_LCD+1)^0,w,c
  1239   000226  A0D8               	btfss	status,0,c
  1240   000228  EF18  F001         	goto	i2u22_41
  1241   00022C  EF1A  F001         	goto	i2u22_40
  1242   000230                     i2u22_41:
  1243   000230  EFFA  F000         	goto	i2l1083
  1244   000234                     i2u22_40:
  1245   000234  0012               	return		;funcret
  1246   000236                     __end_ofi2_Show_Data_LCD:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function i2_strlen *****************
  1250 ;; Defined at:
  1251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1254 ;;		 -> Text3(16), Text2(16), Text1(20), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1257 ;;		 -> Text3(16), Text2(16), Text1(20), 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    0[COMRAM] unsigned int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        4 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		i2_Show_Data_LCD
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text9
  1281   0003BA                     __ptext9:
  1282                           	callstack 0
  1283   0003BA                     i2_strlen:
  1284                           	callstack 25
  1285   0003BA  C035  F037         	movff	i2strlen@s,i2strlen@a
  1286   0003BE  C036  F038         	movff	i2strlen@s+1,i2strlen@a+1
  1287   0003C2  EFE5  F001         	goto	i2l1001
  1288   0003C6                     i2l999:
  1289   0003C6  4A35               	infsnz	i2strlen@s^0,f,c
  1290   0003C8  2A36               	incf	(i2strlen@s+1)^0,f,c
  1291   0003CA                     i2l1001:
  1292   0003CA  C035  FFD9         	movff	i2strlen@s,fsr2l
  1293   0003CE  C036  FFDA         	movff	i2strlen@s+1,fsr2h
  1294   0003D2  50DF               	movf	indf2,w,c
  1295   0003D4  A4D8               	btfss	status,2,c
  1296   0003D6  EFEF  F001         	goto	i2u16_41
  1297   0003DA  EFF1  F001         	goto	i2u16_40
  1298   0003DE                     i2u16_41:
  1299   0003DE  EFE3  F001         	goto	i2l999
  1300   0003E2                     i2u16_40:
  1301   0003E2  5037               	movf	i2strlen@a^0,w,c
  1302   0003E4  5C35               	subwf	i2strlen@s^0,w,c
  1303   0003E6  6E35               	movwf	?i2_strlen^0,c
  1304   0003E8  5038               	movf	(i2strlen@a+1)^0,w,c
  1305   0003EA  5836               	subwfb	(i2strlen@s+1)^0,w,c
  1306   0003EC  6E36               	movwf	(?i2_strlen+1)^0,c
  1307   0003EE  0012               	return		;funcret
  1308   0003F0                     __end_ofi2_strlen:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function i2_LCD_Set_Write *****************
  1312 ;; Defined at:
  1313 ;;		line 127 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  WR_SE           1    wreg     unsigned char 
  1316 ;;  Command         1    2[COMRAM] unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  WR_SE           1    3[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 1
  1335 ;; This function calls:
  1336 ;;		i2_LCD_Data_Instruction
  1337 ;; This function is called by:
  1338 ;;		i2_Show_Data_LCD
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text10
  1343   00046A                     __ptext10:
  1344                           	callstack 0
  1345   00046A                     i2_LCD_Set_Write:
  1346                           	callstack 24
  1347                           
  1348                           ;incstack = 0
  1349                           ;i2LCD_Set_Write@WR_SE stored from wreg
  1350   00046A  6E38               	movwf	i2LCD_Set_Write@WR_SE^0,c
  1351   00046C                     
  1352                           ;main.c: 129:     LATCbits.LATC4 = WR_SE;
  1353   00046C  B038               	btfsc	i2LCD_Set_Write@WR_SE^0,0,c
  1354   00046E  D002               	bra	i2u15_45
  1355   000470  988B               	bcf	139,4,c	;volatile
  1356   000472  D001               	bra	i2u15_46
  1357   000474                     i2u15_45:
  1358   000474  888B               	bsf	139,4,c	;volatile
  1359   000476                     i2u15_46:
  1360   000476                     
  1361                           ;main.c: 130:     LCD_Data_Instruction(Command >> 4);
  1362   000476  3837               	swapf	i2LCD_Set_Write@Command^0,w,c
  1363   000478  0B0F               	andlw	15
  1364   00047A  ECA4  F001         	call	i2_LCD_Data_Instruction
  1365   00047E                     
  1366                           ;main.c: 131:     LCD_Data_Instruction(Command);
  1367   00047E  5037               	movf	i2LCD_Set_Write@Command^0,w,c
  1368   000480  ECA4  F001         	call	i2_LCD_Data_Instruction
  1369   000484  0012               	return		;funcret
  1370   000486                     __end_ofi2_LCD_Set_Write:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function i2_LCD_Data_Instruction *****************
  1374 ;; Defined at:
  1375 ;;		line 137 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  Data            1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  Data            1    1[COMRAM] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		i2_LCD_Set_Write
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text11
  1403   000348                     __ptext11:
  1404                           	callstack 0
  1405   000348                     i2_LCD_Data_Instruction:
  1406                           	callstack 24
  1407                           
  1408                           ;incstack = 0
  1409                           ;i2LCD_Data_Instruction@Data stored from wreg
  1410   000348  6E36               	movwf	i2LCD_Data_Instruction@Data^0,c
  1411   00034A                     
  1412                           ;main.c: 139:     LATCbits.LATC5 = 1;
  1413   00034A  8A8B               	bsf	139,5,c	;volatile
  1414   00034C                     
  1415                           ;main.c: 140:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1416   00034C  0E4E               	movlw	78
  1417   00034E  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1418   000350  0EEB               	movlw	235
  1419   000352                     i2u32_47:
  1420   000352  2EE8               	decfsz	wreg,f,c
  1421   000354  D7FE               	bra	i2u32_47
  1422   000356  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1423   000358  D7FC               	bra	i2u32_47
  1424   00035A  F000               	nop	
  1425   00035C                     
  1426                           ;main.c: 141:     LATD = Data;
  1427   00035C  C036  FF8C         	movff	i2LCD_Data_Instruction@Data,3980	;volatile
  1428   000360                     
  1429                           ;main.c: 142:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1430   000360  0E4E               	movlw	78
  1431   000362  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1432   000364  0EEB               	movlw	235
  1433   000366                     i2u33_47:
  1434   000366  2EE8               	decfsz	wreg,f,c
  1435   000368  D7FE               	bra	i2u33_47
  1436   00036A  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1437   00036C  D7FC               	bra	i2u33_47
  1438   00036E  F000               	nop	
  1439   000370                     
  1440                           ;main.c: 143:     LATCbits.LATC5 = 0;
  1441   000370  9A8B               	bcf	139,5,c	;volatile
  1442   000372                     
  1443                           ;main.c: 144:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1444   000372  0E4E               	movlw	78
  1445   000374  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1446   000376  0EEB               	movlw	235
  1447   000378                     i2u34_47:
  1448   000378  2EE8               	decfsz	wreg,f,c
  1449   00037A  D7FE               	bra	i2u34_47
  1450   00037C  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1451   00037E  D7FC               	bra	i2u34_47
  1452   000380  F000               	nop	
  1453   000382  0012               	return		;funcret
  1454   000384                     __end_ofi2_LCD_Data_Instruction:
  1455                           	callstack 0
  1456   000000                     
  1457                           	psect	rparam
  1458   000000                     
  1459                           	psect	temp
  1460   000049                     btemp:
  1461                           	callstack 0
  1462   000049                     	ds	1
  1463   000000                     int$flags	set	btemp
  1464   000000                     wtemp8	set	btemp+1
  1465   000000                     ttemp5	set	btemp+1
  1466   000000                     ttemp6	set	btemp+4
  1467   000000                     ttemp7	set	btemp+8
  1468                           
  1469                           	psect	config
  1470                           
  1471                           ; Padding undefined space
  1472   300000                     	org	3145728
  1473   300000  FF                 	db	255
  1474                           
  1475                           ;Config register CONFIG1H @ 0x300001
  1476                           ;	Oscillator Selection bits
  1477                           ;	FOSC = INTIO67, Internal oscillator block
  1478                           ;	4X PLL Enable
  1479                           ;	PLLCFG = OFF, Oscillator used directly
  1480                           ;	Primary clock enable bit
  1481                           ;	PRICLKEN = ON, Primary clock is always enabled
  1482                           ;	Fail-Safe Clock Monitor Enable bit
  1483                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1484                           ;	Internal/External Oscillator Switchover bit
  1485                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1486   300001                     	org	3145729
  1487   300001  28                 	db	40
  1488                           
  1489                           ;Config register CONFIG2L @ 0x300002
  1490                           ;	Power-up Timer Enable bit
  1491                           ;	PWRTEN = OFF, Power up timer disabled
  1492                           ;	Brown-out Reset Enable bits
  1493                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1494                           ;	Brown Out Reset Voltage bits
  1495                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1496   300002                     	org	3145730
  1497   300002  1F                 	db	31
  1498                           
  1499                           ;Config register CONFIG2H @ 0x300003
  1500                           ;	Watchdog Timer Enable bits
  1501                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1502                           ;	Watchdog Timer Postscale Select bits
  1503                           ;	WDTPS = 32768, 1:32768
  1504   300003                     	org	3145731
  1505   300003  3C                 	db	60
  1506                           
  1507                           ; Padding undefined space
  1508   300004                     	org	3145732
  1509   300004  FF                 	db	255
  1510                           
  1511                           ;Config register CONFIG3H @ 0x300005
  1512                           ;	CCP2 MUX bit
  1513                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1514                           ;	PORTB A/D Enable bit
  1515                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1516                           ;	P3A/CCP3 Mux bit
  1517                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1518                           ;	HFINTOSC Fast Start-up
  1519                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1520                           ;	Timer3 Clock input mux bit
  1521                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1522                           ;	ECCP2 B output mux bit
  1523                           ;	P2BMX = PORTD2, P2B is on RD2
  1524                           ;	MCLR Pin Enable bit
  1525                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1526   300005                     	org	3145733
  1527   300005  BF                 	db	191
  1528                           
  1529                           ;Config register CONFIG4L @ 0x300006
  1530                           ;	Stack Full/Underflow Reset Enable bit
  1531                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1532                           ;	Single-Supply ICSP Enable bit
  1533                           ;	LVP = OFF, Single-Supply ICSP disabled
  1534                           ;	Extended Instruction Set Enable bit
  1535                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1536                           ;	Background Debug
  1537                           ;	DEBUG = 0x1, unprogrammed default
  1538   300006                     	org	3145734
  1539   300006  81                 	db	129
  1540                           
  1541                           ; Padding undefined space
  1542   300007                     	org	3145735
  1543   300007  FF                 	db	255
  1544                           
  1545                           ;Config register CONFIG5L @ 0x300008
  1546                           ;	Code Protection Block 0
  1547                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1548                           ;	Code Protection Block 1
  1549                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1550                           ;	Code Protection Block 2
  1551                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1552                           ;	Code Protection Block 3
  1553                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1554   300008                     	org	3145736
  1555   300008  0F                 	db	15
  1556                           
  1557                           ;Config register CONFIG5H @ 0x300009
  1558                           ;	Boot Block Code Protection bit
  1559                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1560                           ;	Data EEPROM Code Protection bit
  1561                           ;	CPD = OFF, Data EEPROM not code-protected
  1562   300009                     	org	3145737
  1563   300009  C0                 	db	192
  1564                           
  1565                           ;Config register CONFIG6L @ 0x30000A
  1566                           ;	Write Protection Block 0
  1567                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1568                           ;	Write Protection Block 1
  1569                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1570                           ;	Write Protection Block 2
  1571                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1572                           ;	Write Protection Block 3
  1573                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1574   30000A                     	org	3145738
  1575   30000A  0F                 	db	15
  1576                           
  1577                           ;Config register CONFIG6H @ 0x30000B
  1578                           ;	Configuration Register Write Protection bit
  1579                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1580                           ;	Boot Block Write Protection bit
  1581                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1582                           ;	Data EEPROM Write Protection bit
  1583                           ;	WRTD = OFF, Data EEPROM not write-protected
  1584   30000B                     	org	3145739
  1585   30000B  E0                 	db	224
  1586                           
  1587                           ;Config register CONFIG7L @ 0x30000C
  1588                           ;	Table Read Protection Block 0
  1589                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1590                           ;	Table Read Protection Block 1
  1591                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1592                           ;	Table Read Protection Block 2
  1593                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1594                           ;	Table Read Protection Block 3
  1595                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1596   30000C                     	org	3145740
  1597   30000C  0F                 	db	15
  1598                           
  1599                           ;Config register CONFIG7H @ 0x30000D
  1600                           ;	Boot Block Table Read Protection bit
  1601                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1602   30000D                     	org	3145741
  1603   30000D  40                 	db	64
  1604                           tosu	equ	0xFFF
  1605                           tosh	equ	0xFFE
  1606                           tosl	equ	0xFFD
  1607                           stkptr	equ	0xFFC
  1608                           pclatu	equ	0xFFB
  1609                           pclath	equ	0xFFA
  1610                           pcl	equ	0xFF9
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           indf0	equ	0xFEF
  1618                           postinc0	equ	0xFEE
  1619                           postdec0	equ	0xFED
  1620                           preinc0	equ	0xFEC
  1621                           plusw0	equ	0xFEB
  1622                           fsr0h	equ	0xFEA
  1623                           fsr0l	equ	0xFE9
  1624                           wreg	equ	0xFE8
  1625                           indf1	equ	0xFE7
  1626                           postinc1	equ	0xFE6
  1627                           postdec1	equ	0xFE5
  1628                           preinc1	equ	0xFE4
  1629                           plusw1	equ	0xFE3
  1630                           fsr1h	equ	0xFE2
  1631                           fsr1l	equ	0xFE1
  1632                           bsr	equ	0xFE0
  1633                           indf2	equ	0xFDF
  1634                           postinc2	equ	0xFDE
  1635                           postdec2	equ	0xFDD
  1636                           preinc2	equ	0xFDC
  1637                           plusw2	equ	0xFDB
  1638                           fsr2h	equ	0xFDA
  1639                           fsr2l	equ	0xFD9
  1640                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      72
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Show_Data_LCD
    _Show_Data_LCD->_LCD_Set_Write
    _Show_Data_LCD->_strlen
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    _EUSART_Int_Rx->i2_Show_Data_LCD
    i2_Show_Data_LCD->i2_LCD_Set_Write
    i2_Show_Data_LCD->i2_strlen
    i2_LCD_Set_Write->i2_LCD_Data_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2746
                     _Configurations
                           _LCD_Init
                      _Show_Data_LCD
 ---------------------------------------------------------------------------------
 (1) _Show_Data_LCD                                        5     5      0    1601
                                             15 COMRAM     5     5      0
                      _LCD_Set_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     318
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1145
                                             15 COMRAM     2     2      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1    1145
                                             13 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        3     3      0     550
                                              9 COMRAM     2     2      0
                    i2_Show_Data_LCD
 ---------------------------------------------------------------------------------
 (5) i2_Show_Data_LCD                                      5     5      0     550
                                              4 COMRAM     5     5      0
                    i2_LCD_Set_Write
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_strlen                                             4     2      2     168
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Set_Write                                      2     1      1     244
                                              2 COMRAM     2     1      1
             i2_LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Data_Instruction                               2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction
   _Show_Data_LCD
     _LCD_Set_Write
     _strlen

 _EUSART_Int_Rx (ROOT)
   i2_Show_Data_LCD
     i2_LCD_Set_Write
       i2_LCD_Data_Instruction
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      48       1       76.6%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      47        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jan 28 21:01:31 2024

                            l60 0492                              l71 0468                              l65 0346  
                            l74 030A                              l59 0492                              l68 02CE  
                            l93 013C                             l831 030C                             l841 031E  
                           l833 0310                             l851 0330                             l843 0320  
                           l835 0314                             l861 033E                             l853 0332  
                           l845 0326                             l837 0316                             l781 02E8  
                           l773 03B8                             l863 0340                             l855 0334  
                           l847 0328                             l839 0318                             l783 02F8  
                           l775 02D2                             l865 0342                             l857 0336  
                           l849 032E                             l785 02FA                             l777 02D4  
                           l867 0344                             l859 033C                             l779 02E4  
                           l981 0384                             l975 0450                             l983 0390  
                           l977 045A                             l985 0394                             l979 0462  
                           l987 03AC                             u140 03AC                             u141 03A8  
                           u135 0458                             u136 045A                             u170 0098  
                           u307 02EE                             u171 0094                             u180 00EA  
                           u317 0300                             u181 00E6                             u190 013C  
                           u191 0138                             u257 023C                             u267 0256  
                           u277 0270                             u287 02C0                             u297 02DA  
                 _LCD_Set_Write 044E                             wreg 0FE8                      _TXSTA1bits 0FAC  
                          l1011 0250                            l1021 0298                            l1013 026A  
                          l1023 02A2                            l1015 027A                            l1007 0236  
                          l1031 0050                            l1025 02AC                            l1017 0284  
                          l1009 0246                            l1041 00A2                            l1033 0058  
                          l1027 02B6                            l1019 028E                            l1051 00F4  
                          l1043 00AA                            l1035 006E                            l1053 00FC  
                          l1045 00C0                            l1037 0070                            l1029 0046  
                          l1055 0112                            l1047 00C2                            l1039 0098  
                          l1057 0114                            l1049 00EA                            l1091 048A  
                          l1093 048E                            l1089 0486                            _LATD 0F8C  
                          i2l71 0484                            i2l81 0036                            i2l74 0382  
                          i2l93 0234                            _main 0486                            fsr2h 0FDA  
                          indf2 0FDF                            fsr1l 0FE1                            fsr2l 0FD9  
                          btemp 0049                            start 0042                    ___param_bank 0000  
               i2_Show_Data_LCD 013E                __end_of_LCD_Init 02D0                           ?_main 0035  
                ?_LCD_Set_Write 0042                           _BRGH1 7D62                   _EUSART_Int_Rx 0008  
                         i2l773 03EE                           i2l971 0370                           i2l963 034A  
                         i2l973 0372                           i2l965 034C                           i2l967 035C  
                         i2l991 046C                           i2l969 0360                           i2l993 0476  
                         i2l995 047E                           i2l997 03BA                           i2l999 03C6  
                         _TRISD 0F95        ??i2_LCD_Data_Instruction 0035                           _Text1 0001  
                         _Text2 0025                           _Text3 0015                           tablat 0FF5  
                         ttemp5 004A                           ttemp6 004D                           ttemp7 0051  
                         status 0FD8                           wtemp8 004A                __end_ofi2_strlen 03F0  
               __initialization 0424                    __end_of_main 049A                  Show_Data_LCD@i 0046  
                        ??_main 0049                  ?_EUSART_Int_Rx 0035                   __activetblptr 0000  
                        _BRG161 7DC3                          _ANSELD 0F3B                          _RC1REG 0FAE  
         __end_of_Show_Data_LCD 013E                          i2l1001 03CA                          i2l1003 03E2  
                        i2l1061 0148                          i2l1071 019A                          i2l1063 0150  
                        i2l1081 01EC                          i2l1073 01A2                          i2l1065 0166  
                        i2l1083 01F4                          i2l1075 01B8                          i2l1067 0168  
                        i2l1059 013E                          i2l1085 020A                          i2l1077 01BA  
                        i2l1069 0190                          i2l1087 020C                          i2l1079 01E2  
                        i2l1095 0012                          i2l1097 0020                          i2l1099 0032  
                        _OSCCON 0FD3              LCD_Set_Write@WR_SE 0043                          _SPBRG1 0FAF  
       __end_ofi2_Show_Data_LCD 0236               ??i2_LCD_Set_Write 0038                 ??_LCD_Set_Write 0043  
                        isa$std 0001                          _strlen 0384                    __pdataCOMRAM 0001  
            Show_Data_LCD@i_560 0047              Show_Data_LCD@i_561 0048                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                      __accesstop 0060  
       __end_of__initialization 0444                       ?_LCD_Init 0035                   ___rparam_used 0001  
                __pcstackCOMRAM 0035                 ??_EUSART_Int_Rx 003E                       ?i2_strlen 0035  
                    ??_LCD_Init 0044                ?i2_Show_Data_LCD 0035          i2_LCD_Data_Instruction 0348  
        i2LCD_Set_Write@Command 0037                         ?_strlen 0040                         i2u20_40 0190  
                       i2u20_41 018C                         i2u21_40 01E2                         i2u21_41 01DE  
                       i2u22_40 0234                         i2u22_41 0230                         i2u23_40 0020  
                       i2u23_41 001C                         i2u15_45 0474                         i2u15_46 0476  
                       i2u16_40 03E2                         i2u24_40 0032                         i2u16_41 03DE  
                       i2u24_41 002E                         i2u32_47 0352                         i2u33_47 0366  
                       i2u34_47 0378                      ??i2_strlen 0037      i2LCD_Data_Instruction@Data 0036  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 0424  
                       __ramtop 1000                         __ptext0 0486                         __ptext1 0046  
                       __ptext2 0384                         __ptext3 0236                         __ptext4 044E  
                       __ptext5 02D0                         __ptext6 030C                         __ptext8 013E  
                       __ptext9 03BA                 i2_LCD_Set_Write 046A            end_of_initialization 0444  
                       postdec1 0FE5                         postinc0 0FEE                         strlen@a 0042  
                       strlen@s 0040                       _TRISCbits 0F94                   __pidataCOMRAM 03F0  
         __end_of_LCD_Set_Write 046A         __end_ofi2_LCD_Set_Write 0486                  __end_of_strlen 03BA  
           start_initialization 0424    __end_of_LCD_Data_Instruction 030C                  _Configurations 030C  
                     i2strlen@a 0037                       i2strlen@s 0035            i2LCD_Set_Write@WR_SE 0038  
       ?i2_LCD_Data_Instruction 0035           __end_of_EUSART_Int_Rx 0042                        ??_strlen 0042  
          i2Show_Data_LCD@i_560 003C            i2Show_Data_LCD@i_561 003D          __end_of_Configurations 0348  
__end_ofi2_LCD_Data_Instruction 0384                   _Show_Data_LCD 0046        LCD_Data_Instruction@Data 0041  
                     __pintcode 0008                ?i2_LCD_Set_Write 0037                 ?_Configurations 0035  
                ?_Show_Data_LCD 0035                        _LCD_Init 0236                        _LATCbits 0F8B  
                      _PIE1bits 0F9D                        _PIR1bits 0F9E            _LCD_Data_Instruction 02D0  
                      _RCONbits 0FD0            LCD_Set_Write@Command 0042                        i2_strlen 03BA  
                     copy_data0 0438                        __Hrparam 0000           ?_LCD_Data_Instruction 0035  
                      __Lrparam 0000                      _ANSELCbits 0F3A               ??i2_Show_Data_LCD 0039  
                      __ptext10 046A                        __ptext11 0348                 ??_Show_Data_LCD 0044  
                      isa$xinst 0000                        int$flags 0049                      _INTCONbits 0FF2  
                      intlevel2 0000                      _RCSTA1bits 0FAB          ??_LCD_Data_Instruction 0040  
              ??_Configurations 0040                i2Show_Data_LCD@i 003B  
