

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jan 16 23:44:44 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 09/02/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F46K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _ANSELCbits	set	3898
    51   000000                     _OSCCON	set	4051
    52   000000                     _LATCbits	set	3979
    53   000000                     _TRISCbits	set	3988
    54   000000                     _ANSELD	set	3899
    55   000000                     _TRISD	set	3989
    56   000000                     _LATD	set	3980
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   00FEE0                     __pcinit:
    62                           	callstack 0
    63   00FEE0                     start_initialization:
    64                           	callstack 0
    65   00FEE0                     __initialization:
    66                           	callstack 0
    67   00FEE0                     end_of_initialization:
    68                           	callstack 0
    69   00FEE0                     __end_of__initialization:
    70                           	callstack 0
    71   00FEE0  0100               	movlb	0
    72   00FEE2  EF73  F07F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75   000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77   000001                     ??_LCD_Data_Instruction:
    78   000001                     
    79                           ; 1 bytes @ 0x0
    80   000001                     	ds	1
    81   000002                     LCD_Data_Instruction@Data:
    82                           	callstack 0
    83                           
    84                           ; 1 bytes @ 0x1
    85   000002                     	ds	1
    86   000003                     LCD_Set_Write@Command:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x2
    90   000003                     	ds	1
    91   000004                     LCD_Set_Write@WR_SE:
    92                           	callstack 0
    93                           
    94                           ; 1 bytes @ 0x3
    95   000004                     	ds	1
    96   000005                     ??_LCD_Init:
    97                           
    98                           ; 1 bytes @ 0x4
    99   000005                     	ds	1
   100   000006                     
   101                           ; 1 bytes @ 0x5
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 35 in file "main.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;		None
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   125 ;;Total ram usage:        0 bytes
   126 ;; Hardware stack levels required when called: 3
   127 ;; This function calls:
   128 ;;		_Configurations
   129 ;;		_LCD_Init
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136   00FEE6                     __ptext0:
   137                           	callstack 0
   138   00FEE6                     _main:
   139                           	callstack 28
   140   00FEE6                     
   141                           ;main.c: 38:     Configurations();
   142   00FEE6  EC89  F07F         	call	_Configurations	;wreg free
   143   00FEEA                     
   144                           ;main.c: 39:     LCD_Init();
   145   00FEEA  ECB7  F07F         	call	_LCD_Init	;wreg free
   146   00FEEE                     l29:
   147   00FEEE  EF77  F07F         	goto	l29
   148   00FEF2  EF00  F000         	goto	start
   149   00FEF6                     __end_of_main:
   150                           	callstack 0
   151                           
   152 ;; *************** function _LCD_Init *****************
   153 ;; Defined at:
   154 ;;		line 75 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;Total ram usage:        1 bytes
   173 ;; Hardware stack levels used: 1
   174 ;; Hardware stack levels required when called: 2
   175 ;; This function calls:
   176 ;;		_LCD_Set_Write
   177 ;; This function is called by:
   178 ;;		_main
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           	psect	text1
   183   00FF6E                     __ptext1:
   184                           	callstack 0
   185   00FF6E                     _LCD_Init:
   186                           	callstack 28
   187   00FF6E                     
   188                           ;main.c: 77:     _delay((unsigned long)((20)*(16000000/4000.0)));
   189   00FF6E  0E68               	movlw	104
   190   00FF70  6E05               	movwf	??_LCD_Init^0,c
   191   00FF72  0EE4               	movlw	228
   192   00FF74                     u37:
   193   00FF74  2EE8               	decfsz	wreg,f,c
   194   00FF76  D7FE               	bra	u37
   195   00FF78  2E05               	decfsz	??_LCD_Init^0,f,c
   196   00FF7A  D7FC               	bra	u37
   197   00FF7C  D000               	nop2	
   198   00FF7E                     
   199                           ;main.c: 78:     LCD_Set_Write(0, 0x30);
   200   00FF7E  0E30               	movlw	48
   201   00FF80  6E03               	movwf	LCD_Set_Write@Command^0,c
   202   00FF82  0E00               	movlw	0
   203   00FF84  EC7B  F07F         	call	_LCD_Set_Write
   204   00FF88                     
   205                           ;main.c: 79:     _delay((unsigned long)((5)*(16000000/4000.0)));
   206   00FF88  0E1A               	movlw	26
   207   00FF8A  6E05               	movwf	??_LCD_Init^0,c
   208   00FF8C  0EF8               	movlw	248
   209   00FF8E                     u47:
   210   00FF8E  2EE8               	decfsz	wreg,f,c
   211   00FF90  D7FE               	bra	u47
   212   00FF92  2E05               	decfsz	??_LCD_Init^0,f,c
   213   00FF94  D7FC               	bra	u47
   214   00FF96  D000               	nop2	
   215                           
   216                           ;main.c: 80:     LCD_Set_Write(0, 0x30);
   217   00FF98  0E30               	movlw	48
   218   00FF9A  6E03               	movwf	LCD_Set_Write@Command^0,c
   219   00FF9C  0E00               	movlw	0
   220   00FF9E  EC7B  F07F         	call	_LCD_Set_Write
   221   00FFA2                     
   222                           ;main.c: 81:     _delay((unsigned long)((5)*(16000000/4000.0)));
   223   00FFA2  0E1A               	movlw	26
   224   00FFA4  6E05               	movwf	??_LCD_Init^0,c
   225   00FFA6  0EF8               	movlw	248
   226   00FFA8                     u57:
   227   00FFA8  2EE8               	decfsz	wreg,f,c
   228   00FFAA  D7FE               	bra	u57
   229   00FFAC  2E05               	decfsz	??_LCD_Init^0,f,c
   230   00FFAE  D7FC               	bra	u57
   231   00FFB0  D000               	nop2	
   232   00FFB2                     
   233                           ;main.c: 82:     LCD_Set_Write(0, 0x30);
   234   00FFB2  0E30               	movlw	48
   235   00FFB4  6E03               	movwf	LCD_Set_Write@Command^0,c
   236   00FFB6  0E00               	movlw	0
   237   00FFB8  EC7B  F07F         	call	_LCD_Set_Write
   238   00FFBC                     
   239                           ;main.c: 83:     LCD_Set_Write(0, 0x02);
   240   00FFBC  0E02               	movlw	2
   241   00FFBE  6E03               	movwf	LCD_Set_Write@Command^0,c
   242   00FFC0  0E00               	movlw	0
   243   00FFC2  EC7B  F07F         	call	_LCD_Set_Write
   244   00FFC6                     
   245                           ;main.c: 84:     LCD_Set_Write(0, 0x06);
   246   00FFC6  0E06               	movlw	6
   247   00FFC8  6E03               	movwf	LCD_Set_Write@Command^0,c
   248   00FFCA  0E00               	movlw	0
   249   00FFCC  EC7B  F07F         	call	_LCD_Set_Write
   250   00FFD0                     
   251                           ;main.c: 85:     LCD_Set_Write(0, 0x0F);
   252   00FFD0  0E0F               	movlw	15
   253   00FFD2  6E03               	movwf	LCD_Set_Write@Command^0,c
   254   00FFD4  0E00               	movlw	0
   255   00FFD6  EC7B  F07F         	call	_LCD_Set_Write
   256   00FFDA                     
   257                           ;main.c: 86:     LCD_Set_Write(0, 0x28);
   258   00FFDA  0E28               	movlw	40
   259   00FFDC  6E03               	movwf	LCD_Set_Write@Command^0,c
   260   00FFDE  0E00               	movlw	0
   261   00FFE0  EC7B  F07F         	call	_LCD_Set_Write
   262   00FFE4                     
   263                           ;main.c: 87:     LCD_Set_Write(0, 0x01);
   264   00FFE4  0E01               	movlw	1
   265   00FFE6  6E03               	movwf	LCD_Set_Write@Command^0,c
   266   00FFE8  0E00               	movlw	0
   267   00FFEA  EC7B  F07F         	call	_LCD_Set_Write
   268   00FFEE                     
   269                           ;main.c: 88:     _delay((unsigned long)((5)*(16000000/4000.0)));
   270   00FFEE  0E1A               	movlw	26
   271   00FFF0  6E05               	movwf	??_LCD_Init^0,c
   272   00FFF2  0EF8               	movlw	248
   273   00FFF4                     u67:
   274   00FFF4  2EE8               	decfsz	wreg,f,c
   275   00FFF6  D7FE               	bra	u67
   276   00FFF8  2E05               	decfsz	??_LCD_Init^0,f,c
   277   00FFFA  D7FC               	bra	u67
   278   00FFFC  D000               	nop2	
   279   00FFFE  0012               	return		;funcret
   280   010000                     __end_of_LCD_Init:
   281                           	callstack 0
   282                           
   283 ;; *************** function _LCD_Set_Write *****************
   284 ;; Defined at:
   285 ;;		line 94 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  WR_SE           1    wreg     unsigned char 
   288 ;;  Command         1    2[COMRAM] unsigned char 
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  WR_SE           1    3[COMRAM] unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   300 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels used: 1
   306 ;; Hardware stack levels required when called: 1
   307 ;; This function calls:
   308 ;;		_LCD_Data_Instruction
   309 ;; This function is called by:
   310 ;;		_LCD_Init
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text2
   315   00FEF6                     __ptext2:
   316                           	callstack 0
   317   00FEF6                     _LCD_Set_Write:
   318                           	callstack 28
   319                           
   320                           ;incstack = 0
   321                           ;LCD_Set_Write@WR_SE stored from wreg
   322   00FEF6  6E04               	movwf	LCD_Set_Write@WR_SE^0,c
   323   00FEF8                     
   324                           ;main.c: 96:     LATCbits.LATC4 = WR_SE;
   325   00FEF8  B004               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   326   00FEFA  D002               	bra	u25
   327   00FEFC  988B               	bcf	139,4,c	;volatile
   328   00FEFE  D001               	bra	u26
   329   00FF00                     u25:
   330   00FF00  888B               	bsf	139,4,c	;volatile
   331   00FF02                     u26:
   332   00FF02                     
   333                           ;main.c: 97:     LCD_Data_Instruction(Command >> 4);
   334   00FF02  3803               	swapf	LCD_Set_Write@Command^0,w,c
   335   00FF04  0B0F               	andlw	15
   336   00FF06  EC99  F07F         	call	_LCD_Data_Instruction
   337   00FF0A                     
   338                           ;main.c: 98:     LCD_Data_Instruction(Command);
   339   00FF0A  5003               	movf	LCD_Set_Write@Command^0,w,c
   340   00FF0C  EC99  F07F         	call	_LCD_Data_Instruction
   341   00FF10  0012               	return		;funcret
   342   00FF12                     __end_of_LCD_Set_Write:
   343                           	callstack 0
   344                           
   345 ;; *************** function _LCD_Data_Instruction *****************
   346 ;; Defined at:
   347 ;;		line 104 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  Data            1    wreg     unsigned char 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  Data            1    1[COMRAM] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_LCD_Set_Write
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text3
   375   00FF32                     __ptext3:
   376                           	callstack 0
   377   00FF32                     _LCD_Data_Instruction:
   378                           	callstack 28
   379                           
   380                           ;incstack = 0
   381                           ;LCD_Data_Instruction@Data stored from wreg
   382   00FF32  6E02               	movwf	LCD_Data_Instruction@Data^0,c
   383   00FF34                     
   384                           ;main.c: 106:     LATCbits.LATC5 = 1;
   385   00FF34  8A8B               	bsf	139,5,c	;volatile
   386   00FF36                     
   387                           ;main.c: 107:     _delay((unsigned long)((15)*(16000000/4000.0)));
   388   00FF36  0E4E               	movlw	78
   389   00FF38  6E01               	movwf	??_LCD_Data_Instruction^0,c
   390   00FF3A  0EEB               	movlw	235
   391   00FF3C                     u77:
   392   00FF3C  2EE8               	decfsz	wreg,f,c
   393   00FF3E  D7FE               	bra	u77
   394   00FF40  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   395   00FF42  D7FC               	bra	u77
   396   00FF44  F000               	nop	
   397   00FF46                     
   398                           ;main.c: 108:     LATD = Data;
   399   00FF46  C002  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   400   00FF4A                     
   401                           ;main.c: 109:     _delay((unsigned long)((15)*(16000000/4000.0)));
   402   00FF4A  0E4E               	movlw	78
   403   00FF4C  6E01               	movwf	??_LCD_Data_Instruction^0,c
   404   00FF4E  0EEB               	movlw	235
   405   00FF50                     u87:
   406   00FF50  2EE8               	decfsz	wreg,f,c
   407   00FF52  D7FE               	bra	u87
   408   00FF54  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   409   00FF56  D7FC               	bra	u87
   410   00FF58  F000               	nop	
   411   00FF5A                     
   412                           ;main.c: 110:     LATCbits.LATC5 = 0;
   413   00FF5A  9A8B               	bcf	139,5,c	;volatile
   414   00FF5C                     
   415                           ;main.c: 111:     _delay((unsigned long)((15)*(16000000/4000.0)));
   416   00FF5C  0E4E               	movlw	78
   417   00FF5E  6E01               	movwf	??_LCD_Data_Instruction^0,c
   418   00FF60  0EEB               	movlw	235
   419   00FF62                     u97:
   420   00FF62  2EE8               	decfsz	wreg,f,c
   421   00FF64  D7FE               	bra	u97
   422   00FF66  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   423   00FF68  D7FC               	bra	u97
   424   00FF6A  F000               	nop	
   425   00FF6C  0012               	return		;funcret
   426   00FF6E                     __end_of_LCD_Data_Instruction:
   427                           	callstack 0
   428                           
   429 ;; *************** function _Configurations *****************
   430 ;; Defined at:
   431 ;;		line 49 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text4
   459   00FF12                     __ptext4:
   460                           	callstack 0
   461   00FF12                     _Configurations:
   462                           	callstack 30
   463   00FF12                     
   464                           ;main.c: 51:     OSCCON = 0x72;
   465   00FF12  0E72               	movlw	114
   466   00FF14  6ED3               	movwf	211,c	;volatile
   467   00FF16                     
   468                           ;main.c: 54:     ANSELCbits.ANSC4 = 0;
   469   00FF16  010F               	movlb	15	; () banked
   470   00FF18  993A               	bcf	58,4,b	;volatile
   471   00FF1A                     
   472                           ; BSR set to: 15
   473                           ;main.c: 55:     ANSELCbits.ANSC5 = 0;
   474   00FF1A  9B3A               	bcf	58,5,b	;volatile
   475                           
   476                           ;main.c: 57:     ANSELD = 0x00;
   477   00FF1C  0E00               	movlw	0
   478   00FF1E  6F3B               	movwf	59,b	;volatile
   479   00FF20                     
   480                           ; BSR set to: 15
   481                           ;main.c: 60:     TRISCbits.RC4 = 0;
   482   00FF20  9894               	bcf	148,4,c	;volatile
   483   00FF22                     
   484                           ; BSR set to: 15
   485                           ;main.c: 61:     TRISCbits.RC5 = 0;
   486   00FF22  9A94               	bcf	148,5,c	;volatile
   487                           
   488                           ;main.c: 63:     TRISD = 0x00;
   489   00FF24  0E00               	movlw	0
   490   00FF26  6E95               	movwf	149,c	;volatile
   491   00FF28                     
   492                           ; BSR set to: 15
   493                           ;main.c: 66:     LATCbits.LC4 = 0;
   494   00FF28  988B               	bcf	139,4,c	;volatile
   495   00FF2A                     
   496                           ; BSR set to: 15
   497                           ;main.c: 67:     LATCbits.LC5 = 0;
   498   00FF2A  9A8B               	bcf	139,5,c	;volatile
   499                           
   500                           ;main.c: 69:     LATD = 0;
   501   00FF2C  0E00               	movlw	0
   502   00FF2E  6E8C               	movwf	140,c	;volatile
   503   00FF30                     
   504                           ; BSR set to: 15
   505   00FF30  0012               	return		;funcret
   506   00FF32                     __end_of_Configurations:
   507                           	callstack 0
   508   000000                     
   509                           	psect	rparam
   510   000000                     
   511                           	psect	config
   512                           
   513                           ; Padding undefined space
   514   300000                     	org	3145728
   515   300000  FF                 	db	255
   516                           
   517                           ;Config register CONFIG1H @ 0x300001
   518                           ;	Oscillator Selection bits
   519                           ;	FOSC = INTIO67, Internal oscillator block
   520                           ;	4X PLL Enable
   521                           ;	PLLCFG = OFF, Oscillator used directly
   522                           ;	Primary clock enable bit
   523                           ;	PRICLKEN = ON, Primary clock is always enabled
   524                           ;	Fail-Safe Clock Monitor Enable bit
   525                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   526                           ;	Internal/External Oscillator Switchover bit
   527                           ;	IESO = OFF, Oscillator Switchover mode disabled
   528   300001                     	org	3145729
   529   300001  28                 	db	40
   530                           
   531                           ;Config register CONFIG2L @ 0x300002
   532                           ;	Power-up Timer Enable bit
   533                           ;	PWRTEN = OFF, Power up timer disabled
   534                           ;	Brown-out Reset Enable bits
   535                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   536                           ;	Brown Out Reset Voltage bits
   537                           ;	BORV = 190, VBOR set to 1.90 V nominal
   538   300002                     	org	3145730
   539   300002  1F                 	db	31
   540                           
   541                           ;Config register CONFIG2H @ 0x300003
   542                           ;	Watchdog Timer Enable bits
   543                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   544                           ;	Watchdog Timer Postscale Select bits
   545                           ;	WDTPS = 32768, 1:32768
   546   300003                     	org	3145731
   547   300003  3C                 	db	60
   548                           
   549                           ; Padding undefined space
   550   300004                     	org	3145732
   551   300004  FF                 	db	255
   552                           
   553                           ;Config register CONFIG3H @ 0x300005
   554                           ;	CCP2 MUX bit
   555                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   556                           ;	PORTB A/D Enable bit
   557                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   558                           ;	P3A/CCP3 Mux bit
   559                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   560                           ;	HFINTOSC Fast Start-up
   561                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   562                           ;	Timer3 Clock input mux bit
   563                           ;	T3CMX = PORTC0, T3CKI is on RC0
   564                           ;	ECCP2 B output mux bit
   565                           ;	P2BMX = PORTD2, P2B is on RD2
   566                           ;	MCLR Pin Enable bit
   567                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   568   300005                     	org	3145733
   569   300005  BF                 	db	191
   570                           
   571                           ;Config register CONFIG4L @ 0x300006
   572                           ;	Stack Full/Underflow Reset Enable bit
   573                           ;	STVREN = ON, Stack full/underflow will cause Reset
   574                           ;	Single-Supply ICSP Enable bit
   575                           ;	LVP = OFF, Single-Supply ICSP disabled
   576                           ;	Extended Instruction Set Enable bit
   577                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   578                           ;	Background Debug
   579                           ;	DEBUG = 0x1, unprogrammed default
   580   300006                     	org	3145734
   581   300006  81                 	db	129
   582                           
   583                           ; Padding undefined space
   584   300007                     	org	3145735
   585   300007  FF                 	db	255
   586                           
   587                           ;Config register CONFIG5L @ 0x300008
   588                           ;	Code Protection Block 0
   589                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   590                           ;	Code Protection Block 1
   591                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   592                           ;	Code Protection Block 2
   593                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   594                           ;	Code Protection Block 3
   595                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   596   300008                     	org	3145736
   597   300008  0F                 	db	15
   598                           
   599                           ;Config register CONFIG5H @ 0x300009
   600                           ;	Boot Block Code Protection bit
   601                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   602                           ;	Data EEPROM Code Protection bit
   603                           ;	CPD = OFF, Data EEPROM not code-protected
   604   300009                     	org	3145737
   605   300009  C0                 	db	192
   606                           
   607                           ;Config register CONFIG6L @ 0x30000A
   608                           ;	Write Protection Block 0
   609                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   610                           ;	Write Protection Block 1
   611                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   612                           ;	Write Protection Block 2
   613                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   614                           ;	Write Protection Block 3
   615                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   616   30000A                     	org	3145738
   617   30000A  0F                 	db	15
   618                           
   619                           ;Config register CONFIG6H @ 0x30000B
   620                           ;	Configuration Register Write Protection bit
   621                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   622                           ;	Boot Block Write Protection bit
   623                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   624                           ;	Data EEPROM Write Protection bit
   625                           ;	WRTD = OFF, Data EEPROM not write-protected
   626   30000B                     	org	3145739
   627   30000B  E0                 	db	224
   628                           
   629                           ;Config register CONFIG7L @ 0x30000C
   630                           ;	Table Read Protection Block 0
   631                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   632                           ;	Table Read Protection Block 1
   633                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   634                           ;	Table Read Protection Block 2
   635                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   636                           ;	Table Read Protection Block 3
   637                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   638   30000C                     	org	3145740
   639   30000C  0F                 	db	15
   640                           
   641                           ;Config register CONFIG7H @ 0x30000D
   642                           ;	Boot Block Table Read Protection bit
   643                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   644   30000D                     	org	3145741
   645   30000D  40                 	db	64
   646                           tosu	equ	0xFFF
   647                           tosh	equ	0xFFE
   648                           tosl	equ	0xFFD
   649                           stkptr	equ	0xFFC
   650                           pclatu	equ	0xFFB
   651                           pclath	equ	0xFFA
   652                           pcl	equ	0xFF9
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           prodh	equ	0xFF4
   658                           prodl	equ	0xFF3
   659                           indf0	equ	0xFEF
   660                           postinc0	equ	0xFEE
   661                           postdec0	equ	0xFED
   662                           preinc0	equ	0xFEC
   663                           plusw0	equ	0xFEB
   664                           fsr0h	equ	0xFEA
   665                           fsr0l	equ	0xFE9
   666                           wreg	equ	0xFE8
   667                           indf1	equ	0xFE7
   668                           postinc1	equ	0xFE6
   669                           postdec1	equ	0xFE5
   670                           preinc1	equ	0xFE4
   671                           plusw1	equ	0xFE3
   672                           fsr1h	equ	0xFE2
   673                           fsr1l	equ	0xFE1
   674                           bsr	equ	0xFE0
   675                           indf2	equ	0xFDF
   676                           postinc2	equ	0xFDE
   677                           postdec2	equ	0xFDD
   678                           preinc2	equ	0xFDC
   679                           plusw2	equ	0xFDB
   680                           fsr2h	equ	0xFDA
   681                           fsr2l	equ	0xFD9
   682                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     689
                     _Configurations
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     689
                                              4 COMRAM     1     1      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1     689
                                              2 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRh          2C      0       0      37        0.0%
BITBIGSFRlhh        3D      0       0      38        0.0%
BITBIGSFRlhlh        7      0       0      39        0.0%
BITBIGSFRlhll       4F      0       0      40        0.0%
BITBIGSFRll          2      0       0      41        0.0%
BIGRAM             F37      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jan 16 23:44:44 2024

                          l30 FEEE                            l41 FF10                            l35 FF30  
                          l44 FF6C                            l29 FEEE                            l38 FFFE  
                          u25 FF00                            u26 FF02                            u37 FF74  
                          u47 FF8E                            u57 FFA8                            u67 FFF4  
                          u77 FF3C                            u87 FF50                            u97 FF62  
                         l720 FF34                           l800 FFDA                           l730 FF5C  
                         l722 FF36                           l802 FFE4                           l740 FF16  
                         l724 FF46                           l804 FFEE                           l750 FF2A  
                         l742 FF1A                           l726 FF4A                           l806 FEE6  
                         l744 FF20                           l728 FF5A                           l808 FEEA  
                         l746 FF22                           l738 FF12                           l748 FF28  
                         l780 FF02                           l782 FF0A                           l790 FFA2  
                         l792 FFB2                           l784 FF6E                           l778 FEF8  
                         l794 FFBC                           l786 FF7E                           l796 FFC6  
                         l788 FF88                           l798 FFD0                 _LCD_Set_Write FEF6  
                         wreg 0FE8                          _LATD 0F8C                          _main FEE6  
                        start 0000                  ___param_bank 0000              __end_of_LCD_Init 0000  
                       ?_main 0001                ?_LCD_Set_Write 0003                         _TRISD 0F95  
             __initialization FEE0                  __end_of_main FEF6                        ??_main 0006  
               __activetblptr 0000                        _ANSELD 0F3B                        _OSCCON 0FD3  
          LCD_Set_Write@WR_SE 0004               ??_LCD_Set_Write 0004                        isa$std 0001  
                  __accesstop 0060       __end_of__initialization FEE0                     ?_LCD_Init 0001  
               ___rparam_used 0001                __pcstackCOMRAM 0001                    ??_LCD_Init 0005  
                     __Hparam 0000                       __Lparam 0000                       __pcinit FEE0  
                     __ramtop 1000                       __ptext0 FEE6                       __ptext1 FF6E  
                     __ptext2 FEF6                       __ptext3 FF32                       __ptext4 FF12  
        end_of_initialization FEE0                     _TRISCbits 0F94         __end_of_LCD_Set_Write FF12  
         start_initialization FEE0  __end_of_LCD_Data_Instruction FF6E                _Configurations FF12  
      __end_of_Configurations FF32      LCD_Data_Instruction@Data 0002               ?_Configurations 0001  
                    _LCD_Init FF6E                      _LATCbits 0F8B          _LCD_Data_Instruction FF32  
        LCD_Set_Write@Command 0003                      __Hrparam 0000         ?_LCD_Data_Instruction 0001  
                    __Lrparam 0000                    _ANSELCbits 0F3A                      isa$xinst 0000  
      ??_LCD_Data_Instruction 0001              ??_Configurations 0001  
