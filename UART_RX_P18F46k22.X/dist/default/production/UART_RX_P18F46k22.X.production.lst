

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jan 25 18:37:22 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 09/02/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F46K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _ANSELCbits	set	3898
    53   000000                     _OSCCON	set	4051
    54   000000                     _LATCbits	set	3979
    55   000000                     _TRISCbits	set	3988
    56   000000                     _ANSELD	set	3899
    57   000000                     _RCSTA1bits	set	4011
    58   000000                     _TXSTA1bits	set	4012
    59   000000                     _TRISD	set	3989
    60   000000                     _LATD	set	3980
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   000136                     __pcinit:
    66                           	callstack 0
    67   000136                     start_initialization:
    68                           	callstack 0
    69   000136                     __initialization:
    70                           	callstack 0
    71   000136                     end_of_initialization:
    72                           	callstack 0
    73   000136                     __end_of__initialization:
    74                           	callstack 0
    75   000136  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76   000138  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77   00013A  0100               	movlb	0
    78   00013C  EF93  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     ??_LCD_Data_Instruction:
    84   000001                     
    85                           ; 1 bytes @ 0x0
    86   000001                     	ds	1
    87   000002                     LCD_Data_Instruction@Data:
    88                           	callstack 0
    89                           
    90                           ; 1 bytes @ 0x1
    91   000002                     	ds	1
    92   000003                     LCD_Set_Write@Command:
    93                           	callstack 0
    94                           
    95                           ; 1 bytes @ 0x2
    96   000003                     	ds	1
    97   000004                     LCD_Set_Write@WR_SE:
    98                           	callstack 0
    99                           
   100                           ; 1 bytes @ 0x3
   101   000004                     	ds	1
   102   000005                     ??_LCD_Init:
   103                           
   104                           ; 1 bytes @ 0x4
   105   000005                     	ds	1
   106   000006                     
   107                           ; 1 bytes @ 0x5
   108 ;;
   109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   110 ;;
   111 ;; *************** function _main *****************
   112 ;; Defined at:
   113 ;;		line 35 in file "main.c"
   114 ;; Parameters:    Size  Location     Type
   115 ;;		None
   116 ;; Auto vars:     Size  Location     Type
   117 ;;		None
   118 ;; Return value:  Size  Location     Type
   119 ;;                  1    wreg      void 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   131 ;;Total ram usage:        0 bytes
   132 ;; Hardware stack levels required when called: 4
   133 ;; This function calls:
   134 ;;		_Configurations
   135 ;;		_LCD_Init
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142   000126                     __ptext0:
   143                           	callstack 0
   144   000126                     _main:
   145                           	callstack 27
   146   000126                     
   147                           ;main.c: 38:     Configurations();
   148   000126  EC70  F000         	call	_Configurations	;wreg free
   149   00012A                     
   150                           ;main.c: 39:     LCD_Init();
   151   00012A  EC09  F000         	call	_LCD_Init	;wreg free
   152   00012E                     l33:
   153   00012E  EF97  F000         	goto	l33
   154   000132  EF07  F000         	goto	start
   155   000136                     __end_of_main:
   156                           	callstack 0
   157                           
   158 ;; *************** function _LCD_Init *****************
   159 ;; Defined at:
   160 ;;		line 85 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;Total ram usage:        1 bytes
   179 ;; Hardware stack levels used: 1
   180 ;; Hardware stack levels required when called: 3
   181 ;; This function calls:
   182 ;;		_LCD_Set_Write
   183 ;; This function is called by:
   184 ;;		_main
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text1
   189   000012                     __ptext1:
   190                           	callstack 0
   191   000012                     _LCD_Init:
   192                           	callstack 27
   193   000012                     
   194                           ;main.c: 87:     _delay((unsigned long)((20)*(16000000/4000.0)));
   195   000012  0E68               	movlw	104
   196   000014  6E05               	movwf	??_LCD_Init^0,c
   197   000016  0EE4               	movlw	228
   198   000018                     u37:
   199   000018  2EE8               	decfsz	wreg,f,c
   200   00001A  D7FE               	bra	u37
   201   00001C  2E05               	decfsz	??_LCD_Init^0,f,c
   202   00001E  D7FC               	bra	u37
   203   000020  D000               	nop2	
   204   000022                     
   205                           ;main.c: 88:     LCD_Set_Write(0, 0x30);
   206   000022  0E30               	movlw	48
   207   000024  6E03               	movwf	LCD_Set_Write@Command^0,c
   208   000026  0E00               	movlw	0
   209   000028  EC85  F000         	call	_LCD_Set_Write
   210   00002C                     
   211                           ;main.c: 89:     _delay((unsigned long)((5)*(16000000/4000.0)));
   212   00002C  0E1A               	movlw	26
   213   00002E  6E05               	movwf	??_LCD_Init^0,c
   214   000030  0EF8               	movlw	248
   215   000032                     u47:
   216   000032  2EE8               	decfsz	wreg,f,c
   217   000034  D7FE               	bra	u47
   218   000036  2E05               	decfsz	??_LCD_Init^0,f,c
   219   000038  D7FC               	bra	u47
   220   00003A  D000               	nop2	
   221                           
   222                           ;main.c: 90:     LCD_Set_Write(0, 0x30);
   223   00003C  0E30               	movlw	48
   224   00003E  6E03               	movwf	LCD_Set_Write@Command^0,c
   225   000040  0E00               	movlw	0
   226   000042  EC85  F000         	call	_LCD_Set_Write
   227   000046                     
   228                           ;main.c: 91:     _delay((unsigned long)((5)*(16000000/4000.0)));
   229   000046  0E1A               	movlw	26
   230   000048  6E05               	movwf	??_LCD_Init^0,c
   231   00004A  0EF8               	movlw	248
   232   00004C                     u57:
   233   00004C  2EE8               	decfsz	wreg,f,c
   234   00004E  D7FE               	bra	u57
   235   000050  2E05               	decfsz	??_LCD_Init^0,f,c
   236   000052  D7FC               	bra	u57
   237   000054  D000               	nop2	
   238   000056                     
   239                           ;main.c: 92:     LCD_Set_Write(0, 0x30);
   240   000056  0E30               	movlw	48
   241   000058  6E03               	movwf	LCD_Set_Write@Command^0,c
   242   00005A  0E00               	movlw	0
   243   00005C  EC85  F000         	call	_LCD_Set_Write
   244   000060                     
   245                           ;main.c: 93:     LCD_Set_Write(0, 0x02);
   246   000060  0E02               	movlw	2
   247   000062  6E03               	movwf	LCD_Set_Write@Command^0,c
   248   000064  0E00               	movlw	0
   249   000066  EC85  F000         	call	_LCD_Set_Write
   250   00006A                     
   251                           ;main.c: 94:     LCD_Set_Write(0, 0x06);
   252   00006A  0E06               	movlw	6
   253   00006C  6E03               	movwf	LCD_Set_Write@Command^0,c
   254   00006E  0E00               	movlw	0
   255   000070  EC85  F000         	call	_LCD_Set_Write
   256   000074                     
   257                           ;main.c: 95:     LCD_Set_Write(0, 0x0F);
   258   000074  0E0F               	movlw	15
   259   000076  6E03               	movwf	LCD_Set_Write@Command^0,c
   260   000078  0E00               	movlw	0
   261   00007A  EC85  F000         	call	_LCD_Set_Write
   262   00007E                     
   263                           ;main.c: 96:     LCD_Set_Write(0, 0x28);
   264   00007E  0E28               	movlw	40
   265   000080  6E03               	movwf	LCD_Set_Write@Command^0,c
   266   000082  0E00               	movlw	0
   267   000084  EC85  F000         	call	_LCD_Set_Write
   268   000088                     
   269                           ;main.c: 97:     LCD_Set_Write(0, 0x01);
   270   000088  0E01               	movlw	1
   271   00008A  6E03               	movwf	LCD_Set_Write@Command^0,c
   272   00008C  0E00               	movlw	0
   273   00008E  EC85  F000         	call	_LCD_Set_Write
   274   000092                     
   275                           ;main.c: 98:     _delay((unsigned long)((5)*(16000000/4000.0)));
   276   000092  0E1A               	movlw	26
   277   000094  6E05               	movwf	??_LCD_Init^0,c
   278   000096  0EF8               	movlw	248
   279   000098                     u67:
   280   000098  2EE8               	decfsz	wreg,f,c
   281   00009A  D7FE               	bra	u67
   282   00009C  2E05               	decfsz	??_LCD_Init^0,f,c
   283   00009E  D7FC               	bra	u67
   284   0000A0  D000               	nop2	
   285   0000A2  0012               	return		;funcret
   286   0000A4                     __end_of_LCD_Init:
   287                           	callstack 0
   288                           
   289 ;; *************** function _LCD_Set_Write *****************
   290 ;; Defined at:
   291 ;;		line 104 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;  WR_SE           1    wreg     unsigned char 
   294 ;;  Command         1    2[COMRAM] unsigned char 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  WR_SE           1    3[COMRAM] unsigned char 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;Total ram usage:        2 bytes
   311 ;; Hardware stack levels used: 1
   312 ;; Hardware stack levels required when called: 2
   313 ;; This function calls:
   314 ;;		_LCD_Data_Instruction
   315 ;; This function is called by:
   316 ;;		_LCD_Init
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text2
   321   00010A                     __ptext2:
   322                           	callstack 0
   323   00010A                     _LCD_Set_Write:
   324                           	callstack 27
   325                           
   326                           ;incstack = 0
   327                           ;LCD_Set_Write@WR_SE stored from wreg
   328   00010A  6E04               	movwf	LCD_Set_Write@WR_SE^0,c
   329   00010C                     
   330                           ;main.c: 106:     LATCbits.LATC4 = WR_SE;
   331   00010C  B004               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   332   00010E  D002               	bra	u25
   333   000110  988B               	bcf	139,4,c	;volatile
   334   000112  D001               	bra	u26
   335   000114                     u25:
   336   000114  888B               	bsf	139,4,c	;volatile
   337   000116                     u26:
   338   000116                     
   339                           ;main.c: 107:     LCD_Data_Instruction(Command >> 4);
   340   000116  3803               	swapf	LCD_Set_Write@Command^0,w,c
   341   000118  0B0F               	andlw	15
   342   00011A  EC52  F000         	call	_LCD_Data_Instruction
   343   00011E                     
   344                           ;main.c: 108:     LCD_Data_Instruction(Command);
   345   00011E  5003               	movf	LCD_Set_Write@Command^0,w,c
   346   000120  EC52  F000         	call	_LCD_Data_Instruction
   347   000124  0012               	return		;funcret
   348   000126                     __end_of_LCD_Set_Write:
   349                           	callstack 0
   350                           
   351 ;; *************** function _LCD_Data_Instruction *****************
   352 ;; Defined at:
   353 ;;		line 114 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  Data            1    wreg     unsigned char 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  Data            1    1[COMRAM] unsigned char 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        2 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; Hardware stack levels required when called: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_LCD_Set_Write
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text3
   382   0000A4                     __ptext3:
   383                           	callstack 0
   384   0000A4                     _LCD_Data_Instruction:
   385                           	callstack 27
   386                           
   387                           ;incstack = 0
   388                           ;LCD_Data_Instruction@Data stored from wreg
   389   0000A4  6E02               	movwf	LCD_Data_Instruction@Data^0,c
   390   0000A6                     
   391                           ;main.c: 116:     LATCbits.LATC5 = 1;
   392   0000A6  8A8B               	bsf	139,5,c	;volatile
   393   0000A8                     
   394                           ;main.c: 117:     _delay((unsigned long)((15)*(16000000/4000.0)));
   395   0000A8  0E4E               	movlw	78
   396   0000AA  6E01               	movwf	??_LCD_Data_Instruction^0,c
   397   0000AC  0EEB               	movlw	235
   398   0000AE                     u77:
   399   0000AE  2EE8               	decfsz	wreg,f,c
   400   0000B0  D7FE               	bra	u77
   401   0000B2  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   402   0000B4  D7FC               	bra	u77
   403   0000B6  F000               	nop	
   404   0000B8                     
   405                           ;main.c: 118:     LATD = Data;
   406   0000B8  C002  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   407   0000BC                     
   408                           ;main.c: 119:     _delay((unsigned long)((15)*(16000000/4000.0)));
   409   0000BC  0E4E               	movlw	78
   410   0000BE  6E01               	movwf	??_LCD_Data_Instruction^0,c
   411   0000C0  0EEB               	movlw	235
   412   0000C2                     u87:
   413   0000C2  2EE8               	decfsz	wreg,f,c
   414   0000C4  D7FE               	bra	u87
   415   0000C6  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   416   0000C8  D7FC               	bra	u87
   417   0000CA  F000               	nop	
   418   0000CC                     
   419                           ;main.c: 120:     LATCbits.LATC5 = 0;
   420   0000CC  9A8B               	bcf	139,5,c	;volatile
   421   0000CE                     
   422                           ;main.c: 121:     _delay((unsigned long)((15)*(16000000/4000.0)));
   423   0000CE  0E4E               	movlw	78
   424   0000D0  6E01               	movwf	??_LCD_Data_Instruction^0,c
   425   0000D2  0EEB               	movlw	235
   426   0000D4                     u97:
   427   0000D4  2EE8               	decfsz	wreg,f,c
   428   0000D6  D7FE               	bra	u97
   429   0000D8  2E01               	decfsz	??_LCD_Data_Instruction^0,f,c
   430   0000DA  D7FC               	bra	u97
   431   0000DC  F000               	nop	
   432   0000DE  0012               	return		;funcret
   433   0000E0                     __end_of_LCD_Data_Instruction:
   434                           	callstack 0
   435                           
   436 ;; *************** function _Configurations *****************
   437 ;; Defined at:
   438 ;;		line 49 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text4
   467   0000E0                     __ptext4:
   468                           	callstack 0
   469   0000E0                     _Configurations:
   470                           	callstack 29
   471   0000E0                     
   472                           ;main.c: 51:     OSCCON = 0x72;
   473   0000E0  0E72               	movlw	114
   474   0000E2  6ED3               	movwf	211,c	;volatile
   475   0000E4                     
   476                           ;main.c: 54:     ANSELCbits.ANSC4 = 0;
   477   0000E4  010F               	movlb	15	; () banked
   478   0000E6  993A               	bcf	58,4,b	;volatile
   479   0000E8                     
   480                           ; BSR set to: 15
   481                           ;main.c: 55:     ANSELCbits.ANSC5 = 0;
   482   0000E8  9B3A               	bcf	58,5,b	;volatile
   483   0000EA                     
   484                           ; BSR set to: 15
   485                           ;main.c: 56:     ANSELCbits.ANSC6 = 0;
   486   0000EA  9D3A               	bcf	58,6,b	;volatile
   487   0000EC                     
   488                           ; BSR set to: 15
   489                           ;main.c: 57:     ANSELCbits.ANSC7 = 0;
   490   0000EC  9F3A               	bcf	58,7,b	;volatile
   491                           
   492                           ;main.c: 59:     ANSELD = 0x00;
   493   0000EE  0E00               	movlw	0
   494   0000F0  6F3B               	movwf	59,b	;volatile
   495   0000F2                     
   496                           ; BSR set to: 15
   497                           ;main.c: 62:     TRISCbits.RC4 = 0;
   498   0000F2  9894               	bcf	148,4,c	;volatile
   499   0000F4                     
   500                           ; BSR set to: 15
   501                           ;main.c: 63:     TRISCbits.RC5 = 0;
   502   0000F4  9A94               	bcf	148,5,c	;volatile
   503                           
   504                           ;main.c: 65:     TRISD = 0x00;
   505   0000F6  0E00               	movlw	0
   506   0000F8  6E95               	movwf	149,c	;volatile
   507   0000FA                     
   508                           ; BSR set to: 15
   509                           ;main.c: 68:     LATCbits.LC4 = 0;
   510   0000FA  988B               	bcf	139,4,c	;volatile
   511   0000FC                     
   512                           ; BSR set to: 15
   513                           ;main.c: 69:     LATCbits.LC5 = 0;
   514   0000FC  9A8B               	bcf	139,5,c	;volatile
   515                           
   516                           ;main.c: 71:     LATD = 0;
   517   0000FE  0E00               	movlw	0
   518   000100  6E8C               	movwf	140,c	;volatile
   519   000102                     
   520                           ; BSR set to: 15
   521                           ;main.c: 76:     TXSTA1bits.SYNC = 0;
   522   000102  98AC               	bcf	172,4,c	;volatile
   523   000104                     
   524                           ; BSR set to: 15
   525                           ;main.c: 77:     RCSTA1bits.SPEN = 1;
   526   000104  8EAB               	bsf	171,7,c	;volatile
   527   000106                     
   528                           ; BSR set to: 15
   529                           ;main.c: 78:     RCSTA1bits.CREN = 1;
   530   000106  88AB               	bsf	171,4,c	;volatile
   531   000108                     
   532                           ; BSR set to: 15
   533   000108  0012               	return		;funcret
   534   00010A                     __end_of_Configurations:
   535                           	callstack 0
   536                           
   537 ;; *************** function _EUSART_Int_Rx *****************
   538 ;; Defined at:
   539 ;;		line 125 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		None
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		Interrupt level 2
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	intcode
   567   000008                     __pintcode:
   568                           	callstack 0
   569   000008                     _EUSART_Int_Rx:
   570                           	callstack 27
   571                           
   572                           ; BSR set to: 15
   573                           ;incstack = 0
   574   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   575   00000A  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   576   00000C  0011               	retfie		f
   577   00000E                     __end_of_EUSART_Int_Rx:
   578                           	callstack 0
   579   000000                     
   580                           	psect	rparam
   581   000000                     
   582                           	psect	temp
   583   000006                     btemp:
   584                           	callstack 0
   585   000006                     	ds	1
   586   000000                     int$flags	set	btemp
   587   000000                     wtemp8	set	btemp+1
   588   000000                     ttemp5	set	btemp+1
   589   000000                     ttemp6	set	btemp+4
   590   000000                     ttemp7	set	btemp+8
   591                           
   592                           	psect	config
   593                           
   594                           ; Padding undefined space
   595   300000                     	org	3145728
   596   300000  FF                 	db	255
   597                           
   598                           ;Config register CONFIG1H @ 0x300001
   599                           ;	Oscillator Selection bits
   600                           ;	FOSC = INTIO67, Internal oscillator block
   601                           ;	4X PLL Enable
   602                           ;	PLLCFG = OFF, Oscillator used directly
   603                           ;	Primary clock enable bit
   604                           ;	PRICLKEN = ON, Primary clock is always enabled
   605                           ;	Fail-Safe Clock Monitor Enable bit
   606                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   607                           ;	Internal/External Oscillator Switchover bit
   608                           ;	IESO = OFF, Oscillator Switchover mode disabled
   609   300001                     	org	3145729
   610   300001  28                 	db	40
   611                           
   612                           ;Config register CONFIG2L @ 0x300002
   613                           ;	Power-up Timer Enable bit
   614                           ;	PWRTEN = OFF, Power up timer disabled
   615                           ;	Brown-out Reset Enable bits
   616                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   617                           ;	Brown Out Reset Voltage bits
   618                           ;	BORV = 190, VBOR set to 1.90 V nominal
   619   300002                     	org	3145730
   620   300002  1F                 	db	31
   621                           
   622                           ;Config register CONFIG2H @ 0x300003
   623                           ;	Watchdog Timer Enable bits
   624                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   625                           ;	Watchdog Timer Postscale Select bits
   626                           ;	WDTPS = 32768, 1:32768
   627   300003                     	org	3145731
   628   300003  3C                 	db	60
   629                           
   630                           ; Padding undefined space
   631   300004                     	org	3145732
   632   300004  FF                 	db	255
   633                           
   634                           ;Config register CONFIG3H @ 0x300005
   635                           ;	CCP2 MUX bit
   636                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   637                           ;	PORTB A/D Enable bit
   638                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   639                           ;	P3A/CCP3 Mux bit
   640                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   641                           ;	HFINTOSC Fast Start-up
   642                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   643                           ;	Timer3 Clock input mux bit
   644                           ;	T3CMX = PORTC0, T3CKI is on RC0
   645                           ;	ECCP2 B output mux bit
   646                           ;	P2BMX = PORTD2, P2B is on RD2
   647                           ;	MCLR Pin Enable bit
   648                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   649   300005                     	org	3145733
   650   300005  BF                 	db	191
   651                           
   652                           ;Config register CONFIG4L @ 0x300006
   653                           ;	Stack Full/Underflow Reset Enable bit
   654                           ;	STVREN = ON, Stack full/underflow will cause Reset
   655                           ;	Single-Supply ICSP Enable bit
   656                           ;	LVP = OFF, Single-Supply ICSP disabled
   657                           ;	Extended Instruction Set Enable bit
   658                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   659                           ;	Background Debug
   660                           ;	DEBUG = 0x1, unprogrammed default
   661   300006                     	org	3145734
   662   300006  81                 	db	129
   663                           
   664                           ; Padding undefined space
   665   300007                     	org	3145735
   666   300007  FF                 	db	255
   667                           
   668                           ;Config register CONFIG5L @ 0x300008
   669                           ;	Code Protection Block 0
   670                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   671                           ;	Code Protection Block 1
   672                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   673                           ;	Code Protection Block 2
   674                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   675                           ;	Code Protection Block 3
   676                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   677   300008                     	org	3145736
   678   300008  0F                 	db	15
   679                           
   680                           ;Config register CONFIG5H @ 0x300009
   681                           ;	Boot Block Code Protection bit
   682                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   683                           ;	Data EEPROM Code Protection bit
   684                           ;	CPD = OFF, Data EEPROM not code-protected
   685   300009                     	org	3145737
   686   300009  C0                 	db	192
   687                           
   688                           ;Config register CONFIG6L @ 0x30000A
   689                           ;	Write Protection Block 0
   690                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   691                           ;	Write Protection Block 1
   692                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   693                           ;	Write Protection Block 2
   694                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   695                           ;	Write Protection Block 3
   696                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   697   30000A                     	org	3145738
   698   30000A  0F                 	db	15
   699                           
   700                           ;Config register CONFIG6H @ 0x30000B
   701                           ;	Configuration Register Write Protection bit
   702                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   703                           ;	Boot Block Write Protection bit
   704                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   705                           ;	Data EEPROM Write Protection bit
   706                           ;	WRTD = OFF, Data EEPROM not write-protected
   707   30000B                     	org	3145739
   708   30000B  E0                 	db	224
   709                           
   710                           ;Config register CONFIG7L @ 0x30000C
   711                           ;	Table Read Protection Block 0
   712                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   713                           ;	Table Read Protection Block 1
   714                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   715                           ;	Table Read Protection Block 2
   716                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   717                           ;	Table Read Protection Block 3
   718                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   719   30000C                     	org	3145740
   720   30000C  0F                 	db	15
   721                           
   722                           ;Config register CONFIG7H @ 0x30000D
   723                           ;	Boot Block Table Read Protection bit
   724                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   725   30000D                     	org	3145741
   726   30000D  40                 	db	64
   727                           tosu	equ	0xFFF
   728                           tosh	equ	0xFFE
   729                           tosl	equ	0xFFD
   730                           stkptr	equ	0xFFC
   731                           pclatu	equ	0xFFB
   732                           pclath	equ	0xFFA
   733                           pcl	equ	0xFF9
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           prodh	equ	0xFF4
   739                           prodl	equ	0xFF3
   740                           indf0	equ	0xFEF
   741                           postinc0	equ	0xFEE
   742                           postdec0	equ	0xFED
   743                           preinc0	equ	0xFEC
   744                           plusw0	equ	0xFEB
   745                           fsr0h	equ	0xFEA
   746                           fsr0l	equ	0xFE9
   747                           wreg	equ	0xFE8
   748                           indf1	equ	0xFE7
   749                           postinc1	equ	0xFE6
   750                           postdec1	equ	0xFE5
   751                           preinc1	equ	0xFE4
   752                           plusw1	equ	0xFE3
   753                           fsr1h	equ	0xFE2
   754                           fsr1l	equ	0xFE1
   755                           bsr	equ	0xFE0
   756                           indf2	equ	0xFDF
   757                           postinc2	equ	0xFDE
   758                           postdec2	equ	0xFDD
   759                           preinc2	equ	0xFDC
   760                           plusw2	equ	0xFDB
   761                           fsr2h	equ	0xFDA
   762                           fsr2l	equ	0xFD9
   763                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     689
                     _Configurations
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     689
                                              4 COMRAM     1     1      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1     689
                                              2 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction

 _EUSART_Int_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRh          2C      0       0      36        0.0%
BITBIGSFRlhhh       26      0       0      37        0.0%
BITBIGSFRlhhl       15      0       0      38        0.0%
BITBIGSFRlhlh        7      0       0      39        0.0%
BITBIGSFRlhll       4F      0       0      40        0.0%
BITBIGSFRll          2      0       0      41        0.0%
ABS                  0      0       0      42        0.0%
BIGRAM             F37      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jan 25 18:37:22 2024

                          l33 012E                            l42 00A2                            l34 012E  
                          l45 0124                            l39 0108                            l48 00DE  
                          u25 0114                            u26 0116                            u37 0018  
                          u47 0032                            u57 004C                            u67 0098  
                          u77 00AE                            u87 00C2                            u97 00D4  
                         l801 011E                           l731 00A8                           l811 0056  
                         l803 0012                           l733 00B8                           l821 0088  
                         l813 0060                           l805 0022                           l751 00E8  
                         l735 00BC                           l823 0092                           l815 006A  
                         l807 002C                           l761 00FA                           l753 00EA  
                         l737 00CC                           l729 00A6                           l817 0074  
                         l809 0046                           l825 0126                           l763 00FC  
                         l755 00EC                           l747 00E0                           l739 00CE  
                         l819 007E                           l827 012A                           l765 0102  
                         l757 00F2                           l749 00E4                           l767 0104  
                         l759 00F4                           l769 0106                           l797 010C  
                         l799 0116                 _LCD_Set_Write 010A                           wreg 0FE8  
                  _TXSTA1bits 0FAC                          _LATD 0F8C                          i2l53 000A  
                        _main 0126                          btemp 0006                          start 000E  
                ___param_bank 0000              __end_of_LCD_Init 00A4                         ?_main 0001  
              ?_LCD_Set_Write 0003                 _EUSART_Int_Rx 0008                         _TRISD 0F95  
                       ttemp5 0007                         ttemp6 000A                         ttemp7 000E  
                       wtemp8 0007               __initialization 0136                  __end_of_main 0136  
                      ??_main 0006                ?_EUSART_Int_Rx 0001                 __activetblptr 0000  
                      _ANSELD 0F3B                        _OSCCON 0FD3            LCD_Set_Write@WR_SE 0004  
             ??_LCD_Set_Write 0004                        isa$std 0001                    __accesstop 0060  
     __end_of__initialization 0136                     ?_LCD_Init 0001                 ___rparam_used 0001  
              __pcstackCOMRAM 0001               ??_EUSART_Int_Rx 0001                    ??_LCD_Init 0005  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 0136  
                     __ramtop 1000                       __ptext0 0126                       __ptext1 0012  
                     __ptext2 010A                       __ptext3 00A4                       __ptext4 00E0  
        end_of_initialization 0136                     _TRISCbits 0F94         __end_of_LCD_Set_Write 0126  
         start_initialization 0136  __end_of_LCD_Data_Instruction 00E0                _Configurations 00E0  
       __end_of_EUSART_Int_Rx 000E        __end_of_Configurations 010A      LCD_Data_Instruction@Data 0002  
                   __pintcode 0008               ?_Configurations 0001                      _LCD_Init 0012  
                    _LATCbits 0F8B          _LCD_Data_Instruction 00A4          LCD_Set_Write@Command 0003  
                    __Hrparam 0000         ?_LCD_Data_Instruction 0001                      __Lrparam 0000  
                  _ANSELCbits 0F3A                      isa$xinst 0000                      int$flags 0006  
                    intlevel2 0000                    _RCSTA1bits 0FAB        ??_LCD_Data_Instruction 0001  
            ??_Configurations 0001  
