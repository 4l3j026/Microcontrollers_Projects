

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jan 29 11:17:55 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 09/02/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0002C8                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _Text1
    64   0002C8  48                 	db	72
    65   0002C9  65                 	db	101
    66   0002CA  6C                 	db	108
    67   0002CB  6C                 	db	108
    68   0002CC  6F                 	db	111
    69   0002CD  20                 	db	32
    70   0002CE  61                 	db	97
    71   0002CF  6E                 	db	110
    72   0002D0  64                 	db	100
    73   0002D1  20                 	db	32
    74   0002D2  57                 	db	87
    75   0002D3  65                 	db	101
    76   0002D4  6C                 	db	108
    77   0002D5  63                 	db	99
    78   0002D6  6F                 	db	111
    79   0002D7  6D                 	db	109
    80   0002D8  65                 	db	101
    81   0002D9  21                 	db	33
    82   0002DA  00                 	db	0
    83   0002DB  00                 	db	0
    84                           
    85                           ;initializer for _Text3
    86   0002DC  32                 	db	50
    87   0002DD  20                 	db	32
    88   0002DE  49                 	db	73
    89   0002DF  6E                 	db	110
    90   0002E0  74                 	db	116
    91   0002E1  20                 	db	32
    92   0002E2  43                 	db	67
    93   0002E3  6F                 	db	111
    94   0002E4  75                 	db	117
    95   0002E5  6E                 	db	110
    96   0002E6  74                 	db	116
    97   0002E7  65                 	db	101
    98   0002E8  72                 	db	114
    99   0002E9  3A                 	db	58
   100   0002EA  20                 	db	32
   101   0002EB  00                 	db	0
   102                           
   103                           ;initializer for _Text2
   104   0002EC  30                 	db	48
   105   0002ED  20                 	db	32
   106   0002EE  49                 	db	73
   107   0002EF  6E                 	db	110
   108   0002F0  74                 	db	116
   109   0002F1  20                 	db	32
   110   0002F2  43                 	db	67
   111   0002F3  6F                 	db	111
   112   0002F4  75                 	db	117
   113   0002F5  6E                 	db	110
   114   0002F6  74                 	db	116
   115   0002F7  65                 	db	101
   116   0002F8  72                 	db	114
   117   0002F9  3A                 	db	58
   118   0002FA  20                 	db	32
   119   0002FB  00                 	db	0
   120   000000                     _TXSTA1bits	set	4012
   121   000000                     _ANSELCbits	set	3898
   122   000000                     _OSCCON	set	4051
   123   000000                     _INTCONbits	set	4082
   124   000000                     _LATCbits	set	3979
   125   000000                     _TRISCbits	set	3988
   126   000000                     _ANSELD	set	3899
   127   000000                     _PIE1bits	set	3997
   128   000000                     _RCONbits	set	4048
   129   000000                     _TRISD	set	3989
   130   000000                     _LATD	set	3980
   131   000000                     _RCSTA1bits	set	4011
   132   000000                     _SPBRG1	set	4015
   133   000000                     _PIR1bits	set	3998
   134   000000                     _BRGH1	set	32098
   135   000000                     _BRG161	set	32195
   136   000000                     _RC1REG	set	4014
   137                           
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   0002FC                     __pcinit:
   142                           	callstack 0
   143   0002FC                     start_initialization:
   144                           	callstack 0
   145   0002FC                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (52 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150   0002FC  0EC8               	movlw	low __pidataCOMRAM
   151   0002FE  6EF6               	movwf	tblptrl,c
   152   000300  0E02               	movlw	high __pidataCOMRAM
   153   000302  6EF7               	movwf	tblptrh,c
   154   000304  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155   000306  6EF8               	movwf	tblptru,c
   156   000308  EE00  F001         	lfsr	0,__pdataCOMRAM
   157   00030C  EE10 F034          	lfsr	1,52
   158   000310                     copy_data0:
   159   000310  0009               	tblrd		*+
   160   000312  CFF5 FFEE          	movff	tablat,postinc0
   161   000316  50E5               	movf	postdec1,w,c
   162   000318  50E1               	movf	fsr1l,w,c
   163   00031A  E1FA               	bnz	copy_data0
   164   00031C                     end_of_initialization:
   165                           	callstack 0
   166   00031C                     __end_of__initialization:
   167                           	callstack 0
   168   00031C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169   00031E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170   000320  0100               	movlb	0
   171   000322  EFAF  F001         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	dataCOMRAM
   174   000001                     __pdataCOMRAM:
   175                           	callstack 0
   176   000001                     _Text1:
   177                           	callstack 0
   178   000001                     	ds	20
   179   000015                     _Text3:
   180                           	callstack 0
   181   000015                     	ds	16
   182   000025                     _Text2:
   183                           	callstack 0
   184   000025                     	ds	16
   185                           
   186                           	psect	cstackCOMRAM
   187   000035                     __pcstackCOMRAM:
   188                           	callstack 0
   189   000035                     ??i2_LCD_Data_Instruction:
   190                           
   191                           ; 1 bytes @ 0x0
   192   000035                     	ds	1
   193   000036                     i2LCD_Data_Instruction@Data:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x1
   197   000036                     	ds	1
   198   000037                     i2LCD_Set_Write@Command:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x2
   202   000037                     	ds	1
   203   000038                     i2LCD_Set_Write@WR_SE:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x3
   207   000038                     	ds	1
   208   000039                     ??_LCD_Data_Instruction:
   209   000039                     ?_strlen:
   210                           	callstack 0
   211   000039                     strlen@s:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x4
   215   000039                     	ds	1
   216   00003A                     LCD_Data_Instruction@Data:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x5
   220   00003A                     	ds	1
   221   00003B                     LCD_Set_Write@Command:
   222                           	callstack 0
   223   00003B                     strlen@a:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x6
   227   00003B                     	ds	1
   228   00003C                     LCD_Set_Write@WR_SE:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x7
   232   00003C                     	ds	1
   233   00003D                     ??_LCD_Init:
   234   00003D                     ??_Show_Data_LCD:
   235                           
   236                           ; 1 bytes @ 0x8
   237   00003D                     	ds	2
   238   00003F                     Show_Data_LCD@i:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0xA
   242   00003F                     	ds	1
   243   000040                     Show_Data_LCD@i_559:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0xB
   247   000040                     	ds	1
   248   000041                     Show_Data_LCD@i_560:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0xC
   252   000041                     	ds	1
   253   000042                     
   254                           ; 1 bytes @ 0xD
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 43 in file "main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels required when called: 6
   280 ;; This function calls:
   281 ;;		_Configurations
   282 ;;		_LCD_Init
   283 ;;		_Show_Data_LCD
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290   00035E                     __ptext0:
   291                           	callstack 0
   292   00035E                     _main:
   293                           	callstack 25
   294   00035E                     
   295                           ;main.c: 46:     Configurations();
   296   00035E  EC0D  F001         	call	_Configurations	;wreg free
   297   000362                     
   298                           ;main.c: 47:     LCD_Init();
   299   000362  ECA2  F000         	call	_LCD_Init	;wreg free
   300   000366                     
   301                           ;main.c: 48:     Show_Data_LCD();
   302   000366  EC26  F000         	call	_Show_Data_LCD	;wreg free
   303   00036A                     l59:
   304   00036A  EFB5  F001         	goto	l59
   305   00036E  EF24  F000         	goto	start
   306   000372                     __end_of_main:
   307                           	callstack 0
   308                           
   309 ;; *************** function _Show_Data_LCD *****************
   310 ;; Defined at:
   311 ;;		line 170 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  i               1   12[COMRAM] unsigned char 
   316 ;;  i               1   11[COMRAM] unsigned char 
   317 ;;  i               1   10[COMRAM] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        5 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; Hardware stack levels required when called: 5
   334 ;; This function calls:
   335 ;;		_LCD_Set_Write
   336 ;;		_strlen
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text1
   343   00004C                     __ptext1:
   344                           	callstack 0
   345   00004C                     _Show_Data_LCD:
   346                           	callstack 25
   347   00004C                     
   348                           ;main.c: 172:     LCD_Set_Write(0, 0X80);
   349   00004C  0E80               	movlw	128
   350   00004E  6E3B               	movwf	LCD_Set_Write@Command^0,c
   351   000050  0E00               	movlw	0
   352   000052  EC93  F001         	call	_LCD_Set_Write
   353   000056                     
   354                           ;main.c: 174:     for (uint8_t i = 0; i < strlen(Text1); i++) {
   355   000056  0E00               	movlw	0
   356   000058  6E3F               	movwf	Show_Data_LCD@i^0,c
   357   00005A  EF3B  F000         	goto	l985
   358   00005E                     l981:
   359                           
   360                           ;main.c: 176:         LCD_Set_Write(1, Text1[i]);
   361   00005E  0E01               	movlw	low _Text1
   362   000060  243F               	addwf	Show_Data_LCD@i^0,w,c
   363   000062  6ED9               	movwf	fsr2l,c
   364   000064  6ADA               	clrf	fsr2h,c
   365   000066  0E00               	movlw	high _Text1
   366   000068  22DA               	addwfc	fsr2h,f,c
   367   00006A  50DF               	movf	indf2,w,c
   368   00006C  6E3B               	movwf	LCD_Set_Write@Command^0,c
   369   00006E  0E01               	movlw	1
   370   000070  EC93  F001         	call	_LCD_Set_Write
   371   000074                     
   372                           ;main.c: 178:     }
   373   000074  2A3F               	incf	Show_Data_LCD@i^0,f,c
   374   000076                     l985:
   375   000076  0E01               	movlw	low _Text1
   376   000078  6E39               	movwf	strlen@s^0,c
   377   00007A  0E00               	movlw	high _Text1
   378   00007C  6E3A               	movwf	(strlen@s+1)^0,c
   379   00007E  EC49  F001         	call	_strlen	;wreg free
   380   000082  503F               	movf	Show_Data_LCD@i^0,w,c
   381   000084  6E3D               	movwf	??_Show_Data_LCD^0,c
   382   000086  6A3E               	clrf	(??_Show_Data_LCD+1)^0,c
   383   000088  5039               	movf	?_strlen^0,w,c
   384   00008A  5C3D               	subwf	??_Show_Data_LCD^0,w,c
   385   00008C  503A               	movf	(?_strlen+1)^0,w,c
   386   00008E  583E               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   387   000090  A0D8               	btfss	status,0,c
   388   000092  EF4D  F000         	goto	u111
   389   000096  EF4F  F000         	goto	u110
   390   00009A                     u111:
   391   00009A  EF2F  F000         	goto	l981
   392   00009E                     u110:
   393   00009E                     
   394                           ;main.c: 180:     LCD_Set_Write(0, 0xC0);
   395   00009E  0EC0               	movlw	192
   396   0000A0  6E3B               	movwf	LCD_Set_Write@Command^0,c
   397   0000A2  0E00               	movlw	0
   398   0000A4  EC93  F001         	call	_LCD_Set_Write
   399   0000A8                     
   400                           ;main.c: 182:     for (uint8_t i = 0; i < strlen(Text2); i++) {
   401   0000A8  0E00               	movlw	0
   402   0000AA  6E40               	movwf	Show_Data_LCD@i_559^0,c
   403   0000AC  EF64  F000         	goto	l995
   404   0000B0                     l991:
   405                           
   406                           ;main.c: 184:         LCD_Set_Write(1, Text2[i]);
   407   0000B0  0E25               	movlw	low _Text2
   408   0000B2  2440               	addwf	Show_Data_LCD@i_559^0,w,c
   409   0000B4  6ED9               	movwf	fsr2l,c
   410   0000B6  6ADA               	clrf	fsr2h,c
   411   0000B8  0E00               	movlw	high _Text2
   412   0000BA  22DA               	addwfc	fsr2h,f,c
   413   0000BC  50DF               	movf	indf2,w,c
   414   0000BE  6E3B               	movwf	LCD_Set_Write@Command^0,c
   415   0000C0  0E01               	movlw	1
   416   0000C2  EC93  F001         	call	_LCD_Set_Write
   417   0000C6                     
   418                           ;main.c: 186:     }
   419   0000C6  2A40               	incf	Show_Data_LCD@i_559^0,f,c
   420   0000C8                     l995:
   421   0000C8  0E25               	movlw	low _Text2
   422   0000CA  6E39               	movwf	strlen@s^0,c
   423   0000CC  0E00               	movlw	high _Text2
   424   0000CE  6E3A               	movwf	(strlen@s+1)^0,c
   425   0000D0  EC49  F001         	call	_strlen	;wreg free
   426   0000D4  5040               	movf	Show_Data_LCD@i_559^0,w,c
   427   0000D6  6E3D               	movwf	??_Show_Data_LCD^0,c
   428   0000D8  6A3E               	clrf	(??_Show_Data_LCD+1)^0,c
   429   0000DA  5039               	movf	?_strlen^0,w,c
   430   0000DC  5C3D               	subwf	??_Show_Data_LCD^0,w,c
   431   0000DE  503A               	movf	(?_strlen+1)^0,w,c
   432   0000E0  583E               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   433   0000E2  A0D8               	btfss	status,0,c
   434   0000E4  EF76  F000         	goto	u121
   435   0000E8  EF78  F000         	goto	u120
   436   0000EC                     u121:
   437   0000EC  EF58  F000         	goto	l991
   438   0000F0                     u120:
   439   0000F0                     
   440                           ;main.c: 188:     LCD_Set_Write(0, 0X94);
   441   0000F0  0E94               	movlw	148
   442   0000F2  6E3B               	movwf	LCD_Set_Write@Command^0,c
   443   0000F4  0E00               	movlw	0
   444   0000F6  EC93  F001         	call	_LCD_Set_Write
   445   0000FA                     
   446                           ;main.c: 190:     for (uint8_t i = 0; i < strlen(Text3); i++) {
   447   0000FA  0E00               	movlw	0
   448   0000FC  6E41               	movwf	Show_Data_LCD@i_560^0,c
   449   0000FE  EF8D  F000         	goto	l1005
   450   000102                     l1001:
   451                           
   452                           ;main.c: 192:         LCD_Set_Write(1, Text3[i]);
   453   000102  0E15               	movlw	low _Text3
   454   000104  2441               	addwf	Show_Data_LCD@i_560^0,w,c
   455   000106  6ED9               	movwf	fsr2l,c
   456   000108  6ADA               	clrf	fsr2h,c
   457   00010A  0E00               	movlw	high _Text3
   458   00010C  22DA               	addwfc	fsr2h,f,c
   459   00010E  50DF               	movf	indf2,w,c
   460   000110  6E3B               	movwf	LCD_Set_Write@Command^0,c
   461   000112  0E01               	movlw	1
   462   000114  EC93  F001         	call	_LCD_Set_Write
   463   000118                     
   464                           ;main.c: 194:     }
   465   000118  2A41               	incf	Show_Data_LCD@i_560^0,f,c
   466   00011A                     l1005:
   467   00011A  0E15               	movlw	low _Text3
   468   00011C  6E39               	movwf	strlen@s^0,c
   469   00011E  0E00               	movlw	high _Text3
   470   000120  6E3A               	movwf	(strlen@s+1)^0,c
   471   000122  EC49  F001         	call	_strlen	;wreg free
   472   000126  5041               	movf	Show_Data_LCD@i_560^0,w,c
   473   000128  6E3D               	movwf	??_Show_Data_LCD^0,c
   474   00012A  6A3E               	clrf	(??_Show_Data_LCD+1)^0,c
   475   00012C  5039               	movf	?_strlen^0,w,c
   476   00012E  5C3D               	subwf	??_Show_Data_LCD^0,w,c
   477   000130  503A               	movf	(?_strlen+1)^0,w,c
   478   000132  583E               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   479   000134  A0D8               	btfss	status,0,c
   480   000136  EF9F  F000         	goto	u131
   481   00013A  EFA1  F000         	goto	u130
   482   00013E                     u131:
   483   00013E  EF81  F000         	goto	l1001
   484   000142                     u130:
   485   000142  0012               	return		;funcret
   486   000144                     __end_of_Show_Data_LCD:
   487                           	callstack 0
   488                           
   489 ;; *************** function _strlen *****************
   490 ;; Defined at:
   491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  s               2    4[COMRAM] PTR const unsigned char 
   494 ;;		 -> Text3(16), Text2(16), Text1(20), 
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  a               2    6[COMRAM] PTR const unsigned char 
   497 ;;		 -> Text3(16), Text2(16), Text1(20), 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2    4[COMRAM] unsigned int 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 3
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_Show_Data_LCD
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text2
   522   000292                     __ptext2:
   523                           	callstack 0
   524   000292                     _strlen:
   525                           	callstack 26
   526   000292  C039  F03B         	movff	strlen@s,strlen@a
   527   000296  C03A  F03C         	movff	strlen@s+1,strlen@a+1
   528   00029A  EF51  F001         	goto	l937
   529   00029E                     l935:
   530   00029E  4A39               	infsnz	strlen@s^0,f,c
   531   0002A0  2A3A               	incf	(strlen@s+1)^0,f,c
   532   0002A2                     l937:
   533   0002A2  C039  FFD9         	movff	strlen@s,fsr2l
   534   0002A6  C03A  FFDA         	movff	strlen@s+1,fsr2h
   535   0002AA  50DF               	movf	indf2,w,c
   536   0002AC  A4D8               	btfss	status,2,c
   537   0002AE  EF5B  F001         	goto	u101
   538   0002B2  EF5D  F001         	goto	u100
   539   0002B6                     u101:
   540   0002B6  EF4F  F001         	goto	l935
   541   0002BA                     u100:
   542   0002BA  503B               	movf	strlen@a^0,w,c
   543   0002BC  5C39               	subwf	strlen@s^0,w,c
   544   0002BE  6E39               	movwf	?_strlen^0,c
   545   0002C0  503C               	movf	(strlen@a+1)^0,w,c
   546   0002C2  583A               	subwfb	(strlen@s+1)^0,w,c
   547   0002C4  6E3A               	movwf	(?_strlen+1)^0,c
   548   0002C6  0012               	return		;funcret
   549   0002C8                     __end_of_strlen:
   550                           	callstack 0
   551                           
   552 ;; *************** function _LCD_Init *****************
   553 ;; Defined at:
   554 ;;		line 108 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 5
   575 ;; This function calls:
   576 ;;		_LCD_Set_Write
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text3
   583   000144                     __ptext3:
   584                           	callstack 0
   585   000144                     _LCD_Init:
   586                           	callstack 25
   587   000144                     
   588                           ;main.c: 110:     _delay((unsigned long)((20)*(16000000/4000.0)));
   589   000144  0E68               	movlw	104
   590   000146  6E3D               	movwf	??_LCD_Init^0,c
   591   000148  0EE4               	movlw	228
   592   00014A                     u177:
   593   00014A  2EE8               	decfsz	wreg,f,c
   594   00014C  D7FE               	bra	u177
   595   00014E  2E3D               	decfsz	??_LCD_Init^0,f,c
   596   000150  D7FC               	bra	u177
   597   000152  D000               	nop2	
   598   000154                     
   599                           ;main.c: 111:     LCD_Set_Write(0, 0x30);
   600   000154  0E30               	movlw	48
   601   000156  6E3B               	movwf	LCD_Set_Write@Command^0,c
   602   000158  0E00               	movlw	0
   603   00015A  EC93  F001         	call	_LCD_Set_Write
   604   00015E                     
   605                           ;main.c: 112:     _delay((unsigned long)((5)*(16000000/4000.0)));
   606   00015E  0E1A               	movlw	26
   607   000160  6E3D               	movwf	??_LCD_Init^0,c
   608   000162  0EF8               	movlw	248
   609   000164                     u187:
   610   000164  2EE8               	decfsz	wreg,f,c
   611   000166  D7FE               	bra	u187
   612   000168  2E3D               	decfsz	??_LCD_Init^0,f,c
   613   00016A  D7FC               	bra	u187
   614   00016C  D000               	nop2	
   615                           
   616                           ;main.c: 113:     LCD_Set_Write(0, 0x30);
   617   00016E  0E30               	movlw	48
   618   000170  6E3B               	movwf	LCD_Set_Write@Command^0,c
   619   000172  0E00               	movlw	0
   620   000174  EC93  F001         	call	_LCD_Set_Write
   621   000178                     
   622                           ;main.c: 114:     _delay((unsigned long)((5)*(16000000/4000.0)));
   623   000178  0E1A               	movlw	26
   624   00017A  6E3D               	movwf	??_LCD_Init^0,c
   625   00017C  0EF8               	movlw	248
   626   00017E                     u197:
   627   00017E  2EE8               	decfsz	wreg,f,c
   628   000180  D7FE               	bra	u197
   629   000182  2E3D               	decfsz	??_LCD_Init^0,f,c
   630   000184  D7FC               	bra	u197
   631   000186  D000               	nop2	
   632   000188                     
   633                           ;main.c: 115:     LCD_Set_Write(0, 0x30);
   634   000188  0E30               	movlw	48
   635   00018A  6E3B               	movwf	LCD_Set_Write@Command^0,c
   636   00018C  0E00               	movlw	0
   637   00018E  EC93  F001         	call	_LCD_Set_Write
   638   000192                     
   639                           ;main.c: 116:     LCD_Set_Write(0, 0x02);
   640   000192  0E02               	movlw	2
   641   000194  6E3B               	movwf	LCD_Set_Write@Command^0,c
   642   000196  0E00               	movlw	0
   643   000198  EC93  F001         	call	_LCD_Set_Write
   644   00019C                     
   645                           ;main.c: 117:     LCD_Set_Write(0, 0x06);
   646   00019C  0E06               	movlw	6
   647   00019E  6E3B               	movwf	LCD_Set_Write@Command^0,c
   648   0001A0  0E00               	movlw	0
   649   0001A2  EC93  F001         	call	_LCD_Set_Write
   650   0001A6                     
   651                           ;main.c: 118:     LCD_Set_Write(0, 0x0F);
   652   0001A6  0E0F               	movlw	15
   653   0001A8  6E3B               	movwf	LCD_Set_Write@Command^0,c
   654   0001AA  0E00               	movlw	0
   655   0001AC  EC93  F001         	call	_LCD_Set_Write
   656   0001B0                     
   657                           ;main.c: 119:     LCD_Set_Write(0, 0x28);
   658   0001B0  0E28               	movlw	40
   659   0001B2  6E3B               	movwf	LCD_Set_Write@Command^0,c
   660   0001B4  0E00               	movlw	0
   661   0001B6  EC93  F001         	call	_LCD_Set_Write
   662   0001BA                     
   663                           ;main.c: 120:     LCD_Set_Write(0, 0x01);
   664   0001BA  0E01               	movlw	1
   665   0001BC  6E3B               	movwf	LCD_Set_Write@Command^0,c
   666   0001BE  0E00               	movlw	0
   667   0001C0  EC93  F001         	call	_LCD_Set_Write
   668   0001C4                     
   669                           ;main.c: 121:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   670   0001C4  0E15               	movlw	21
   671   0001C6  6E3E               	movwf	(??_LCD_Init+1)^0,c
   672   0001C8  0E4B               	movlw	75
   673   0001CA  6E3D               	movwf	??_LCD_Init^0,c
   674   0001CC  0EBE               	movlw	190
   675   0001CE                     u207:
   676   0001CE  2EE8               	decfsz	wreg,f,c
   677   0001D0  D7FE               	bra	u207
   678   0001D2  2E3D               	decfsz	??_LCD_Init^0,f,c
   679   0001D4  D7FC               	bra	u207
   680   0001D6  2E3E               	decfsz	(??_LCD_Init+1)^0,f,c
   681   0001D8  D7FA               	bra	u207
   682   0001DA  D000               	nop2	
   683   0001DC  0012               	return		;funcret
   684   0001DE                     __end_of_LCD_Init:
   685                           	callstack 0
   686                           
   687 ;; *************** function _LCD_Set_Write *****************
   688 ;; Defined at:
   689 ;;		line 127 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  WR_SE           1    wreg     unsigned char 
   692 ;;  Command         1    6[COMRAM] unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  WR_SE           1    7[COMRAM] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   704 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 4
   711 ;; This function calls:
   712 ;;		_LCD_Data_Instruction
   713 ;; This function is called by:
   714 ;;		_LCD_Init
   715 ;;		_Show_Data_LCD
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text4
   720   000326                     __ptext4:
   721                           	callstack 0
   722   000326                     _LCD_Set_Write:
   723                           	callstack 25
   724                           
   725                           ;incstack = 0
   726                           ;LCD_Set_Write@WR_SE stored from wreg
   727   000326  6E3C               	movwf	LCD_Set_Write@WR_SE^0,c
   728   000328                     
   729                           ;main.c: 129:     LATCbits.LATC4 = WR_SE;
   730   000328  B03C               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   731   00032A  D002               	bra	u95
   732   00032C  988B               	bcf	139,4,c	;volatile
   733   00032E  D001               	bra	u96
   734   000330                     u95:
   735   000330  888B               	bsf	139,4,c	;volatile
   736   000332                     u96:
   737   000332                     
   738                           ;main.c: 130:     LCD_Data_Instruction(Command >> 4);
   739   000332  383B               	swapf	LCD_Set_Write@Command^0,w,c
   740   000334  0B0F               	andlw	15
   741   000336  ECEF  F000         	call	_LCD_Data_Instruction
   742   00033A                     
   743                           ;main.c: 131:     LCD_Data_Instruction(Command);
   744   00033A  503B               	movf	LCD_Set_Write@Command^0,w,c
   745   00033C  ECEF  F000         	call	_LCD_Data_Instruction
   746   000340  0012               	return		;funcret
   747   000342                     __end_of_LCD_Set_Write:
   748                           	callstack 0
   749                           
   750 ;; *************** function _LCD_Data_Instruction *****************
   751 ;; Defined at:
   752 ;;		line 137 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  Data            1    wreg     unsigned char 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  Data            1    5[COMRAM] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 3
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_LCD_Set_Write
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text5
   781   0001DE                     __ptext5:
   782                           	callstack 0
   783   0001DE                     _LCD_Data_Instruction:
   784                           	callstack 25
   785                           
   786                           ;incstack = 0
   787                           ;LCD_Data_Instruction@Data stored from wreg
   788   0001DE  6E3A               	movwf	LCD_Data_Instruction@Data^0,c
   789   0001E0                     
   790                           ;main.c: 139:     LATCbits.LATC5 = 1;
   791   0001E0  8A8B               	bsf	139,5,c	;volatile
   792   0001E2                     
   793                           ;main.c: 140:     _delay((unsigned long)((15)*(16000000/4000.0)));
   794   0001E2  0E4E               	movlw	78
   795   0001E4  6E39               	movwf	??_LCD_Data_Instruction^0,c
   796   0001E6  0EEB               	movlw	235
   797   0001E8                     u217:
   798   0001E8  2EE8               	decfsz	wreg,f,c
   799   0001EA  D7FE               	bra	u217
   800   0001EC  2E39               	decfsz	??_LCD_Data_Instruction^0,f,c
   801   0001EE  D7FC               	bra	u217
   802   0001F0  F000               	nop	
   803   0001F2                     
   804                           ;main.c: 141:     LATD = Data;
   805   0001F2  C03A  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   806   0001F6                     
   807                           ;main.c: 142:     _delay((unsigned long)((15)*(16000000/4000.0)));
   808   0001F6  0E4E               	movlw	78
   809   0001F8  6E39               	movwf	??_LCD_Data_Instruction^0,c
   810   0001FA  0EEB               	movlw	235
   811   0001FC                     u227:
   812   0001FC  2EE8               	decfsz	wreg,f,c
   813   0001FE  D7FE               	bra	u227
   814   000200  2E39               	decfsz	??_LCD_Data_Instruction^0,f,c
   815   000202  D7FC               	bra	u227
   816   000204  F000               	nop	
   817   000206                     
   818                           ;main.c: 143:     LATCbits.LATC5 = 0;
   819   000206  9A8B               	bcf	139,5,c	;volatile
   820   000208                     
   821                           ;main.c: 144:     _delay((unsigned long)((15)*(16000000/4000.0)));
   822   000208  0E4E               	movlw	78
   823   00020A  6E39               	movwf	??_LCD_Data_Instruction^0,c
   824   00020C  0EEB               	movlw	235
   825   00020E                     u237:
   826   00020E  2EE8               	decfsz	wreg,f,c
   827   000210  D7FE               	bra	u237
   828   000212  2E39               	decfsz	??_LCD_Data_Instruction^0,f,c
   829   000214  D7FC               	bra	u237
   830   000216  F000               	nop	
   831   000218  0012               	return		;funcret
   832   00021A                     __end_of_LCD_Data_Instruction:
   833                           	callstack 0
   834                           
   835 ;; *************** function _Configurations *****************
   836 ;; Defined at:
   837 ;;		line 60 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 3
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text6
   866   00021A                     __ptext6:
   867                           	callstack 0
   868   00021A                     _Configurations:
   869                           	callstack 27
   870   00021A                     
   871                           ;main.c: 62:     OSCCON = 0x72;
   872   00021A  0E72               	movlw	114
   873   00021C  6ED3               	movwf	211,c	;volatile
   874   00021E                     
   875                           ;main.c: 65:     ANSELCbits.ANSC4 = 0;
   876   00021E  010F               	movlb	15	; () banked
   877   000220  993A               	bcf	58,4,b	;volatile
   878   000222                     
   879                           ; BSR set to: 15
   880                           ;main.c: 66:     ANSELCbits.ANSC5 = 0;
   881   000222  9B3A               	bcf	58,5,b	;volatile
   882   000224                     
   883                           ; BSR set to: 15
   884                           ;main.c: 67:     ANSELCbits.ANSC6 = 0;
   885   000224  9D3A               	bcf	58,6,b	;volatile
   886   000226                     
   887                           ; BSR set to: 15
   888                           ;main.c: 68:     ANSELCbits.ANSC7 = 0;
   889   000226  9F3A               	bcf	58,7,b	;volatile
   890                           
   891                           ;main.c: 70:     ANSELD = 0x00;
   892   000228  0E00               	movlw	0
   893   00022A  6F3B               	movwf	59,b	;volatile
   894   00022C                     
   895                           ; BSR set to: 15
   896                           ;main.c: 73:     TRISCbits.RC4 = 0;
   897   00022C  9894               	bcf	148,4,c	;volatile
   898   00022E                     
   899                           ; BSR set to: 15
   900                           ;main.c: 74:     TRISCbits.RC5 = 0;
   901   00022E  9A94               	bcf	148,5,c	;volatile
   902                           
   903                           ;main.c: 76:     TRISD = 0x00;
   904   000230  0E00               	movlw	0
   905   000232  6E95               	movwf	149,c	;volatile
   906   000234                     
   907                           ; BSR set to: 15
   908                           ;main.c: 79:     LATCbits.LC4 = 0;
   909   000234  988B               	bcf	139,4,c	;volatile
   910   000236                     
   911                           ; BSR set to: 15
   912                           ;main.c: 80:     LATCbits.LC5 = 0;
   913   000236  9A8B               	bcf	139,5,c	;volatile
   914                           
   915                           ;main.c: 82:     LATD = 0;
   916   000238  0E00               	movlw	0
   917   00023A  6E8C               	movwf	140,c	;volatile
   918   00023C                     
   919                           ; BSR set to: 15
   920                           ;main.c: 86:     INTCONbits.GIE = 1;
   921   00023C  8EF2               	bsf	242,7,c	;volatile
   922   00023E                     
   923                           ; BSR set to: 15
   924                           ;main.c: 87:     INTCONbits.PEIE = 1;
   925   00023E  8CF2               	bsf	242,6,c	;volatile
   926   000240                     
   927                           ; BSR set to: 15
   928                           ;main.c: 88:     RCONbits.IPEN = 0;
   929   000240  9ED0               	bcf	208,7,c	;volatile
   930   000242                     
   931                           ; BSR set to: 15
   932                           ;main.c: 90:     PIE1bits.RC1IE = 1;
   933   000242  8A9D               	bsf	157,5,c	;volatile
   934   000244                     
   935                           ; BSR set to: 15
   936                           ;main.c: 91:     PIR1bits.RC1IF = 0;
   937   000244  9A9E               	bcf	158,5,c	;volatile
   938                           
   939                           ;main.c: 95:     SPBRG1 = 0x67;
   940   000246  0E67               	movlw	103
   941   000248  6EAF               	movwf	175,c	;volatile
   942   00024A                     
   943                           ; BSR set to: 15
   944                           ;main.c: 96:     BRGH1 = 1;
   945   00024A  84AC               	bsf	4012,2,c	;volatile
   946   00024C                     
   947                           ; BSR set to: 15
   948                           ;main.c: 97:     BRG161 = 0;
   949   00024C  96B8               	bcf	4024,3,c	;volatile
   950   00024E                     
   951                           ; BSR set to: 15
   952                           ;main.c: 100:     RCSTA1bits.CREN = 1;
   953   00024E  88AB               	bsf	171,4,c	;volatile
   954   000250                     
   955                           ; BSR set to: 15
   956                           ;main.c: 101:     TXSTA1bits.SYNC = 0;
   957   000250  98AC               	bcf	172,4,c	;volatile
   958   000252                     
   959                           ; BSR set to: 15
   960                           ;main.c: 102:     RCSTA1bits.SPEN = 1;
   961   000252  8EAB               	bsf	171,7,c	;volatile
   962   000254                     
   963                           ; BSR set to: 15
   964   000254  0012               	return		;funcret
   965   000256                     __end_of_Configurations:
   966                           	callstack 0
   967                           
   968 ;; *************** function _EUSART_Int_Rx *****************
   969 ;; Defined at:
   970 ;;		line 150 in file "main.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;Total ram usage:        0 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 2
   991 ;; This function calls:
   992 ;;		i2_LCD_Set_Write
   993 ;; This function is called by:
   994 ;;		Interrupt level 2
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	intcode
   999   000008                     __pintcode:
  1000                           	callstack 0
  1001   000008                     _EUSART_Int_Rx:
  1002                           	callstack 25
  1003                           
  1004                           ; BSR set to: 15
  1005                           ;incstack = 0
  1006   000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1007   00000A                     
  1008                           ;main.c: 152:     if (PIR1bits.RC1IF) {
  1009   00000A  AA9E               	btfss	158,5,c	;volatile
  1010   00000C  EF0A  F000         	goto	i2u15_41
  1011   000010  EF0C  F000         	goto	i2u15_40
  1012   000014                     i2u15_41:
  1013   000014  EF22  F000         	goto	i2l83
  1014   000018                     i2u15_40:
  1015   000018                     
  1016                           ;main.c: 154:         if (RC1REG == '0') {
  1017   000018  0E30               	movlw	48
  1018   00001A  18AE               	xorwf	174,w,c	;volatile
  1019   00001C  A4D8               	btfss	status,2,c
  1020   00001E  EF13  F000         	goto	i2u16_41
  1021   000022  EF15  F000         	goto	i2u16_40
  1022   000026                     i2u16_41:
  1023   000026  EF21  F000         	goto	i2l1025
  1024   00002A                     i2u16_40:
  1025   00002A                     
  1026                           ;main.c: 156:             LCD_Set_Write(0, 0xC0 + 16);
  1027   00002A  0ED0               	movlw	208
  1028   00002C  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1029   00002E  0E00               	movlw	0
  1030   000030  ECA1  F001         	call	i2_LCD_Set_Write
  1031                           
  1032                           ;main.c: 157:             LCD_Set_Write(1, '8');
  1033   000034  0E38               	movlw	56
  1034   000036  6E37               	movwf	i2LCD_Set_Write@Command^0,c
  1035   000038  0E01               	movlw	1
  1036   00003A  ECA1  F001         	call	i2_LCD_Set_Write
  1037                           
  1038                           ;main.c: 159:         }
  1039   00003E  EF22  F000         	goto	i2l83
  1040   000042                     i2l1025:
  1041   000042  50AE               	movf	174,w,c	;volatile
  1042   000044                     i2l83:
  1043   000044  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1044   000046  0011               	retfie		f
  1045   000048                     __end_of_EUSART_Int_Rx:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function i2_LCD_Set_Write *****************
  1049 ;; Defined at:
  1050 ;;		line 127 in file "main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  WR_SE           1    wreg     unsigned char 
  1053 ;;  Command         1    2[COMRAM] unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  WR_SE           1    3[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:        2 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 1
  1072 ;; This function calls:
  1073 ;;		i2_LCD_Data_Instruction
  1074 ;; This function is called by:
  1075 ;;		_EUSART_Int_Rx
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text8
  1080   000342                     __ptext8:
  1081                           	callstack 0
  1082   000342                     i2_LCD_Set_Write:
  1083                           	callstack 25
  1084                           
  1085                           ;incstack = 0
  1086                           ;i2LCD_Set_Write@WR_SE stored from wreg
  1087   000342  6E38               	movwf	i2LCD_Set_Write@WR_SE^0,c
  1088   000344                     
  1089                           ;main.c: 129:     LATCbits.LATC4 = WR_SE;
  1090   000344  B038               	btfsc	i2LCD_Set_Write@WR_SE^0,0,c
  1091   000346  D002               	bra	i2u14_45
  1092   000348  988B               	bcf	139,4,c	;volatile
  1093   00034A  D001               	bra	i2u14_46
  1094   00034C                     i2u14_45:
  1095   00034C  888B               	bsf	139,4,c	;volatile
  1096   00034E                     i2u14_46:
  1097   00034E                     
  1098                           ;main.c: 130:     LCD_Data_Instruction(Command >> 4);
  1099   00034E  3837               	swapf	i2LCD_Set_Write@Command^0,w,c
  1100   000350  0B0F               	andlw	15
  1101   000352  EC2B  F001         	call	i2_LCD_Data_Instruction
  1102   000356                     
  1103                           ;main.c: 131:     LCD_Data_Instruction(Command);
  1104   000356  5037               	movf	i2LCD_Set_Write@Command^0,w,c
  1105   000358  EC2B  F001         	call	i2_LCD_Data_Instruction
  1106   00035C  0012               	return		;funcret
  1107   00035E                     __end_ofi2_LCD_Set_Write:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function i2_LCD_Data_Instruction *****************
  1111 ;; Defined at:
  1112 ;;		line 137 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  Data            1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  Data            1    1[COMRAM] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:        2 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		i2_LCD_Set_Write
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text9
  1140   000256                     __ptext9:
  1141                           	callstack 0
  1142   000256                     i2_LCD_Data_Instruction:
  1143                           	callstack 25
  1144                           
  1145                           ;incstack = 0
  1146                           ;i2LCD_Data_Instruction@Data stored from wreg
  1147   000256  6E36               	movwf	i2LCD_Data_Instruction@Data^0,c
  1148   000258                     
  1149                           ;main.c: 139:     LATCbits.LATC5 = 1;
  1150   000258  8A8B               	bsf	139,5,c	;volatile
  1151   00025A                     
  1152                           ;main.c: 140:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1153   00025A  0E4E               	movlw	78
  1154   00025C  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1155   00025E  0EEB               	movlw	235
  1156   000260                     i2u24_47:
  1157   000260  2EE8               	decfsz	wreg,f,c
  1158   000262  D7FE               	bra	i2u24_47
  1159   000264  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1160   000266  D7FC               	bra	i2u24_47
  1161   000268  F000               	nop	
  1162   00026A                     
  1163                           ;main.c: 141:     LATD = Data;
  1164   00026A  C036  FF8C         	movff	i2LCD_Data_Instruction@Data,3980	;volatile
  1165   00026E                     
  1166                           ;main.c: 142:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1167   00026E  0E4E               	movlw	78
  1168   000270  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1169   000272  0EEB               	movlw	235
  1170   000274                     i2u25_47:
  1171   000274  2EE8               	decfsz	wreg,f,c
  1172   000276  D7FE               	bra	i2u25_47
  1173   000278  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1174   00027A  D7FC               	bra	i2u25_47
  1175   00027C  F000               	nop	
  1176   00027E                     
  1177                           ;main.c: 143:     LATCbits.LATC5 = 0;
  1178   00027E  9A8B               	bcf	139,5,c	;volatile
  1179   000280                     
  1180                           ;main.c: 144:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1181   000280  0E4E               	movlw	78
  1182   000282  6E35               	movwf	??i2_LCD_Data_Instruction^0,c
  1183   000284  0EEB               	movlw	235
  1184   000286                     i2u26_47:
  1185   000286  2EE8               	decfsz	wreg,f,c
  1186   000288  D7FE               	bra	i2u26_47
  1187   00028A  2E35               	decfsz	??i2_LCD_Data_Instruction^0,f,c
  1188   00028C  D7FC               	bra	i2u26_47
  1189   00028E  F000               	nop	
  1190   000290  0012               	return		;funcret
  1191   000292                     __end_ofi2_LCD_Data_Instruction:
  1192                           	callstack 0
  1193   000000                     
  1194                           	psect	rparam
  1195   000000                     
  1196                           	psect	temp
  1197   000042                     btemp:
  1198                           	callstack 0
  1199   000042                     	ds	1
  1200   000000                     int$flags	set	btemp
  1201   000000                     wtemp8	set	btemp+1
  1202   000000                     ttemp5	set	btemp+1
  1203   000000                     ttemp6	set	btemp+4
  1204   000000                     ttemp7	set	btemp+8
  1205                           
  1206                           	psect	config
  1207                           
  1208                           ; Padding undefined space
  1209   300000                     	org	3145728
  1210   300000  FF                 	db	255
  1211                           
  1212                           ;Config register CONFIG1H @ 0x300001
  1213                           ;	Oscillator Selection bits
  1214                           ;	FOSC = INTIO67, Internal oscillator block
  1215                           ;	4X PLL Enable
  1216                           ;	PLLCFG = OFF, Oscillator used directly
  1217                           ;	Primary clock enable bit
  1218                           ;	PRICLKEN = ON, Primary clock is always enabled
  1219                           ;	Fail-Safe Clock Monitor Enable bit
  1220                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1221                           ;	Internal/External Oscillator Switchover bit
  1222                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1223   300001                     	org	3145729
  1224   300001  28                 	db	40
  1225                           
  1226                           ;Config register CONFIG2L @ 0x300002
  1227                           ;	Power-up Timer Enable bit
  1228                           ;	PWRTEN = OFF, Power up timer disabled
  1229                           ;	Brown-out Reset Enable bits
  1230                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1231                           ;	Brown Out Reset Voltage bits
  1232                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1233   300002                     	org	3145730
  1234   300002  1F                 	db	31
  1235                           
  1236                           ;Config register CONFIG2H @ 0x300003
  1237                           ;	Watchdog Timer Enable bits
  1238                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1239                           ;	Watchdog Timer Postscale Select bits
  1240                           ;	WDTPS = 32768, 1:32768
  1241   300003                     	org	3145731
  1242   300003  3C                 	db	60
  1243                           
  1244                           ; Padding undefined space
  1245   300004                     	org	3145732
  1246   300004  FF                 	db	255
  1247                           
  1248                           ;Config register CONFIG3H @ 0x300005
  1249                           ;	CCP2 MUX bit
  1250                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1251                           ;	PORTB A/D Enable bit
  1252                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1253                           ;	P3A/CCP3 Mux bit
  1254                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1255                           ;	HFINTOSC Fast Start-up
  1256                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1257                           ;	Timer3 Clock input mux bit
  1258                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1259                           ;	ECCP2 B output mux bit
  1260                           ;	P2BMX = PORTD2, P2B is on RD2
  1261                           ;	MCLR Pin Enable bit
  1262                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1263   300005                     	org	3145733
  1264   300005  BF                 	db	191
  1265                           
  1266                           ;Config register CONFIG4L @ 0x300006
  1267                           ;	Stack Full/Underflow Reset Enable bit
  1268                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1269                           ;	Single-Supply ICSP Enable bit
  1270                           ;	LVP = OFF, Single-Supply ICSP disabled
  1271                           ;	Extended Instruction Set Enable bit
  1272                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1273                           ;	Background Debug
  1274                           ;	DEBUG = 0x1, unprogrammed default
  1275   300006                     	org	3145734
  1276   300006  81                 	db	129
  1277                           
  1278                           ; Padding undefined space
  1279   300007                     	org	3145735
  1280   300007  FF                 	db	255
  1281                           
  1282                           ;Config register CONFIG5L @ 0x300008
  1283                           ;	Code Protection Block 0
  1284                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1285                           ;	Code Protection Block 1
  1286                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1287                           ;	Code Protection Block 2
  1288                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1289                           ;	Code Protection Block 3
  1290                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1291   300008                     	org	3145736
  1292   300008  0F                 	db	15
  1293                           
  1294                           ;Config register CONFIG5H @ 0x300009
  1295                           ;	Boot Block Code Protection bit
  1296                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1297                           ;	Data EEPROM Code Protection bit
  1298                           ;	CPD = OFF, Data EEPROM not code-protected
  1299   300009                     	org	3145737
  1300   300009  C0                 	db	192
  1301                           
  1302                           ;Config register CONFIG6L @ 0x30000A
  1303                           ;	Write Protection Block 0
  1304                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1305                           ;	Write Protection Block 1
  1306                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1307                           ;	Write Protection Block 2
  1308                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1309                           ;	Write Protection Block 3
  1310                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1311   30000A                     	org	3145738
  1312   30000A  0F                 	db	15
  1313                           
  1314                           ;Config register CONFIG6H @ 0x30000B
  1315                           ;	Configuration Register Write Protection bit
  1316                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1317                           ;	Boot Block Write Protection bit
  1318                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1319                           ;	Data EEPROM Write Protection bit
  1320                           ;	WRTD = OFF, Data EEPROM not write-protected
  1321   30000B                     	org	3145739
  1322   30000B  E0                 	db	224
  1323                           
  1324                           ;Config register CONFIG7L @ 0x30000C
  1325                           ;	Table Read Protection Block 0
  1326                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1327                           ;	Table Read Protection Block 1
  1328                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1329                           ;	Table Read Protection Block 2
  1330                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1331                           ;	Table Read Protection Block 3
  1332                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1333   30000C                     	org	3145740
  1334   30000C  0F                 	db	15
  1335                           
  1336                           ;Config register CONFIG7H @ 0x30000D
  1337                           ;	Boot Block Table Read Protection bit
  1338                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1339   30000D                     	org	3145741
  1340   30000D  40                 	db	64
  1341                           tosu	equ	0xFFF
  1342                           tosh	equ	0xFFE
  1343                           tosl	equ	0xFFD
  1344                           stkptr	equ	0xFFC
  1345                           pclatu	equ	0xFFB
  1346                           pclath	equ	0xFFA
  1347                           pcl	equ	0xFF9
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           indf0	equ	0xFEF
  1355                           postinc0	equ	0xFEE
  1356                           postdec0	equ	0xFED
  1357                           preinc0	equ	0xFEC
  1358                           plusw0	equ	0xFEB
  1359                           fsr0h	equ	0xFEA
  1360                           fsr0l	equ	0xFE9
  1361                           wreg	equ	0xFE8
  1362                           indf1	equ	0xFE7
  1363                           postinc1	equ	0xFE6
  1364                           postdec1	equ	0xFE5
  1365                           preinc1	equ	0xFE4
  1366                           plusw1	equ	0xFE3
  1367                           fsr1h	equ	0xFE2
  1368                           fsr1l	equ	0xFE1
  1369                           bsr	equ	0xFE0
  1370                           indf2	equ	0xFDF
  1371                           postinc2	equ	0xFDE
  1372                           postdec2	equ	0xFDD
  1373                           preinc2	equ	0xFDC
  1374                           plusw2	equ	0xFDB
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Show_Data_LCD
    _Show_Data_LCD->_LCD_Set_Write
    _Show_Data_LCD->_strlen
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    _EUSART_Int_Rx->i2_LCD_Set_Write
    i2_LCD_Set_Write->i2_LCD_Data_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2946
                     _Configurations
                           _LCD_Init
                      _Show_Data_LCD
 ---------------------------------------------------------------------------------
 (1) _Show_Data_LCD                                        5     5      0    1701
                                              8 COMRAM     5     5      0
                      _LCD_Set_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     318
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1245
                                              8 COMRAM     2     2      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1    1245
                                              6 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        0     0      0     140
                    i2_LCD_Set_Write
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Set_Write                                      2     1      1     140
                                              2 COMRAM     2     1      1
             i2_LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Data_Instruction                               2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction
   _Show_Data_LCD
     _LCD_Set_Write
     _strlen

 _EUSART_Int_Rx (ROOT)
   i2_LCD_Set_Write
     i2_LCD_Data_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      41       1       69.1%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      47        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jan 29 11:17:55 2024

                            l60 036A                              l71 0340                              l65 0254  
                            l74 0218                              l59 036A                              l68 01DC  
                            l95 0142                              u95 0330                              u96 0332  
                           l821 0222                             l831 0234                             l823 0224  
                           l841 0242                             l833 0236                             l825 0226  
                           l817 021A                             l851 0250                             l843 0244  
                           l835 023C                             l827 022C                             l819 021E  
                           l931 033A                             l853 0252                             l845 024A  
                           l837 023E                             l829 022E                             l781 01F2  
                           l933 0292                             l847 024C                             l839 0240  
                           l783 01F6                             l927 0328                             l775 02C6  
                           l935 029E                             l849 024E                             l785 0206  
                           l777 01E0                             l929 0332                             l961 0178  
                           l937 02A2                             l787 0208                             l779 01E2  
                           l971 01B0                             l963 0188                             l955 0144  
                           l939 02BA                             l973 01BA                             l965 0192  
                           l957 0154                             l981 005E                             l975 01C4  
                           l967 019C                             l959 015E                             l991 00B0  
                           l983 0074                             l969 01A6                             l993 00C6  
                           l985 0076                             l977 004C                             l995 00C8  
                           l987 009E                             l979 0056                             l997 00F0  
                           l989 00A8                             l999 00FA                             u100 02BA  
                           u101 02B6                             u110 009E                             u111 009A  
                           u120 00F0                             u121 00EC                             u130 0142  
                           u131 013E                             u207 01CE                             u217 01E8  
                           u227 01FC                             u237 020E                             u177 014A  
                           u187 0164                             u197 017E                   _LCD_Set_Write 0326  
                           wreg 0FE8                      _TXSTA1bits 0FAC                            l1001 0102  
                          l1003 0118                            l1005 011A                            l1013 035E  
                          l1015 0362                            l1017 0366                            _LATD 0F8C  
                          i2l71 035C                            i2l74 0290                            i2l83 0044  
                          _main 035E                            fsr2h 0FDA                            indf2 0FDF  
                          fsr1l 0FE1                            fsr2l 0FD9                            btemp 0042  
                          start 0048                    ___param_bank 0000                __end_of_LCD_Init 01DE  
                         ?_main 0035                  ?_LCD_Set_Write 003B                           _BRGH1 7D62  
                 _EUSART_Int_Rx 0008                           i2l951 027E                           i2l943 0258  
                         i2l953 0280                           i2l945 025A                           i2l947 026A  
                         i2l949 026E                           _TRISD 0F95        ??i2_LCD_Data_Instruction 0035  
                         _Text1 0001                           _Text2 0025                           _Text3 0015  
                         tablat 0FF5                           ttemp5 0043                           ttemp6 0046  
                         ttemp7 004A                           status 0FD8                           wtemp8 0043  
               __initialization 02FC                    __end_of_main 0372                  Show_Data_LCD@i 003F  
                        ??_main 0042                  ?_EUSART_Int_Rx 0035                   __activetblptr 0000  
                        _BRG161 7DC3                          _ANSELD 0F3B                          _RC1REG 0FAE  
         __end_of_Show_Data_LCD 0144                          i2l1011 0356                          i2l1021 0018  
                        i2l1007 0344                          i2l1023 002A                          i2l1009 034E  
                        i2l1025 0042                          i2l1019 000A                          _OSCCON 0FD3  
            LCD_Set_Write@WR_SE 003C                          _SPBRG1 0FAF               ??i2_LCD_Set_Write 0038  
               ??_LCD_Set_Write 003C                          isa$std 0001                          _strlen 0292  
                  __pdataCOMRAM 0001              Show_Data_LCD@i_560 0041              Show_Data_LCD@i_559 0040  
                        tblptrh 0FF7                          tblptrl 0FF6                          tblptru 0FF8  
                    __accesstop 0060         __end_of__initialization 031C                       ?_LCD_Init 0035  
                 ___rparam_used 0001                  __pcstackCOMRAM 0035                 ??_EUSART_Int_Rx 0039  
                    ??_LCD_Init 003D          i2_LCD_Data_Instruction 0256          i2LCD_Set_Write@Command 0037  
                       ?_strlen 0039                         i2u14_45 034C                         i2u14_46 034E  
                       i2u15_40 0018                         i2u15_41 0014                         i2u16_40 002A  
                       i2u16_41 0026                         i2u24_47 0260                         i2u25_47 0274  
                       i2u26_47 0286      i2LCD_Data_Instruction@Data 0036                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 02FC                         __ramtop 1000  
                       __ptext0 035E                         __ptext1 004C                         __ptext2 0292  
                       __ptext3 0144                         __ptext4 0326                         __ptext5 01DE  
                       __ptext6 021A                         __ptext8 0342                         __ptext9 0256  
               i2_LCD_Set_Write 0342            end_of_initialization 031C                         postdec1 0FE5  
                       postinc0 0FEE                         strlen@a 003B                         strlen@s 0039  
                     _TRISCbits 0F94                   __pidataCOMRAM 02C8           __end_of_LCD_Set_Write 0342  
       __end_ofi2_LCD_Set_Write 035E                  __end_of_strlen 02C8             start_initialization 02FC  
  __end_of_LCD_Data_Instruction 021A                  _Configurations 021A            i2LCD_Set_Write@WR_SE 0038  
       ?i2_LCD_Data_Instruction 0035           __end_of_EUSART_Int_Rx 0048                        ??_strlen 003B  
        __end_of_Configurations 0256  __end_ofi2_LCD_Data_Instruction 0292                   _Show_Data_LCD 004C  
      LCD_Data_Instruction@Data 003A                       __pintcode 0008                ?i2_LCD_Set_Write 0037  
               ?_Configurations 0035                  ?_Show_Data_LCD 0035                        _LCD_Init 0144  
                      _LATCbits 0F8B                        _PIE1bits 0F9D                        _PIR1bits 0F9E  
          _LCD_Data_Instruction 01DE                        _RCONbits 0FD0            LCD_Set_Write@Command 003B  
                     copy_data0 0310                        __Hrparam 0000           ?_LCD_Data_Instruction 0035  
                      __Lrparam 0000                      _ANSELCbits 0F3A                 ??_Show_Data_LCD 003D  
                      isa$xinst 0000                        int$flags 0042                      _INTCONbits 0FF2  
                      intlevel2 0000                      _RCSTA1bits 0FAB          ??_LCD_Data_Instruction 0039  
              ??_Configurations 0039  
