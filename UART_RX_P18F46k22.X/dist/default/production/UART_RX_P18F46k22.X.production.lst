

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jan 28 20:05:13 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 09/02/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _TXSTA1bits	set	4012
    56   000000                     _ANSELCbits	set	3898
    57   000000                     _OSCCON	set	4051
    58   000000                     _INTCONbits	set	4082
    59   000000                     _LATCbits	set	3979
    60   000000                     _TRISCbits	set	3988
    61   000000                     _ANSELD	set	3899
    62   000000                     _PIE1bits	set	3997
    63   000000                     _RCONbits	set	4048
    64   000000                     _TRISD	set	3989
    65   000000                     _LATD	set	3980
    66   000000                     _RCSTA1bits	set	4011
    67   000000                     _SPBRG1	set	4015
    68   000000                     _PIR1bits	set	3998
    69   000000                     _BRGH1	set	32098
    70   000000                     _BRG161	set	32195
    71   000000                     _RC1REG	set	4014
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   000222                     __pcinit:
    77                           	callstack 0
    78   000222                     start_initialization:
    79                           	callstack 0
    80   000222                     __initialization:
    81                           	callstack 0
    82   000222                     end_of_initialization:
    83                           	callstack 0
    84   000222                     __end_of__initialization:
    85                           	callstack 0
    86   000222  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87   000224  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88   000226  0100               	movlb	0
    89   000228  EF07  F001         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92   000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94   000001                     ??i2_LCD_Data_Instruction:
    95                           
    96                           ; 1 bytes @ 0x0
    97   000001                     	ds	1
    98   000002                     i2LCD_Data_Instruction@Data:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x1
   102   000002                     	ds	1
   103   000003                     i2LCD_Set_Write@Command:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x2
   107   000003                     	ds	1
   108   000004                     i2LCD_Set_Write@WR_SE:
   109                           	callstack 0
   110                           
   111                           ; 1 bytes @ 0x3
   112   000004                     	ds	1
   113   000005                     EUSART_Int_Rx@Var:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x4
   117   000005                     	ds	1
   118   000006                     ??_LCD_Data_Instruction:
   119                           
   120                           ; 1 bytes @ 0x5
   121   000006                     	ds	1
   122   000007                     LCD_Data_Instruction@Data:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x6
   126   000007                     	ds	1
   127   000008                     LCD_Set_Write@Command:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x7
   131   000008                     	ds	1
   132   000009                     LCD_Set_Write@WR_SE:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x8
   136   000009                     	ds	1
   137   00000A                     ??_LCD_Init:
   138   00000A                     
   139                           ; 1 bytes @ 0x9
   140   00000A                     	ds	2
   141   00000C                     
   142                           ; 1 bytes @ 0xB
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 36 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   166 ;;Total ram usage:        0 bytes
   167 ;; Hardware stack levels required when called: 6
   168 ;; This function calls:
   169 ;;		_Configurations
   170 ;;		_LCD_Init
   171 ;;		_Show_Data_LCD
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178   00020E                     __ptext0:
   179                           	callstack 0
   180   00020E                     _main:
   181                           	callstack 25
   182   00020E                     
   183                           ;main.c: 39:     Configurations();
   184   00020E  EC9A  F000         	call	_Configurations	;wreg free
   185   000212                     
   186                           ;main.c: 40:     LCD_Init();
   187   000212  EC2F  F000         	call	_LCD_Init	;wreg free
   188   000216                     
   189                           ;main.c: 41:     Show_Data_LCD();
   190   000216  ECD6  F000         	call	_Show_Data_LCD	;wreg free
   191   00021A                     l51:
   192   00021A  EF0D  F001         	goto	l51
   193   00021E  EF2D  F000         	goto	start
   194   000222                     __end_of_main:
   195                           	callstack 0
   196                           
   197 ;; *************** function _Show_Data_LCD *****************
   198 ;; Defined at:
   199 ;;		line 163 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels used: 1
   219 ;; Hardware stack levels required when called: 5
   220 ;; This function calls:
   221 ;;		_LCD_Set_Write
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228   0001AC                     __ptext1:
   229                           	callstack 0
   230   0001AC                     _Show_Data_LCD:
   231                           	callstack 25
   232   0001AC                     
   233                           ;main.c: 165:     LCD_Set_Write(0, 0X80);
   234   0001AC  0E80               	movlw	128
   235   0001AE  6E08               	movwf	LCD_Set_Write@Command^0,c
   236   0001B0  0E00               	movlw	0
   237   0001B2  ECEB  F000         	call	_LCD_Set_Write
   238                           
   239                           ;main.c: 166:     LCD_Set_Write(1, 'L');
   240   0001B6  0E4C               	movlw	76
   241   0001B8  6E08               	movwf	LCD_Set_Write@Command^0,c
   242   0001BA  0E01               	movlw	1
   243   0001BC  ECEB  F000         	call	_LCD_Set_Write
   244                           
   245                           ;main.c: 167:     LCD_Set_Write(1, 'C');
   246   0001C0  0E43               	movlw	67
   247   0001C2  6E08               	movwf	LCD_Set_Write@Command^0,c
   248   0001C4  0E01               	movlw	1
   249   0001C6  ECEB  F000         	call	_LCD_Set_Write
   250                           
   251                           ;main.c: 168:     LCD_Set_Write(1, 'D');
   252   0001CA  0E44               	movlw	68
   253   0001CC  6E08               	movwf	LCD_Set_Write@Command^0,c
   254   0001CE  0E01               	movlw	1
   255   0001D0  ECEB  F000         	call	_LCD_Set_Write
   256   0001D4  0012               	return		;funcret
   257   0001D6                     __end_of_Show_Data_LCD:
   258                           	callstack 0
   259                           
   260 ;; *************** function _LCD_Init *****************
   261 ;; Defined at:
   262 ;;		line 101 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;Total ram usage:        2 bytes
   281 ;; Hardware stack levels used: 1
   282 ;; Hardware stack levels required when called: 5
   283 ;; This function calls:
   284 ;;		_LCD_Set_Write
   285 ;; This function is called by:
   286 ;;		_main
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290                           	psect	text2
   291   00005E                     __ptext2:
   292                           	callstack 0
   293   00005E                     _LCD_Init:
   294                           	callstack 25
   295   00005E                     
   296                           ;main.c: 103:     _delay((unsigned long)((20)*(16000000/4000.0)));
   297   00005E  0E68               	movlw	104
   298   000060  6E0A               	movwf	??_LCD_Init^0,c
   299   000062  0EE4               	movlw	228
   300   000064                     u97:
   301   000064  2EE8               	decfsz	wreg,f,c
   302   000066  D7FE               	bra	u97
   303   000068  2E0A               	decfsz	??_LCD_Init^0,f,c
   304   00006A  D7FC               	bra	u97
   305   00006C  D000               	nop2	
   306   00006E                     
   307                           ;main.c: 104:     LCD_Set_Write(0, 0x30);
   308   00006E  0E30               	movlw	48
   309   000070  6E08               	movwf	LCD_Set_Write@Command^0,c
   310   000072  0E00               	movlw	0
   311   000074  ECEB  F000         	call	_LCD_Set_Write
   312   000078                     
   313                           ;main.c: 105:     _delay((unsigned long)((5)*(16000000/4000.0)));
   314   000078  0E1A               	movlw	26
   315   00007A  6E0A               	movwf	??_LCD_Init^0,c
   316   00007C  0EF8               	movlw	248
   317   00007E                     u107:
   318   00007E  2EE8               	decfsz	wreg,f,c
   319   000080  D7FE               	bra	u107
   320   000082  2E0A               	decfsz	??_LCD_Init^0,f,c
   321   000084  D7FC               	bra	u107
   322   000086  D000               	nop2	
   323                           
   324                           ;main.c: 106:     LCD_Set_Write(0, 0x30);
   325   000088  0E30               	movlw	48
   326   00008A  6E08               	movwf	LCD_Set_Write@Command^0,c
   327   00008C  0E00               	movlw	0
   328   00008E  ECEB  F000         	call	_LCD_Set_Write
   329   000092                     
   330                           ;main.c: 107:     _delay((unsigned long)((5)*(16000000/4000.0)));
   331   000092  0E1A               	movlw	26
   332   000094  6E0A               	movwf	??_LCD_Init^0,c
   333   000096  0EF8               	movlw	248
   334   000098                     u117:
   335   000098  2EE8               	decfsz	wreg,f,c
   336   00009A  D7FE               	bra	u117
   337   00009C  2E0A               	decfsz	??_LCD_Init^0,f,c
   338   00009E  D7FC               	bra	u117
   339   0000A0  D000               	nop2	
   340   0000A2                     
   341                           ;main.c: 108:     LCD_Set_Write(0, 0x30);
   342   0000A2  0E30               	movlw	48
   343   0000A4  6E08               	movwf	LCD_Set_Write@Command^0,c
   344   0000A6  0E00               	movlw	0
   345   0000A8  ECEB  F000         	call	_LCD_Set_Write
   346   0000AC                     
   347                           ;main.c: 109:     LCD_Set_Write(0, 0x02);
   348   0000AC  0E02               	movlw	2
   349   0000AE  6E08               	movwf	LCD_Set_Write@Command^0,c
   350   0000B0  0E00               	movlw	0
   351   0000B2  ECEB  F000         	call	_LCD_Set_Write
   352   0000B6                     
   353                           ;main.c: 110:     LCD_Set_Write(0, 0x06);
   354   0000B6  0E06               	movlw	6
   355   0000B8  6E08               	movwf	LCD_Set_Write@Command^0,c
   356   0000BA  0E00               	movlw	0
   357   0000BC  ECEB  F000         	call	_LCD_Set_Write
   358   0000C0                     
   359                           ;main.c: 111:     LCD_Set_Write(0, 0x0F);
   360   0000C0  0E0F               	movlw	15
   361   0000C2  6E08               	movwf	LCD_Set_Write@Command^0,c
   362   0000C4  0E00               	movlw	0
   363   0000C6  ECEB  F000         	call	_LCD_Set_Write
   364   0000CA                     
   365                           ;main.c: 112:     LCD_Set_Write(0, 0x28);
   366   0000CA  0E28               	movlw	40
   367   0000CC  6E08               	movwf	LCD_Set_Write@Command^0,c
   368   0000CE  0E00               	movlw	0
   369   0000D0  ECEB  F000         	call	_LCD_Set_Write
   370   0000D4                     
   371                           ;main.c: 113:     LCD_Set_Write(0, 0x01);
   372   0000D4  0E01               	movlw	1
   373   0000D6  6E08               	movwf	LCD_Set_Write@Command^0,c
   374   0000D8  0E00               	movlw	0
   375   0000DA  ECEB  F000         	call	_LCD_Set_Write
   376   0000DE                     
   377                           ;main.c: 114:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   378   0000DE  0E15               	movlw	21
   379   0000E0  6E0B               	movwf	(??_LCD_Init+1)^0,c
   380   0000E2  0E4B               	movlw	75
   381   0000E4  6E0A               	movwf	??_LCD_Init^0,c
   382   0000E6  0EBE               	movlw	190
   383   0000E8                     u127:
   384   0000E8  2EE8               	decfsz	wreg,f,c
   385   0000EA  D7FE               	bra	u127
   386   0000EC  2E0A               	decfsz	??_LCD_Init^0,f,c
   387   0000EE  D7FC               	bra	u127
   388   0000F0  2E0B               	decfsz	(??_LCD_Init+1)^0,f,c
   389   0000F2  D7FA               	bra	u127
   390   0000F4  D000               	nop2	
   391   0000F6  0012               	return		;funcret
   392   0000F8                     __end_of_LCD_Init:
   393                           	callstack 0
   394                           
   395 ;; *************** function _LCD_Set_Write *****************
   396 ;; Defined at:
   397 ;;		line 120 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  WR_SE           1    wreg     unsigned char 
   400 ;;  Command         1    7[COMRAM] unsigned char 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  WR_SE           1    8[COMRAM] unsigned char 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   412 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;Total ram usage:        2 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 4
   419 ;; This function calls:
   420 ;;		_LCD_Data_Instruction
   421 ;; This function is called by:
   422 ;;		_LCD_Init
   423 ;;		_Show_Data_LCD
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text3
   428   0001D6                     __ptext3:
   429                           	callstack 0
   430   0001D6                     _LCD_Set_Write:
   431                           	callstack 25
   432                           
   433                           ;incstack = 0
   434                           ;LCD_Set_Write@WR_SE stored from wreg
   435   0001D6  6E09               	movwf	LCD_Set_Write@WR_SE^0,c
   436   0001D8                     
   437                           ;main.c: 122:     LATCbits.LATC4 = WR_SE;
   438   0001D8  B009               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   439   0001DA  D002               	bra	u55
   440   0001DC  988B               	bcf	139,4,c	;volatile
   441   0001DE  D001               	bra	u56
   442   0001E0                     u55:
   443   0001E0  888B               	bsf	139,4,c	;volatile
   444   0001E2                     u56:
   445   0001E2                     
   446                           ;main.c: 123:     LCD_Data_Instruction(Command >> 4);
   447   0001E2  3808               	swapf	LCD_Set_Write@Command^0,w,c
   448   0001E4  0B0F               	andlw	15
   449   0001E6  EC7C  F000         	call	_LCD_Data_Instruction
   450   0001EA                     
   451                           ;main.c: 124:     LCD_Data_Instruction(Command);
   452   0001EA  5008               	movf	LCD_Set_Write@Command^0,w,c
   453   0001EC  EC7C  F000         	call	_LCD_Data_Instruction
   454   0001F0  0012               	return		;funcret
   455   0001F2                     __end_of_LCD_Set_Write:
   456                           	callstack 0
   457                           
   458 ;; *************** function _LCD_Data_Instruction *****************
   459 ;; Defined at:
   460 ;;		line 130 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  Data            1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  Data            1    6[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        2 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 3
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_LCD_Set_Write
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text4
   489   0000F8                     __ptext4:
   490                           	callstack 0
   491   0000F8                     _LCD_Data_Instruction:
   492                           	callstack 25
   493                           
   494                           ;incstack = 0
   495                           ;LCD_Data_Instruction@Data stored from wreg
   496   0000F8  6E07               	movwf	LCD_Data_Instruction@Data^0,c
   497   0000FA                     
   498                           ;main.c: 132:     LATCbits.LATC5 = 1;
   499   0000FA  8A8B               	bsf	139,5,c	;volatile
   500   0000FC                     
   501                           ;main.c: 133:     _delay((unsigned long)((15)*(16000000/4000.0)));
   502   0000FC  0E4E               	movlw	78
   503   0000FE  6E06               	movwf	??_LCD_Data_Instruction^0,c
   504   000100  0EEB               	movlw	235
   505   000102                     u137:
   506   000102  2EE8               	decfsz	wreg,f,c
   507   000104  D7FE               	bra	u137
   508   000106  2E06               	decfsz	??_LCD_Data_Instruction^0,f,c
   509   000108  D7FC               	bra	u137
   510   00010A  F000               	nop	
   511   00010C                     
   512                           ;main.c: 134:     LATD = Data;
   513   00010C  C007  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   514   000110                     
   515                           ;main.c: 135:     _delay((unsigned long)((15)*(16000000/4000.0)));
   516   000110  0E4E               	movlw	78
   517   000112  6E06               	movwf	??_LCD_Data_Instruction^0,c
   518   000114  0EEB               	movlw	235
   519   000116                     u147:
   520   000116  2EE8               	decfsz	wreg,f,c
   521   000118  D7FE               	bra	u147
   522   00011A  2E06               	decfsz	??_LCD_Data_Instruction^0,f,c
   523   00011C  D7FC               	bra	u147
   524   00011E  F000               	nop	
   525   000120                     
   526                           ;main.c: 136:     LATCbits.LATC5 = 0;
   527   000120  9A8B               	bcf	139,5,c	;volatile
   528   000122                     
   529                           ;main.c: 137:     _delay((unsigned long)((15)*(16000000/4000.0)));
   530   000122  0E4E               	movlw	78
   531   000124  6E06               	movwf	??_LCD_Data_Instruction^0,c
   532   000126  0EEB               	movlw	235
   533   000128                     u157:
   534   000128  2EE8               	decfsz	wreg,f,c
   535   00012A  D7FE               	bra	u157
   536   00012C  2E06               	decfsz	??_LCD_Data_Instruction^0,f,c
   537   00012E  D7FC               	bra	u157
   538   000130  F000               	nop	
   539   000132  0012               	return		;funcret
   540   000134                     __end_of_LCD_Data_Instruction:
   541                           	callstack 0
   542                           
   543 ;; *************** function _Configurations *****************
   544 ;; Defined at:
   545 ;;		line 53 in file "main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; Hardware stack levels required when called: 3
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text5
   574   000134                     __ptext5:
   575                           	callstack 0
   576   000134                     _Configurations:
   577                           	callstack 27
   578   000134                     
   579                           ;main.c: 55:     OSCCON = 0x72;
   580   000134  0E72               	movlw	114
   581   000136  6ED3               	movwf	211,c	;volatile
   582   000138                     
   583                           ;main.c: 58:     ANSELCbits.ANSC4 = 0;
   584   000138  010F               	movlb	15	; () banked
   585   00013A  993A               	bcf	58,4,b	;volatile
   586   00013C                     
   587                           ; BSR set to: 15
   588                           ;main.c: 59:     ANSELCbits.ANSC5 = 0;
   589   00013C  9B3A               	bcf	58,5,b	;volatile
   590   00013E                     
   591                           ; BSR set to: 15
   592                           ;main.c: 60:     ANSELCbits.ANSC6 = 0;
   593   00013E  9D3A               	bcf	58,6,b	;volatile
   594   000140                     
   595                           ; BSR set to: 15
   596                           ;main.c: 61:     ANSELCbits.ANSC7 = 0;
   597   000140  9F3A               	bcf	58,7,b	;volatile
   598                           
   599                           ;main.c: 63:     ANSELD = 0x00;
   600   000142  0E00               	movlw	0
   601   000144  6F3B               	movwf	59,b	;volatile
   602   000146                     
   603                           ; BSR set to: 15
   604                           ;main.c: 66:     TRISCbits.RC4 = 0;
   605   000146  9894               	bcf	148,4,c	;volatile
   606   000148                     
   607                           ; BSR set to: 15
   608                           ;main.c: 67:     TRISCbits.RC5 = 0;
   609   000148  9A94               	bcf	148,5,c	;volatile
   610                           
   611                           ;main.c: 69:     TRISD = 0x00;
   612   00014A  0E00               	movlw	0
   613   00014C  6E95               	movwf	149,c	;volatile
   614   00014E                     
   615                           ; BSR set to: 15
   616                           ;main.c: 72:     LATCbits.LC4 = 0;
   617   00014E  988B               	bcf	139,4,c	;volatile
   618   000150                     
   619                           ; BSR set to: 15
   620                           ;main.c: 73:     LATCbits.LC5 = 0;
   621   000150  9A8B               	bcf	139,5,c	;volatile
   622                           
   623                           ;main.c: 75:     LATD = 0;
   624   000152  0E00               	movlw	0
   625   000154  6E8C               	movwf	140,c	;volatile
   626   000156                     
   627                           ; BSR set to: 15
   628                           ;main.c: 79:     INTCONbits.GIE = 1;
   629   000156  8EF2               	bsf	242,7,c	;volatile
   630   000158                     
   631                           ; BSR set to: 15
   632                           ;main.c: 80:     INTCONbits.PEIE = 1;
   633   000158  8CF2               	bsf	242,6,c	;volatile
   634   00015A                     
   635                           ; BSR set to: 15
   636                           ;main.c: 81:     RCONbits.IPEN = 0;
   637   00015A  9ED0               	bcf	208,7,c	;volatile
   638   00015C                     
   639                           ; BSR set to: 15
   640                           ;main.c: 83:     PIE1bits.RC1IE = 1;
   641   00015C  8A9D               	bsf	157,5,c	;volatile
   642   00015E                     
   643                           ; BSR set to: 15
   644                           ;main.c: 84:     PIR1bits.RC1IF = 0;
   645   00015E  9A9E               	bcf	158,5,c	;volatile
   646                           
   647                           ;main.c: 88:     SPBRG1 = 0x67;
   648   000160  0E67               	movlw	103
   649   000162  6EAF               	movwf	175,c	;volatile
   650   000164                     
   651                           ; BSR set to: 15
   652                           ;main.c: 89:     BRGH1 = 1;
   653   000164  84AC               	bsf	4012,2,c	;volatile
   654   000166                     
   655                           ; BSR set to: 15
   656                           ;main.c: 90:     BRG161 = 0;
   657   000166  96B8               	bcf	4024,3,c	;volatile
   658   000168                     
   659                           ; BSR set to: 15
   660                           ;main.c: 93:     RCSTA1bits.CREN = 1;
   661   000168  88AB               	bsf	171,4,c	;volatile
   662   00016A                     
   663                           ; BSR set to: 15
   664                           ;main.c: 94:     TXSTA1bits.SYNC = 0;
   665   00016A  98AC               	bcf	172,4,c	;volatile
   666   00016C                     
   667                           ; BSR set to: 15
   668                           ;main.c: 95:     RCSTA1bits.SPEN = 1;
   669   00016C  8EAB               	bsf	171,7,c	;volatile
   670   00016E                     
   671                           ; BSR set to: 15
   672   00016E  0012               	return		;funcret
   673   000170                     __end_of_Configurations:
   674                           	callstack 0
   675                           
   676 ;; *************** function _EUSART_Int_Rx *****************
   677 ;; Defined at:
   678 ;;		line 141 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  Var             1    4[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 2
   699 ;; This function calls:
   700 ;;		i2_LCD_Set_Write
   701 ;; This function is called by:
   702 ;;		Interrupt level 2
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	intcode
   707   000008                     __pintcode:
   708                           	callstack 0
   709   000008                     _EUSART_Int_Rx:
   710                           	callstack 25
   711                           
   712                           ; BSR set to: 15
   713                           ;incstack = 0
   714   000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   715   00000A                     
   716                           ;main.c: 143:     char Var;;main.c: 145:     if (PIR1bits.RC1IF) {
   717   00000A  AA9E               	btfss	158,5,c	;volatile
   718   00000C  EF0A  F000         	goto	i2u7_41
   719   000010  EF0C  F000         	goto	i2u7_40
   720   000014                     i2u7_41:
   721   000014  EF2B  F000         	goto	i2l73
   722   000018                     i2u7_40:
   723   000018                     
   724                           ;main.c: 147:         Var = RC1REG;
   725   000018  CFAE F005          	movff	4014,EUSART_Int_Rx@Var	;volatile
   726   00001C                     
   727                           ;main.c: 149:         if (Var == '2') {
   728   00001C  0E32               	movlw	50
   729   00001E  1805               	xorwf	EUSART_Int_Rx@Var^0,w,c
   730   000020  A4D8               	btfss	status,2,c
   731   000022  EF15  F000         	goto	i2u8_41
   732   000026  EF17  F000         	goto	i2u8_40
   733   00002A                     i2u8_41:
   734   00002A  EF2B  F000         	goto	i2l73
   735   00002E                     i2u8_40:
   736   00002E                     
   737                           ;main.c: 151:             LCD_Set_Write(0, 0xC0);
   738   00002E  0EC0               	movlw	192
   739   000030  6E03               	movwf	i2LCD_Set_Write@Command^0,c
   740   000032  0E00               	movlw	0
   741   000034  ECF9  F000         	call	i2_LCD_Set_Write
   742                           
   743                           ;main.c: 152:             LCD_Set_Write(1, 'L');
   744   000038  0E4C               	movlw	76
   745   00003A  6E03               	movwf	i2LCD_Set_Write@Command^0,c
   746   00003C  0E01               	movlw	1
   747   00003E  ECF9  F000         	call	i2_LCD_Set_Write
   748                           
   749                           ;main.c: 153:             LCD_Set_Write(1, 'C');
   750   000042  0E43               	movlw	67
   751   000044  6E03               	movwf	i2LCD_Set_Write@Command^0,c
   752   000046  0E01               	movlw	1
   753   000048  ECF9  F000         	call	i2_LCD_Set_Write
   754                           
   755                           ;main.c: 154:             LCD_Set_Write(1, 'D');
   756   00004C  0E44               	movlw	68
   757   00004E  6E03               	movwf	i2LCD_Set_Write@Command^0,c
   758   000050  0E01               	movlw	1
   759   000052  ECF9  F000         	call	i2_LCD_Set_Write
   760   000056                     i2l73:
   761   000056  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   762   000058  0011               	retfie		f
   763   00005A                     __end_of_EUSART_Int_Rx:
   764                           	callstack 0
   765                           
   766 ;; *************** function i2_LCD_Set_Write *****************
   767 ;; Defined at:
   768 ;;		line 120 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  WR_SE           1    wreg     unsigned char 
   771 ;;  Command         1    2[COMRAM] unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  WR_SE           1    3[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;Total ram usage:        2 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 1
   790 ;; This function calls:
   791 ;;		i2_LCD_Data_Instruction
   792 ;; This function is called by:
   793 ;;		_EUSART_Int_Rx
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text7
   798   0001F2                     __ptext7:
   799                           	callstack 0
   800   0001F2                     i2_LCD_Set_Write:
   801                           	callstack 25
   802                           
   803                           ;incstack = 0
   804                           ;i2LCD_Set_Write@WR_SE stored from wreg
   805   0001F2  6E04               	movwf	i2LCD_Set_Write@WR_SE^0,c
   806   0001F4                     
   807                           ;main.c: 122:     LATCbits.LATC4 = WR_SE;
   808   0001F4  B004               	btfsc	i2LCD_Set_Write@WR_SE^0,0,c
   809   0001F6  D002               	bra	i2u6_45
   810   0001F8  988B               	bcf	139,4,c	;volatile
   811   0001FA  D001               	bra	i2u6_46
   812   0001FC                     i2u6_45:
   813   0001FC  888B               	bsf	139,4,c	;volatile
   814   0001FE                     i2u6_46:
   815   0001FE                     
   816                           ;main.c: 123:     LCD_Data_Instruction(Command >> 4);
   817   0001FE  3803               	swapf	i2LCD_Set_Write@Command^0,w,c
   818   000200  0B0F               	andlw	15
   819   000202  ECB8  F000         	call	i2_LCD_Data_Instruction
   820   000206                     
   821                           ;main.c: 124:     LCD_Data_Instruction(Command);
   822   000206  5003               	movf	i2LCD_Set_Write@Command^0,w,c
   823   000208  ECB8  F000         	call	i2_LCD_Data_Instruction
   824   00020C  0012               	return		;funcret
   825   00020E                     __end_ofi2_LCD_Set_Write:
   826                           	callstack 0
   827                           
   828 ;; *************** function i2_LCD_Data_Instruction *****************
   829 ;; Defined at:
   830 ;;		line 130 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  Data            1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  Data            1    1[COMRAM] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		i2_LCD_Set_Write
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text8
   858   000170                     __ptext8:
   859                           	callstack 0
   860   000170                     i2_LCD_Data_Instruction:
   861                           	callstack 25
   862                           
   863                           ;incstack = 0
   864                           ;i2LCD_Data_Instruction@Data stored from wreg
   865   000170  6E02               	movwf	i2LCD_Data_Instruction@Data^0,c
   866   000172                     
   867                           ;main.c: 132:     LATCbits.LATC5 = 1;
   868   000172  8A8B               	bsf	139,5,c	;volatile
   869   000174                     
   870                           ;main.c: 133:     _delay((unsigned long)((15)*(16000000/4000.0)));
   871   000174  0E4E               	movlw	78
   872   000176  6E01               	movwf	??i2_LCD_Data_Instruction^0,c
   873   000178  0EEB               	movlw	235
   874   00017A                     i2u16_47:
   875   00017A  2EE8               	decfsz	wreg,f,c
   876   00017C  D7FE               	bra	i2u16_47
   877   00017E  2E01               	decfsz	??i2_LCD_Data_Instruction^0,f,c
   878   000180  D7FC               	bra	i2u16_47
   879   000182  F000               	nop	
   880   000184                     
   881                           ;main.c: 134:     LATD = Data;
   882   000184  C002  FF8C         	movff	i2LCD_Data_Instruction@Data,3980	;volatile
   883   000188                     
   884                           ;main.c: 135:     _delay((unsigned long)((15)*(16000000/4000.0)));
   885   000188  0E4E               	movlw	78
   886   00018A  6E01               	movwf	??i2_LCD_Data_Instruction^0,c
   887   00018C  0EEB               	movlw	235
   888   00018E                     i2u17_47:
   889   00018E  2EE8               	decfsz	wreg,f,c
   890   000190  D7FE               	bra	i2u17_47
   891   000192  2E01               	decfsz	??i2_LCD_Data_Instruction^0,f,c
   892   000194  D7FC               	bra	i2u17_47
   893   000196  F000               	nop	
   894   000198                     
   895                           ;main.c: 136:     LATCbits.LATC5 = 0;
   896   000198  9A8B               	bcf	139,5,c	;volatile
   897   00019A                     
   898                           ;main.c: 137:     _delay((unsigned long)((15)*(16000000/4000.0)));
   899   00019A  0E4E               	movlw	78
   900   00019C  6E01               	movwf	??i2_LCD_Data_Instruction^0,c
   901   00019E  0EEB               	movlw	235
   902   0001A0                     i2u18_47:
   903   0001A0  2EE8               	decfsz	wreg,f,c
   904   0001A2  D7FE               	bra	i2u18_47
   905   0001A4  2E01               	decfsz	??i2_LCD_Data_Instruction^0,f,c
   906   0001A6  D7FC               	bra	i2u18_47
   907   0001A8  F000               	nop	
   908   0001AA  0012               	return		;funcret
   909   0001AC                     __end_ofi2_LCD_Data_Instruction:
   910                           	callstack 0
   911   000000                     
   912                           	psect	rparam
   913   000000                     
   914                           	psect	temp
   915   00000C                     btemp:
   916                           	callstack 0
   917   00000C                     	ds	1
   918   000000                     int$flags	set	btemp
   919   000000                     wtemp8	set	btemp+1
   920   000000                     ttemp5	set	btemp+1
   921   000000                     ttemp6	set	btemp+4
   922   000000                     ttemp7	set	btemp+8
   923                           
   924                           	psect	config
   925                           
   926                           ; Padding undefined space
   927   300000                     	org	3145728
   928   300000  FF                 	db	255
   929                           
   930                           ;Config register CONFIG1H @ 0x300001
   931                           ;	Oscillator Selection bits
   932                           ;	FOSC = INTIO67, Internal oscillator block
   933                           ;	4X PLL Enable
   934                           ;	PLLCFG = OFF, Oscillator used directly
   935                           ;	Primary clock enable bit
   936                           ;	PRICLKEN = ON, Primary clock is always enabled
   937                           ;	Fail-Safe Clock Monitor Enable bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   939                           ;	Internal/External Oscillator Switchover bit
   940                           ;	IESO = OFF, Oscillator Switchover mode disabled
   941   300001                     	org	3145729
   942   300001  28                 	db	40
   943                           
   944                           ;Config register CONFIG2L @ 0x300002
   945                           ;	Power-up Timer Enable bit
   946                           ;	PWRTEN = OFF, Power up timer disabled
   947                           ;	Brown-out Reset Enable bits
   948                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   949                           ;	Brown Out Reset Voltage bits
   950                           ;	BORV = 190, VBOR set to 1.90 V nominal
   951   300002                     	org	3145730
   952   300002  1F                 	db	31
   953                           
   954                           ;Config register CONFIG2H @ 0x300003
   955                           ;	Watchdog Timer Enable bits
   956                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   957                           ;	Watchdog Timer Postscale Select bits
   958                           ;	WDTPS = 32768, 1:32768
   959   300003                     	org	3145731
   960   300003  3C                 	db	60
   961                           
   962                           ; Padding undefined space
   963   300004                     	org	3145732
   964   300004  FF                 	db	255
   965                           
   966                           ;Config register CONFIG3H @ 0x300005
   967                           ;	CCP2 MUX bit
   968                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   969                           ;	PORTB A/D Enable bit
   970                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   971                           ;	P3A/CCP3 Mux bit
   972                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   973                           ;	HFINTOSC Fast Start-up
   974                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   975                           ;	Timer3 Clock input mux bit
   976                           ;	T3CMX = PORTC0, T3CKI is on RC0
   977                           ;	ECCP2 B output mux bit
   978                           ;	P2BMX = PORTD2, P2B is on RD2
   979                           ;	MCLR Pin Enable bit
   980                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   981   300005                     	org	3145733
   982   300005  BF                 	db	191
   983                           
   984                           ;Config register CONFIG4L @ 0x300006
   985                           ;	Stack Full/Underflow Reset Enable bit
   986                           ;	STVREN = ON, Stack full/underflow will cause Reset
   987                           ;	Single-Supply ICSP Enable bit
   988                           ;	LVP = OFF, Single-Supply ICSP disabled
   989                           ;	Extended Instruction Set Enable bit
   990                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   991                           ;	Background Debug
   992                           ;	DEBUG = 0x1, unprogrammed default
   993   300006                     	org	3145734
   994   300006  81                 	db	129
   995                           
   996                           ; Padding undefined space
   997   300007                     	org	3145735
   998   300007  FF                 	db	255
   999                           
  1000                           ;Config register CONFIG5L @ 0x300008
  1001                           ;	Code Protection Block 0
  1002                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1003                           ;	Code Protection Block 1
  1004                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1005                           ;	Code Protection Block 2
  1006                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1007                           ;	Code Protection Block 3
  1008                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1009   300008                     	org	3145736
  1010   300008  0F                 	db	15
  1011                           
  1012                           ;Config register CONFIG5H @ 0x300009
  1013                           ;	Boot Block Code Protection bit
  1014                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1015                           ;	Data EEPROM Code Protection bit
  1016                           ;	CPD = OFF, Data EEPROM not code-protected
  1017   300009                     	org	3145737
  1018   300009  C0                 	db	192
  1019                           
  1020                           ;Config register CONFIG6L @ 0x30000A
  1021                           ;	Write Protection Block 0
  1022                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1023                           ;	Write Protection Block 1
  1024                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1025                           ;	Write Protection Block 2
  1026                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1027                           ;	Write Protection Block 3
  1028                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1029   30000A                     	org	3145738
  1030   30000A  0F                 	db	15
  1031                           
  1032                           ;Config register CONFIG6H @ 0x30000B
  1033                           ;	Configuration Register Write Protection bit
  1034                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1035                           ;	Boot Block Write Protection bit
  1036                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1037                           ;	Data EEPROM Write Protection bit
  1038                           ;	WRTD = OFF, Data EEPROM not write-protected
  1039   30000B                     	org	3145739
  1040   30000B  E0                 	db	224
  1041                           
  1042                           ;Config register CONFIG7L @ 0x30000C
  1043                           ;	Table Read Protection Block 0
  1044                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1045                           ;	Table Read Protection Block 1
  1046                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1047                           ;	Table Read Protection Block 2
  1048                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1049                           ;	Table Read Protection Block 3
  1050                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1051   30000C                     	org	3145740
  1052   30000C  0F                 	db	15
  1053                           
  1054                           ;Config register CONFIG7H @ 0x30000D
  1055                           ;	Boot Block Table Read Protection bit
  1056                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1057   30000D                     	org	3145741
  1058   30000D  40                 	db	64
  1059                           tosu	equ	0xFFF
  1060                           tosh	equ	0xFFE
  1061                           tosl	equ	0xFFD
  1062                           stkptr	equ	0xFFC
  1063                           pclatu	equ	0xFFB
  1064                           pclath	equ	0xFFA
  1065                           pcl	equ	0xFF9
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           indf0	equ	0xFEF
  1073                           postinc0	equ	0xFEE
  1074                           postdec0	equ	0xFED
  1075                           preinc0	equ	0xFEC
  1076                           plusw0	equ	0xFEB
  1077                           fsr0h	equ	0xFEA
  1078                           fsr0l	equ	0xFE9
  1079                           wreg	equ	0xFE8
  1080                           indf1	equ	0xFE7
  1081                           postinc1	equ	0xFE6
  1082                           postdec1	equ	0xFE5
  1083                           preinc1	equ	0xFE4
  1084                           plusw1	equ	0xFE3
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           bsr	equ	0xFE0
  1088                           indf2	equ	0xFDF
  1089                           postinc2	equ	0xFDE
  1090                           postdec2	equ	0xFDD
  1091                           preinc2	equ	0xFDC
  1092                           plusw2	equ	0xFDB
  1093                           fsr2h	equ	0xFDA
  1094                           fsr2l	equ	0xFD9
  1095                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _Show_Data_LCD->_LCD_Set_Write
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    _EUSART_Int_Rx->i2_LCD_Set_Write
    i2_LCD_Set_Write->i2_LCD_Data_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2386
                     _Configurations
                           _LCD_Init
                      _Show_Data_LCD
 ---------------------------------------------------------------------------------
 (1) _Show_Data_LCD                                        0     0      0    1193
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1193
                                              9 COMRAM     2     2      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1    1193
                                              7 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        1     1      0     215
                                              4 COMRAM     1     1      0
                    i2_LCD_Set_Write
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Set_Write                                      2     1      1     192
                                              2 COMRAM     2     1      1
             i2_LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Data_Instruction                               2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction
   _Show_Data_LCD
     _LCD_Set_Write

 _EUSART_Int_Rx (ROOT)
   i2_LCD_Set_Write
     i2_LCD_Data_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      B       B       1       11.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBIGSFRll          2      0       0      46        0.0%
ABS                  0      0       0      47        0.0%
BIGRAM             F37      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jan 28 20:05:13 2024

                            l51 021A                              l60 00F6                              l52 021A  
                            l63 01F0                              l57 016E                              l66 0132  
                            l76 01D4                              u55 01E0                              u56 01E2  
                            u97 0064                             l800 0156                             l810 0164  
                           l802 0158                             l812 0166                             l804 015A  
                           l900 00D4                             l814 0168                             l806 015C  
                           l902 00DE                             l816 016A                             l808 015E  
                           l760 0120                             l752 00FA                             l904 01AC  
                           l912 020E                             l818 016C                             l762 0122  
                           l754 00FC                             l914 0212                             l756 010C  
                           l916 0216                             l790 0140                             l782 0134  
                           l758 0110                             l792 0146                             l784 0138  
                           l864 01D8                             l794 0148                             l786 013C  
                           l866 01E2                             l890 00A2                             l882 005E  
                           l796 014E                             l788 013E                             l868 01EA  
                           l892 00AC                             l884 006E                             l798 0150  
                           l894 00B6                             l886 0078                             l896 00C0  
                           l888 0092                             l898 00CA                             u107 007E  
                           u117 0098                             u127 00E8                             u137 0102  
                           u147 0116                             u157 0128                   _LCD_Set_Write 01D6  
                           wreg 0FE8                      _TXSTA1bits 0FAC                            _LATD 0F8C  
                          i2l63 020C                            i2l73 0056                            i2l66 01AA  
                          _main 020E                            btemp 000C                            start 005A  
                  ___param_bank 0000                __end_of_LCD_Init 00F8                           ?_main 0001  
                ?_LCD_Set_Write 0008                           _BRGH1 7D62                   _EUSART_Int_Rx 0008  
                         i2l910 0206                           i2l920 0018                           i2l906 01F4  
                         i2l922 001C                           i2l908 01FE                           i2l924 002E  
                         i2l870 0172                           i2l918 000A                           i2l880 019A  
                         i2l872 0174                           i2l874 0184                           i2l876 0188  
                         i2l878 0198                           _TRISD 0F95        ??i2_LCD_Data_Instruction 0001  
                         ttemp5 000D                           ttemp6 0010                           ttemp7 0014  
                         status 0FD8                           wtemp8 000D                 __initialization 0222  
                  __end_of_main 0222                          ??_main 000C                  ?_EUSART_Int_Rx 0001  
                 __activetblptr 0000                          _BRG161 7DC3                          _ANSELD 0F3B  
                        _RC1REG 0FAE           __end_of_Show_Data_LCD 01D6                          _OSCCON 0FD3  
            LCD_Set_Write@WR_SE 0009                          _SPBRG1 0FAF                          i2u6_45 01FC  
                        i2u6_46 01FE                          i2u7_40 0018                          i2u7_41 0014  
                        i2u8_40 002E                          i2u8_41 002A               ??i2_LCD_Set_Write 0004  
               ??_LCD_Set_Write 0009                          isa$std 0001                      __accesstop 0060  
       __end_of__initialization 0222                       ?_LCD_Init 0001                   ___rparam_used 0001  
                __pcstackCOMRAM 0001                 ??_EUSART_Int_Rx 0005                      ??_LCD_Init 000A  
        i2_LCD_Data_Instruction 0170          i2LCD_Set_Write@Command 0003                         i2u16_47 017A  
                       i2u17_47 018E                         i2u18_47 01A0      i2LCD_Data_Instruction@Data 0002  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 0222  
                       __ramtop 1000                         __ptext0 020E                         __ptext1 01AC  
                       __ptext2 005E                         __ptext3 01D6                         __ptext4 00F8  
                       __ptext5 0134                         __ptext7 01F2                         __ptext8 0170  
               i2_LCD_Set_Write 01F2            end_of_initialization 0222                       _TRISCbits 0F94  
         __end_of_LCD_Set_Write 01F2         __end_ofi2_LCD_Set_Write 020E             start_initialization 0222  
  __end_of_LCD_Data_Instruction 0134                  _Configurations 0134            i2LCD_Set_Write@WR_SE 0004  
       ?i2_LCD_Data_Instruction 0001                EUSART_Int_Rx@Var 0005           __end_of_EUSART_Int_Rx 005A  
        __end_of_Configurations 0170  __end_ofi2_LCD_Data_Instruction 01AC                   _Show_Data_LCD 01AC  
      LCD_Data_Instruction@Data 0007                       __pintcode 0008                ?i2_LCD_Set_Write 0003  
               ?_Configurations 0001                  ?_Show_Data_LCD 0001                        _LCD_Init 005E  
                      _LATCbits 0F8B                        _PIE1bits 0F9D                        _PIR1bits 0F9E  
          _LCD_Data_Instruction 00F8                        _RCONbits 0FD0            LCD_Set_Write@Command 0008  
                      __Hrparam 0000           ?_LCD_Data_Instruction 0001                        __Lrparam 0000  
                    _ANSELCbits 0F3A                 ??_Show_Data_LCD 000A                        isa$xinst 0000  
                      int$flags 000C                      _INTCONbits 0FF2                        intlevel2 0000  
                    _RCSTA1bits 0FAB          ??_LCD_Data_Instruction 0006                ??_Configurations 0006  
