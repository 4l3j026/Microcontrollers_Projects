

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jan 29 00:48:30 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 09/02/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F46K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   000262                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _Text1
    62   000262  48                 	db	72
    63   000263  65                 	db	101
    64   000264  6C                 	db	108
    65   000265  6C                 	db	108
    66   000266  6F                 	db	111
    67   000267  20                 	db	32
    68   000268  61                 	db	97
    69   000269  6E                 	db	110
    70   00026A  64                 	db	100
    71   00026B  20                 	db	32
    72   00026C  57                 	db	87
    73   00026D  65                 	db	101
    74   00026E  6C                 	db	108
    75   00026F  63                 	db	99
    76   000270  6F                 	db	111
    77   000271  6D                 	db	109
    78   000272  65                 	db	101
    79   000273  21                 	db	33
    80   000274  00                 	db	0
    81   000275  00                 	db	0
    82                           
    83                           ;initializer for _Text3
    84   000276  43                 	db	67
    85   000277  6F                 	db	111
    86   000278  75                 	db	117
    87   000279  6E                 	db	110
    88   00027A  74                 	db	116
    89   00027B  65                 	db	101
    90   00027C  72                 	db	114
    91   00027D  20                 	db	32
    92   00027E  49                 	db	73
    93   00027F  6E                 	db	110
    94   000280  74                 	db	116
    95   000281  20                 	db	32
    96   000282  32                 	db	50
    97   000283  3A                 	db	58
    98   000284  20                 	db	32
    99   000285  00                 	db	0
   100                           
   101                           ;initializer for _Text2
   102   000286  43                 	db	67
   103   000287  6F                 	db	111
   104   000288  75                 	db	117
   105   000289  6E                 	db	110
   106   00028A  74                 	db	116
   107   00028B  65                 	db	101
   108   00028C  72                 	db	114
   109   00028D  20                 	db	32
   110   00028E  49                 	db	73
   111   00028F  6E                 	db	110
   112   000290  74                 	db	116
   113   000291  20                 	db	32
   114   000292  30                 	db	48
   115   000293  3A                 	db	58
   116   000294  20                 	db	32
   117   000295  00                 	db	0
   118   000000                     _TXSTA1bits	set	4012
   119   000000                     _ANSELCbits	set	3898
   120   000000                     _OSCCON	set	4051
   121   000000                     _INTCONbits	set	4082
   122   000000                     _LATCbits	set	3979
   123   000000                     _TRISCbits	set	3988
   124   000000                     _ANSELD	set	3899
   125   000000                     _PIE1bits	set	3997
   126   000000                     _RCONbits	set	4048
   127   000000                     _TRISD	set	3989
   128   000000                     _LATD	set	3980
   129   000000                     _RCSTA1bits	set	4011
   130   000000                     _SPBRG1	set	4015
   131   000000                     _PIR1bits	set	3998
   132   000000                     _BRGH1	set	32098
   133   000000                     _BRG161	set	32195
   134   000000                     _RC1REG	set	4014
   135                           
   136                           ; #config settings
   137                           
   138                           	psect	cinit
   139   000296                     __pcinit:
   140                           	callstack 0
   141   000296                     start_initialization:
   142                           	callstack 0
   143   000296                     __initialization:
   144                           	callstack 0
   145                           
   146                           ; Initialize objects allocated to COMRAM (52 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148   000296  0E62               	movlw	low __pidataCOMRAM
   149   000298  6EF6               	movwf	tblptrl,c
   150   00029A  0E02               	movlw	high __pidataCOMRAM
   151   00029C  6EF7               	movwf	tblptrh,c
   152   00029E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153   0002A0  6EF8               	movwf	tblptru,c
   154   0002A2  EE00  F001         	lfsr	0,__pdataCOMRAM
   155   0002A6  EE10 F034          	lfsr	1,52
   156   0002AA                     copy_data0:
   157   0002AA  0009               	tblrd		*+
   158   0002AC  CFF5 FFEE          	movff	tablat,postinc0
   159   0002B0  50E5               	movf	postdec1,w,c
   160   0002B2  50E1               	movf	fsr1l,w,c
   161   0002B4  E1FA               	bnz	copy_data0
   162   0002B6                     end_of_initialization:
   163                           	callstack 0
   164   0002B6                     __end_of__initialization:
   165                           	callstack 0
   166   0002B6  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167   0002B8  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168   0002BA  0100               	movlb	0
   169   0002BC  EF6E  F001         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	dataCOMRAM
   172   000001                     __pdataCOMRAM:
   173                           	callstack 0
   174   000001                     _Text1:
   175                           	callstack 0
   176   000001                     	ds	20
   177   000015                     _Text3:
   178                           	callstack 0
   179   000015                     	ds	16
   180   000025                     _Text2:
   181                           	callstack 0
   182   000025                     	ds	16
   183                           
   184                           	psect	cstackCOMRAM
   185   000035                     __pcstackCOMRAM:
   186                           	callstack 0
   187   000035                     ??_LCD_Data_Instruction:
   188   000035                     ?_strlen:
   189                           	callstack 0
   190   000035                     strlen@s:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x0
   194   000035                     	ds	1
   195   000036                     LCD_Data_Instruction@Data:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x1
   199   000036                     	ds	1
   200   000037                     LCD_Set_Write@Command:
   201                           	callstack 0
   202   000037                     strlen@a:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x2
   206   000037                     	ds	1
   207   000038                     LCD_Set_Write@WR_SE:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x3
   211   000038                     	ds	1
   212   000039                     ??_LCD_Init:
   213   000039                     ??_Show_Data_LCD:
   214                           
   215                           ; 1 bytes @ 0x4
   216   000039                     	ds	2
   217   00003B                     Show_Data_LCD@i:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x6
   221   00003B                     	ds	1
   222   00003C                     Show_Data_LCD@i_559:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x7
   226   00003C                     	ds	1
   227   00003D                     Show_Data_LCD@i_560:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x8
   231   00003D                     	ds	1
   232   00003E                     
   233                           ; 1 bytes @ 0x9
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 43 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 4
   259 ;; This function calls:
   260 ;;		_Configurations
   261 ;;		_LCD_Init
   262 ;;		_Show_Data_LCD
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text0
   269   0002DC                     __ptext0:
   270                           	callstack 0
   271   0002DC                     _main:
   272                           	callstack 27
   273   0002DC                     
   274                           ;main.c: 46:     Configurations();
   275   0002DC  ECF8  F000         	call	_Configurations	;wreg free
   276   0002E0                     
   277                           ;main.c: 47:     LCD_Init();
   278   0002E0  EC8D  F000         	call	_LCD_Init	;wreg free
   279   0002E4                     
   280                           ;main.c: 48:     Show_Data_LCD();
   281   0002E4  EC11  F000         	call	_Show_Data_LCD	;wreg free
   282   0002E8                     l59:
   283   0002E8  EF74  F001         	goto	l59
   284   0002EC  EF0F  F000         	goto	start
   285   0002F0                     __end_of_main:
   286                           	callstack 0
   287                           
   288 ;; *************** function _Show_Data_LCD *****************
   289 ;; Defined at:
   290 ;;		line 164 in file "main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  i               1    8[COMRAM] unsigned char 
   295 ;;  i               1    7[COMRAM] unsigned char 
   296 ;;  i               1    6[COMRAM] unsigned char 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;Total ram usage:        5 bytes
   311 ;; Hardware stack levels used: 1
   312 ;; Hardware stack levels required when called: 3
   313 ;; This function calls:
   314 ;;		_LCD_Set_Write
   315 ;;		_strlen
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text1
   322   000022                     __ptext1:
   323                           	callstack 0
   324   000022                     _Show_Data_LCD:
   325                           	callstack 27
   326   000022                     
   327                           ;main.c: 166:     LCD_Set_Write(0, 0X80);
   328   000022  0E80               	movlw	128
   329   000024  6E37               	movwf	LCD_Set_Write@Command^0,c
   330   000026  0E00               	movlw	0
   331   000028  EC60  F001         	call	_LCD_Set_Write
   332   00002C                     
   333                           ;main.c: 168:     for (uint8_t i = 0; i < strlen(Text1); i++) {
   334   00002C  0E00               	movlw	0
   335   00002E  6E3B               	movwf	Show_Data_LCD@i^0,c
   336   000030  EF26  F000         	goto	l949
   337   000034                     l945:
   338                           
   339                           ;main.c: 170:         LCD_Set_Write(1, Text1[i]);
   340   000034  0E01               	movlw	low _Text1
   341   000036  243B               	addwf	Show_Data_LCD@i^0,w,c
   342   000038  6ED9               	movwf	fsr2l,c
   343   00003A  6ADA               	clrf	fsr2h,c
   344   00003C  0E00               	movlw	high _Text1
   345   00003E  22DA               	addwfc	fsr2h,f,c
   346   000040  50DF               	movf	indf2,w,c
   347   000042  6E37               	movwf	LCD_Set_Write@Command^0,c
   348   000044  0E01               	movlw	1
   349   000046  EC60  F001         	call	_LCD_Set_Write
   350   00004A                     
   351                           ;main.c: 172:     }
   352   00004A  2A3B               	incf	Show_Data_LCD@i^0,f,c
   353   00004C                     l949:
   354   00004C  0E01               	movlw	low _Text1
   355   00004E  6E35               	movwf	strlen@s^0,c
   356   000050  0E00               	movlw	high _Text1
   357   000052  6E36               	movwf	(strlen@s+1)^0,c
   358   000054  EC16  F001         	call	_strlen	;wreg free
   359   000058  503B               	movf	Show_Data_LCD@i^0,w,c
   360   00005A  6E39               	movwf	??_Show_Data_LCD^0,c
   361   00005C  6A3A               	clrf	(??_Show_Data_LCD+1)^0,c
   362   00005E  5035               	movf	?_strlen^0,w,c
   363   000060  5C39               	subwf	??_Show_Data_LCD^0,w,c
   364   000062  5036               	movf	(?_strlen+1)^0,w,c
   365   000064  583A               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   366   000066  A0D8               	btfss	status,0,c
   367   000068  EF38  F000         	goto	u91
   368   00006C  EF3A  F000         	goto	u90
   369   000070                     u91:
   370   000070  EF1A  F000         	goto	l945
   371   000074                     u90:
   372   000074                     
   373                           ;main.c: 174:     LCD_Set_Write(0, 0xC0);
   374   000074  0EC0               	movlw	192
   375   000076  6E37               	movwf	LCD_Set_Write@Command^0,c
   376   000078  0E00               	movlw	0
   377   00007A  EC60  F001         	call	_LCD_Set_Write
   378   00007E                     
   379                           ;main.c: 176:     for (uint8_t i = 0; i < strlen(Text2); i++) {
   380   00007E  0E00               	movlw	0
   381   000080  6E3C               	movwf	Show_Data_LCD@i_559^0,c
   382   000082  EF4F  F000         	goto	l959
   383   000086                     l955:
   384                           
   385                           ;main.c: 178:         LCD_Set_Write(1, Text2[i]);
   386   000086  0E25               	movlw	low _Text2
   387   000088  243C               	addwf	Show_Data_LCD@i_559^0,w,c
   388   00008A  6ED9               	movwf	fsr2l,c
   389   00008C  6ADA               	clrf	fsr2h,c
   390   00008E  0E00               	movlw	high _Text2
   391   000090  22DA               	addwfc	fsr2h,f,c
   392   000092  50DF               	movf	indf2,w,c
   393   000094  6E37               	movwf	LCD_Set_Write@Command^0,c
   394   000096  0E01               	movlw	1
   395   000098  EC60  F001         	call	_LCD_Set_Write
   396   00009C                     
   397                           ;main.c: 180:     }
   398   00009C  2A3C               	incf	Show_Data_LCD@i_559^0,f,c
   399   00009E                     l959:
   400   00009E  0E25               	movlw	low _Text2
   401   0000A0  6E35               	movwf	strlen@s^0,c
   402   0000A2  0E00               	movlw	high _Text2
   403   0000A4  6E36               	movwf	(strlen@s+1)^0,c
   404   0000A6  EC16  F001         	call	_strlen	;wreg free
   405   0000AA  503C               	movf	Show_Data_LCD@i_559^0,w,c
   406   0000AC  6E39               	movwf	??_Show_Data_LCD^0,c
   407   0000AE  6A3A               	clrf	(??_Show_Data_LCD+1)^0,c
   408   0000B0  5035               	movf	?_strlen^0,w,c
   409   0000B2  5C39               	subwf	??_Show_Data_LCD^0,w,c
   410   0000B4  5036               	movf	(?_strlen+1)^0,w,c
   411   0000B6  583A               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   412   0000B8  A0D8               	btfss	status,0,c
   413   0000BA  EF61  F000         	goto	u101
   414   0000BE  EF63  F000         	goto	u100
   415   0000C2                     u101:
   416   0000C2  EF43  F000         	goto	l955
   417   0000C6                     u100:
   418   0000C6                     
   419                           ;main.c: 182:     LCD_Set_Write(0, 0X94);
   420   0000C6  0E94               	movlw	148
   421   0000C8  6E37               	movwf	LCD_Set_Write@Command^0,c
   422   0000CA  0E00               	movlw	0
   423   0000CC  EC60  F001         	call	_LCD_Set_Write
   424   0000D0                     
   425                           ;main.c: 184:     for (uint8_t i = 0; i < strlen(Text3); i++) {
   426   0000D0  0E00               	movlw	0
   427   0000D2  6E3D               	movwf	Show_Data_LCD@i_560^0,c
   428   0000D4  EF78  F000         	goto	l969
   429   0000D8                     l965:
   430                           
   431                           ;main.c: 186:         LCD_Set_Write(1, Text3[i]);
   432   0000D8  0E15               	movlw	low _Text3
   433   0000DA  243D               	addwf	Show_Data_LCD@i_560^0,w,c
   434   0000DC  6ED9               	movwf	fsr2l,c
   435   0000DE  6ADA               	clrf	fsr2h,c
   436   0000E0  0E00               	movlw	high _Text3
   437   0000E2  22DA               	addwfc	fsr2h,f,c
   438   0000E4  50DF               	movf	indf2,w,c
   439   0000E6  6E37               	movwf	LCD_Set_Write@Command^0,c
   440   0000E8  0E01               	movlw	1
   441   0000EA  EC60  F001         	call	_LCD_Set_Write
   442   0000EE                     
   443                           ;main.c: 188:     }
   444   0000EE  2A3D               	incf	Show_Data_LCD@i_560^0,f,c
   445   0000F0                     l969:
   446   0000F0  0E15               	movlw	low _Text3
   447   0000F2  6E35               	movwf	strlen@s^0,c
   448   0000F4  0E00               	movlw	high _Text3
   449   0000F6  6E36               	movwf	(strlen@s+1)^0,c
   450   0000F8  EC16  F001         	call	_strlen	;wreg free
   451   0000FC  503D               	movf	Show_Data_LCD@i_560^0,w,c
   452   0000FE  6E39               	movwf	??_Show_Data_LCD^0,c
   453   000100  6A3A               	clrf	(??_Show_Data_LCD+1)^0,c
   454   000102  5035               	movf	?_strlen^0,w,c
   455   000104  5C39               	subwf	??_Show_Data_LCD^0,w,c
   456   000106  5036               	movf	(?_strlen+1)^0,w,c
   457   000108  583A               	subwfb	(??_Show_Data_LCD+1)^0,w,c
   458   00010A  A0D8               	btfss	status,0,c
   459   00010C  EF8A  F000         	goto	u111
   460   000110  EF8C  F000         	goto	u110
   461   000114                     u111:
   462   000114  EF6C  F000         	goto	l965
   463   000118                     u110:
   464   000118  0012               	return		;funcret
   465   00011A                     __end_of_Show_Data_LCD:
   466                           	callstack 0
   467                           
   468 ;; *************** function _strlen *****************
   469 ;; Defined at:
   470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  s               2    0[COMRAM] PTR const unsigned char 
   473 ;;		 -> Text3(16), Text2(16), Text1(20), 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  a               2    2[COMRAM] PTR const unsigned char 
   476 ;;		 -> Text3(16), Text2(16), Text1(20), 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  2    0[COMRAM] unsigned int 
   479 ;; Registers used:
   480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;Total ram usage:        4 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; Hardware stack levels required when called: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_Show_Data_LCD
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text2
   501   00022C                     __ptext2:
   502                           	callstack 0
   503   00022C                     _strlen:
   504                           	callstack 28
   505   00022C  C035  F037         	movff	strlen@s,strlen@a
   506   000230  C036  F038         	movff	strlen@s+1,strlen@a+1
   507   000234  EF1E  F001         	goto	l913
   508   000238                     l911:
   509   000238  4A35               	infsnz	strlen@s^0,f,c
   510   00023A  2A36               	incf	(strlen@s+1)^0,f,c
   511   00023C                     l913:
   512   00023C  C035  FFD9         	movff	strlen@s,fsr2l
   513   000240  C036  FFDA         	movff	strlen@s+1,fsr2h
   514   000244  50DF               	movf	indf2,w,c
   515   000246  A4D8               	btfss	status,2,c
   516   000248  EF28  F001         	goto	u81
   517   00024C  EF2A  F001         	goto	u80
   518   000250                     u81:
   519   000250  EF1C  F001         	goto	l911
   520   000254                     u80:
   521   000254  5037               	movf	strlen@a^0,w,c
   522   000256  5C35               	subwf	strlen@s^0,w,c
   523   000258  6E35               	movwf	?_strlen^0,c
   524   00025A  5038               	movf	(strlen@a+1)^0,w,c
   525   00025C  5836               	subwfb	(strlen@s+1)^0,w,c
   526   00025E  6E36               	movwf	(?_strlen+1)^0,c
   527   000260  0012               	return		;funcret
   528   000262                     __end_of_strlen:
   529                           	callstack 0
   530                           
   531 ;; *************** function _LCD_Init *****************
   532 ;; Defined at:
   533 ;;		line 108 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;Total ram usage:        2 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 3
   554 ;; This function calls:
   555 ;;		_LCD_Set_Write
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text3
   562   00011A                     __ptext3:
   563                           	callstack 0
   564   00011A                     _LCD_Init:
   565                           	callstack 27
   566   00011A                     
   567                           ;main.c: 110:     _delay((unsigned long)((20)*(16000000/4000.0)));
   568   00011A  0E68               	movlw	104
   569   00011C  6E39               	movwf	??_LCD_Init^0,c
   570   00011E  0EE4               	movlw	228
   571   000120                     u127:
   572   000120  2EE8               	decfsz	wreg,f,c
   573   000122  D7FE               	bra	u127
   574   000124  2E39               	decfsz	??_LCD_Init^0,f,c
   575   000126  D7FC               	bra	u127
   576   000128  D000               	nop2	
   577   00012A                     
   578                           ;main.c: 111:     LCD_Set_Write(0, 0x30);
   579   00012A  0E30               	movlw	48
   580   00012C  6E37               	movwf	LCD_Set_Write@Command^0,c
   581   00012E  0E00               	movlw	0
   582   000130  EC60  F001         	call	_LCD_Set_Write
   583   000134                     
   584                           ;main.c: 112:     _delay((unsigned long)((5)*(16000000/4000.0)));
   585   000134  0E1A               	movlw	26
   586   000136  6E39               	movwf	??_LCD_Init^0,c
   587   000138  0EF8               	movlw	248
   588   00013A                     u137:
   589   00013A  2EE8               	decfsz	wreg,f,c
   590   00013C  D7FE               	bra	u137
   591   00013E  2E39               	decfsz	??_LCD_Init^0,f,c
   592   000140  D7FC               	bra	u137
   593   000142  D000               	nop2	
   594                           
   595                           ;main.c: 113:     LCD_Set_Write(0, 0x30);
   596   000144  0E30               	movlw	48
   597   000146  6E37               	movwf	LCD_Set_Write@Command^0,c
   598   000148  0E00               	movlw	0
   599   00014A  EC60  F001         	call	_LCD_Set_Write
   600   00014E                     
   601                           ;main.c: 114:     _delay((unsigned long)((5)*(16000000/4000.0)));
   602   00014E  0E1A               	movlw	26
   603   000150  6E39               	movwf	??_LCD_Init^0,c
   604   000152  0EF8               	movlw	248
   605   000154                     u147:
   606   000154  2EE8               	decfsz	wreg,f,c
   607   000156  D7FE               	bra	u147
   608   000158  2E39               	decfsz	??_LCD_Init^0,f,c
   609   00015A  D7FC               	bra	u147
   610   00015C  D000               	nop2	
   611   00015E                     
   612                           ;main.c: 115:     LCD_Set_Write(0, 0x30);
   613   00015E  0E30               	movlw	48
   614   000160  6E37               	movwf	LCD_Set_Write@Command^0,c
   615   000162  0E00               	movlw	0
   616   000164  EC60  F001         	call	_LCD_Set_Write
   617   000168                     
   618                           ;main.c: 116:     LCD_Set_Write(0, 0x02);
   619   000168  0E02               	movlw	2
   620   00016A  6E37               	movwf	LCD_Set_Write@Command^0,c
   621   00016C  0E00               	movlw	0
   622   00016E  EC60  F001         	call	_LCD_Set_Write
   623   000172                     
   624                           ;main.c: 117:     LCD_Set_Write(0, 0x06);
   625   000172  0E06               	movlw	6
   626   000174  6E37               	movwf	LCD_Set_Write@Command^0,c
   627   000176  0E00               	movlw	0
   628   000178  EC60  F001         	call	_LCD_Set_Write
   629   00017C                     
   630                           ;main.c: 118:     LCD_Set_Write(0, 0x0F);
   631   00017C  0E0F               	movlw	15
   632   00017E  6E37               	movwf	LCD_Set_Write@Command^0,c
   633   000180  0E00               	movlw	0
   634   000182  EC60  F001         	call	_LCD_Set_Write
   635   000186                     
   636                           ;main.c: 119:     LCD_Set_Write(0, 0x28);
   637   000186  0E28               	movlw	40
   638   000188  6E37               	movwf	LCD_Set_Write@Command^0,c
   639   00018A  0E00               	movlw	0
   640   00018C  EC60  F001         	call	_LCD_Set_Write
   641   000190                     
   642                           ;main.c: 120:     LCD_Set_Write(0, 0x01);
   643   000190  0E01               	movlw	1
   644   000192  6E37               	movwf	LCD_Set_Write@Command^0,c
   645   000194  0E00               	movlw	0
   646   000196  EC60  F001         	call	_LCD_Set_Write
   647   00019A                     
   648                           ;main.c: 121:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   649   00019A  0E15               	movlw	21
   650   00019C  6E3A               	movwf	(??_LCD_Init+1)^0,c
   651   00019E  0E4B               	movlw	75
   652   0001A0  6E39               	movwf	??_LCD_Init^0,c
   653   0001A2  0EBE               	movlw	190
   654   0001A4                     u157:
   655   0001A4  2EE8               	decfsz	wreg,f,c
   656   0001A6  D7FE               	bra	u157
   657   0001A8  2E39               	decfsz	??_LCD_Init^0,f,c
   658   0001AA  D7FC               	bra	u157
   659   0001AC  2E3A               	decfsz	(??_LCD_Init+1)^0,f,c
   660   0001AE  D7FA               	bra	u157
   661   0001B0  D000               	nop2	
   662   0001B2  0012               	return		;funcret
   663   0001B4                     __end_of_LCD_Init:
   664                           	callstack 0
   665                           
   666 ;; *************** function _LCD_Set_Write *****************
   667 ;; Defined at:
   668 ;;		line 127 in file "main.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  WR_SE           1    wreg     unsigned char 
   671 ;;  Command         1    2[COMRAM] unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  WR_SE           1    3[COMRAM] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   683 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;Total ram usage:        2 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 2
   690 ;; This function calls:
   691 ;;		_LCD_Data_Instruction
   692 ;; This function is called by:
   693 ;;		_LCD_Init
   694 ;;		_Show_Data_LCD
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text4
   699   0002C0                     __ptext4:
   700                           	callstack 0
   701   0002C0                     _LCD_Set_Write:
   702                           	callstack 27
   703                           
   704                           ;incstack = 0
   705                           ;LCD_Set_Write@WR_SE stored from wreg
   706   0002C0  6E38               	movwf	LCD_Set_Write@WR_SE^0,c
   707   0002C2                     
   708                           ;main.c: 129:     LATCbits.LATC4 = WR_SE;
   709   0002C2  B038               	btfsc	LCD_Set_Write@WR_SE^0,0,c
   710   0002C4  D002               	bra	u75
   711   0002C6  988B               	bcf	139,4,c	;volatile
   712   0002C8  D001               	bra	u76
   713   0002CA                     u75:
   714   0002CA  888B               	bsf	139,4,c	;volatile
   715   0002CC                     u76:
   716   0002CC                     
   717                           ;main.c: 130:     LCD_Data_Instruction(Command >> 4);
   718   0002CC  3837               	swapf	LCD_Set_Write@Command^0,w,c
   719   0002CE  0B0F               	andlw	15
   720   0002D0  ECDA  F000         	call	_LCD_Data_Instruction
   721   0002D4                     
   722                           ;main.c: 131:     LCD_Data_Instruction(Command);
   723   0002D4  5037               	movf	LCD_Set_Write@Command^0,w,c
   724   0002D6  ECDA  F000         	call	_LCD_Data_Instruction
   725   0002DA  0012               	return		;funcret
   726   0002DC                     __end_of_LCD_Set_Write:
   727                           	callstack 0
   728                           
   729 ;; *************** function _LCD_Data_Instruction *****************
   730 ;; Defined at:
   731 ;;		line 137 in file "main.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  Data            1    wreg     unsigned char 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  Data            1    1[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_LCD_Set_Write
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text5
   760   0001B4                     __ptext5:
   761                           	callstack 0
   762   0001B4                     _LCD_Data_Instruction:
   763                           	callstack 27
   764                           
   765                           ;incstack = 0
   766                           ;LCD_Data_Instruction@Data stored from wreg
   767   0001B4  6E36               	movwf	LCD_Data_Instruction@Data^0,c
   768   0001B6                     
   769                           ;main.c: 139:     LATCbits.LATC5 = 1;
   770   0001B6  8A8B               	bsf	139,5,c	;volatile
   771   0001B8                     
   772                           ;main.c: 140:     _delay((unsigned long)((15)*(16000000/4000.0)));
   773   0001B8  0E4E               	movlw	78
   774   0001BA  6E35               	movwf	??_LCD_Data_Instruction^0,c
   775   0001BC  0EEB               	movlw	235
   776   0001BE                     u167:
   777   0001BE  2EE8               	decfsz	wreg,f,c
   778   0001C0  D7FE               	bra	u167
   779   0001C2  2E35               	decfsz	??_LCD_Data_Instruction^0,f,c
   780   0001C4  D7FC               	bra	u167
   781   0001C6  F000               	nop	
   782   0001C8                     
   783                           ;main.c: 141:     LATD = Data;
   784   0001C8  C036  FF8C         	movff	LCD_Data_Instruction@Data,3980	;volatile
   785   0001CC                     
   786                           ;main.c: 142:     _delay((unsigned long)((15)*(16000000/4000.0)));
   787   0001CC  0E4E               	movlw	78
   788   0001CE  6E35               	movwf	??_LCD_Data_Instruction^0,c
   789   0001D0  0EEB               	movlw	235
   790   0001D2                     u177:
   791   0001D2  2EE8               	decfsz	wreg,f,c
   792   0001D4  D7FE               	bra	u177
   793   0001D6  2E35               	decfsz	??_LCD_Data_Instruction^0,f,c
   794   0001D8  D7FC               	bra	u177
   795   0001DA  F000               	nop	
   796   0001DC                     
   797                           ;main.c: 143:     LATCbits.LATC5 = 0;
   798   0001DC  9A8B               	bcf	139,5,c	;volatile
   799   0001DE                     
   800                           ;main.c: 144:     _delay((unsigned long)((15)*(16000000/4000.0)));
   801   0001DE  0E4E               	movlw	78
   802   0001E0  6E35               	movwf	??_LCD_Data_Instruction^0,c
   803   0001E2  0EEB               	movlw	235
   804   0001E4                     u187:
   805   0001E4  2EE8               	decfsz	wreg,f,c
   806   0001E6  D7FE               	bra	u187
   807   0001E8  2E35               	decfsz	??_LCD_Data_Instruction^0,f,c
   808   0001EA  D7FC               	bra	u187
   809   0001EC  F000               	nop	
   810   0001EE  0012               	return		;funcret
   811   0001F0                     __end_of_LCD_Data_Instruction:
   812                           	callstack 0
   813                           
   814 ;; *************** function _Configurations *****************
   815 ;; Defined at:
   816 ;;		line 60 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text6
   845   0001F0                     __ptext6:
   846                           	callstack 0
   847   0001F0                     _Configurations:
   848                           	callstack 29
   849   0001F0                     
   850                           ;main.c: 62:     OSCCON = 0x72;
   851   0001F0  0E72               	movlw	114
   852   0001F2  6ED3               	movwf	211,c	;volatile
   853   0001F4                     
   854                           ;main.c: 65:     ANSELCbits.ANSC4 = 0;
   855   0001F4  010F               	movlb	15	; () banked
   856   0001F6  993A               	bcf	58,4,b	;volatile
   857   0001F8                     
   858                           ; BSR set to: 15
   859                           ;main.c: 66:     ANSELCbits.ANSC5 = 0;
   860   0001F8  9B3A               	bcf	58,5,b	;volatile
   861   0001FA                     
   862                           ; BSR set to: 15
   863                           ;main.c: 67:     ANSELCbits.ANSC6 = 0;
   864   0001FA  9D3A               	bcf	58,6,b	;volatile
   865   0001FC                     
   866                           ; BSR set to: 15
   867                           ;main.c: 68:     ANSELCbits.ANSC7 = 0;
   868   0001FC  9F3A               	bcf	58,7,b	;volatile
   869                           
   870                           ;main.c: 70:     ANSELD = 0x00;
   871   0001FE  0E00               	movlw	0
   872   000200  6F3B               	movwf	59,b	;volatile
   873   000202                     
   874                           ; BSR set to: 15
   875                           ;main.c: 73:     TRISCbits.RC4 = 0;
   876   000202  9894               	bcf	148,4,c	;volatile
   877   000204                     
   878                           ; BSR set to: 15
   879                           ;main.c: 74:     TRISCbits.RC5 = 0;
   880   000204  9A94               	bcf	148,5,c	;volatile
   881                           
   882                           ;main.c: 76:     TRISD = 0x00;
   883   000206  0E00               	movlw	0
   884   000208  6E95               	movwf	149,c	;volatile
   885   00020A                     
   886                           ; BSR set to: 15
   887                           ;main.c: 79:     LATCbits.LC4 = 0;
   888   00020A  988B               	bcf	139,4,c	;volatile
   889   00020C                     
   890                           ; BSR set to: 15
   891                           ;main.c: 80:     LATCbits.LC5 = 0;
   892   00020C  9A8B               	bcf	139,5,c	;volatile
   893                           
   894                           ;main.c: 82:     LATD = 0;
   895   00020E  0E00               	movlw	0
   896   000210  6E8C               	movwf	140,c	;volatile
   897   000212                     
   898                           ; BSR set to: 15
   899                           ;main.c: 86:     INTCONbits.GIE = 1;
   900   000212  8EF2               	bsf	242,7,c	;volatile
   901   000214                     
   902                           ; BSR set to: 15
   903                           ;main.c: 87:     INTCONbits.PEIE = 1;
   904   000214  8CF2               	bsf	242,6,c	;volatile
   905   000216                     
   906                           ; BSR set to: 15
   907                           ;main.c: 88:     RCONbits.IPEN = 0;
   908   000216  9ED0               	bcf	208,7,c	;volatile
   909   000218                     
   910                           ; BSR set to: 15
   911                           ;main.c: 90:     PIE1bits.RC1IE = 1;
   912   000218  8A9D               	bsf	157,5,c	;volatile
   913   00021A                     
   914                           ; BSR set to: 15
   915                           ;main.c: 91:     PIR1bits.RC1IF = 0;
   916   00021A  9A9E               	bcf	158,5,c	;volatile
   917                           
   918                           ;main.c: 95:     SPBRG1 = 0x67;
   919   00021C  0E67               	movlw	103
   920   00021E  6EAF               	movwf	175,c	;volatile
   921   000220                     
   922                           ; BSR set to: 15
   923                           ;main.c: 96:     BRGH1 = 1;
   924   000220  84AC               	bsf	4012,2,c	;volatile
   925   000222                     
   926                           ; BSR set to: 15
   927                           ;main.c: 97:     BRG161 = 0;
   928   000222  96B8               	bcf	4024,3,c	;volatile
   929   000224                     
   930                           ; BSR set to: 15
   931                           ;main.c: 100:     RCSTA1bits.CREN = 1;
   932   000224  88AB               	bsf	171,4,c	;volatile
   933   000226                     
   934                           ; BSR set to: 15
   935                           ;main.c: 101:     TXSTA1bits.SYNC = 0;
   936   000226  98AC               	bcf	172,4,c	;volatile
   937   000228                     
   938                           ; BSR set to: 15
   939                           ;main.c: 102:     RCSTA1bits.SPEN = 1;
   940   000228  8EAB               	bsf	171,7,c	;volatile
   941   00022A                     
   942                           ; BSR set to: 15
   943   00022A  0012               	return		;funcret
   944   00022C                     __end_of_Configurations:
   945                           	callstack 0
   946                           
   947 ;; *************** function _EUSART_Int_Rx *****************
   948 ;; Defined at:
   949 ;;		line 150 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		Interrupt level 2
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	intcode
   977   000008                     __pintcode:
   978                           	callstack 0
   979   000008                     _EUSART_Int_Rx:
   980                           	callstack 27
   981                           
   982                           ; BSR set to: 15
   983                           ;incstack = 0
   984   000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   985   00000A                     
   986                           ;main.c: 152:     if (PIR1bits.RC1IF) {
   987   00000A  AA9E               	btfss	158,5,c	;volatile
   988   00000C  EF0A  F000         	goto	i2u6_41
   989   000010  EF0C  F000         	goto	i2u6_40
   990   000014                     i2u6_41:
   991   000014  EF0D  F000         	goto	i2l81
   992   000018                     i2u6_40:
   993   000018                     
   994                           ;main.c: 154:         if (RC1REG) {
   995   000018  50AE               	movf	174,w,c	;volatile
   996   00001A                     i2l81:
   997   00001A  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   998   00001C  0011               	retfie		f
   999   00001E                     __end_of_EUSART_Int_Rx:
  1000                           	callstack 0
  1001   000000                     
  1002                           	psect	rparam
  1003   000000                     
  1004                           	psect	temp
  1005   00003E                     btemp:
  1006                           	callstack 0
  1007   00003E                     	ds	1
  1008   000000                     int$flags	set	btemp
  1009   000000                     wtemp8	set	btemp+1
  1010   000000                     ttemp5	set	btemp+1
  1011   000000                     ttemp6	set	btemp+4
  1012   000000                     ttemp7	set	btemp+8
  1013                           
  1014                           	psect	config
  1015                           
  1016                           ; Padding undefined space
  1017   300000                     	org	3145728
  1018   300000  FF                 	db	255
  1019                           
  1020                           ;Config register CONFIG1H @ 0x300001
  1021                           ;	Oscillator Selection bits
  1022                           ;	FOSC = INTIO67, Internal oscillator block
  1023                           ;	4X PLL Enable
  1024                           ;	PLLCFG = OFF, Oscillator used directly
  1025                           ;	Primary clock enable bit
  1026                           ;	PRICLKEN = ON, Primary clock is always enabled
  1027                           ;	Fail-Safe Clock Monitor Enable bit
  1028                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1029                           ;	Internal/External Oscillator Switchover bit
  1030                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1031   300001                     	org	3145729
  1032   300001  28                 	db	40
  1033                           
  1034                           ;Config register CONFIG2L @ 0x300002
  1035                           ;	Power-up Timer Enable bit
  1036                           ;	PWRTEN = OFF, Power up timer disabled
  1037                           ;	Brown-out Reset Enable bits
  1038                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1039                           ;	Brown Out Reset Voltage bits
  1040                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1041   300002                     	org	3145730
  1042   300002  1F                 	db	31
  1043                           
  1044                           ;Config register CONFIG2H @ 0x300003
  1045                           ;	Watchdog Timer Enable bits
  1046                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1047                           ;	Watchdog Timer Postscale Select bits
  1048                           ;	WDTPS = 32768, 1:32768
  1049   300003                     	org	3145731
  1050   300003  3C                 	db	60
  1051                           
  1052                           ; Padding undefined space
  1053   300004                     	org	3145732
  1054   300004  FF                 	db	255
  1055                           
  1056                           ;Config register CONFIG3H @ 0x300005
  1057                           ;	CCP2 MUX bit
  1058                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1059                           ;	PORTB A/D Enable bit
  1060                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1061                           ;	P3A/CCP3 Mux bit
  1062                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1063                           ;	HFINTOSC Fast Start-up
  1064                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1065                           ;	Timer3 Clock input mux bit
  1066                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1067                           ;	ECCP2 B output mux bit
  1068                           ;	P2BMX = PORTD2, P2B is on RD2
  1069                           ;	MCLR Pin Enable bit
  1070                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1071   300005                     	org	3145733
  1072   300005  BF                 	db	191
  1073                           
  1074                           ;Config register CONFIG4L @ 0x300006
  1075                           ;	Stack Full/Underflow Reset Enable bit
  1076                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1077                           ;	Single-Supply ICSP Enable bit
  1078                           ;	LVP = OFF, Single-Supply ICSP disabled
  1079                           ;	Extended Instruction Set Enable bit
  1080                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1081                           ;	Background Debug
  1082                           ;	DEBUG = 0x1, unprogrammed default
  1083   300006                     	org	3145734
  1084   300006  81                 	db	129
  1085                           
  1086                           ; Padding undefined space
  1087   300007                     	org	3145735
  1088   300007  FF                 	db	255
  1089                           
  1090                           ;Config register CONFIG5L @ 0x300008
  1091                           ;	Code Protection Block 0
  1092                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1093                           ;	Code Protection Block 1
  1094                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1095                           ;	Code Protection Block 2
  1096                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1097                           ;	Code Protection Block 3
  1098                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1099   300008                     	org	3145736
  1100   300008  0F                 	db	15
  1101                           
  1102                           ;Config register CONFIG5H @ 0x300009
  1103                           ;	Boot Block Code Protection bit
  1104                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1105                           ;	Data EEPROM Code Protection bit
  1106                           ;	CPD = OFF, Data EEPROM not code-protected
  1107   300009                     	org	3145737
  1108   300009  C0                 	db	192
  1109                           
  1110                           ;Config register CONFIG6L @ 0x30000A
  1111                           ;	Write Protection Block 0
  1112                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1113                           ;	Write Protection Block 1
  1114                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1115                           ;	Write Protection Block 2
  1116                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1117                           ;	Write Protection Block 3
  1118                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1119   30000A                     	org	3145738
  1120   30000A  0F                 	db	15
  1121                           
  1122                           ;Config register CONFIG6H @ 0x30000B
  1123                           ;	Configuration Register Write Protection bit
  1124                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1125                           ;	Boot Block Write Protection bit
  1126                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1127                           ;	Data EEPROM Write Protection bit
  1128                           ;	WRTD = OFF, Data EEPROM not write-protected
  1129   30000B                     	org	3145739
  1130   30000B  E0                 	db	224
  1131                           
  1132                           ;Config register CONFIG7L @ 0x30000C
  1133                           ;	Table Read Protection Block 0
  1134                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1135                           ;	Table Read Protection Block 1
  1136                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1137                           ;	Table Read Protection Block 2
  1138                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1139                           ;	Table Read Protection Block 3
  1140                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1141   30000C                     	org	3145740
  1142   30000C  0F                 	db	15
  1143                           
  1144                           ;Config register CONFIG7H @ 0x30000D
  1145                           ;	Boot Block Table Read Protection bit
  1146                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1147   30000D                     	org	3145741
  1148   30000D  40                 	db	64
  1149                           tosu	equ	0xFFF
  1150                           tosh	equ	0xFFE
  1151                           tosl	equ	0xFFD
  1152                           stkptr	equ	0xFFC
  1153                           pclatu	equ	0xFFB
  1154                           pclath	equ	0xFFA
  1155                           pcl	equ	0xFF9
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           indf0	equ	0xFEF
  1163                           postinc0	equ	0xFEE
  1164                           postdec0	equ	0xFED
  1165                           preinc0	equ	0xFEC
  1166                           plusw0	equ	0xFEB
  1167                           fsr0h	equ	0xFEA
  1168                           fsr0l	equ	0xFE9
  1169                           wreg	equ	0xFE8
  1170                           indf1	equ	0xFE7
  1171                           postinc1	equ	0xFE6
  1172                           postdec1	equ	0xFE5
  1173                           preinc1	equ	0xFE4
  1174                           plusw1	equ	0xFE3
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           bsr	equ	0xFE0
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           preinc2	equ	0xFDC
  1182                           plusw2	equ	0xFDB
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> Text3(COMRAM[16]), Text2(COMRAM[16]), Text1(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Show_Data_LCD
    _Show_Data_LCD->_LCD_Set_Write
    _Show_Data_LCD->_strlen
    _LCD_Init->_LCD_Set_Write
    _LCD_Set_Write->_LCD_Data_Instruction

Critical Paths under _EUSART_Int_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_Int_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_Int_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_Int_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_Int_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_Int_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_Int_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_Int_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_Int_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _EUSART_Int_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _EUSART_Int_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _EUSART_Int_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _EUSART_Int_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _EUSART_Int_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _EUSART_Int_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _EUSART_Int_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _EUSART_Int_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2746
                     _Configurations
                           _LCD_Init
                      _Show_Data_LCD
 ---------------------------------------------------------------------------------
 (1) _Show_Data_LCD                                        5     5      0    1601
                                              4 COMRAM     5     5      0
                      _LCD_Set_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     318
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1145
                                              4 COMRAM     2     2      0
                      _LCD_Set_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Write                                        2     1      1    1145
                                              2 COMRAM     2     1      1
               _LCD_Data_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Instruction                                 2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _EUSART_Int_Rx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _LCD_Init
     _LCD_Set_Write
       _LCD_Data_Instruction
   _Show_Data_LCD
     _LCD_Set_Write
     _strlen

 _EUSART_Int_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9      3D       1       64.9%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      47        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jan 29 00:48:30 2024

                          l60 02E8                            l71 02DA                            l65 022A  
                          l74 01EE                            l59 02E8                            l68 01B2  
                          l93 0118                            u80 0254                            u81 0250  
                          u90 0074                            u75 02CA                            u91 0070  
                          u76 02CC                           l811 01FC                           l803 01F0  
                         l821 0212                           l813 0202                           l805 01F4  
                         l831 0220                           l823 0214                           l815 0204  
                         l807 01F8                           l903 02C2                           l911 0238  
                         l833 0222                           l825 0216                           l817 020A  
                         l809 01FA                           l905 02CC                           l921 012A  
                         l913 023C                           l835 0224                           l827 0218  
                         l819 020C                           l907 02D4                           l931 0172  
                         l923 0134                           l915 0254                           l837 0226  
                         l829 021A                           l781 01CC                           l933 017C  
                         l925 014E                           l773 0260                           l909 022C  
                         l941 0022                           l839 0228                           l783 01DC  
                         l775 01B6                           l935 0186                           l927 015E  
                         l919 011A                           l951 0074                           l943 002C  
                         l785 01DE                           l777 01B8                           l937 0190  
                         l929 0168                           l961 00C6                           l953 007E  
                         l945 0034                           l779 01C8                           l939 019A  
                         l963 00D0                           l955 0086                           l947 004A  
                         l971 02DC                           l965 00D8                           l957 009C  
                         l949 004C                           l973 02E0                           l967 00EE  
                         l959 009E                           l975 02E4                           l969 00F0  
                         u100 00C6                           u101 00C2                           u110 0118  
                         u111 0114                           u127 0120                           u137 013A  
                         u147 0154                           u157 01A4                           u167 01BE  
                         u177 01D2                           u187 01E4                 _LCD_Set_Write 02C0  
                         wreg 0FE8                    _TXSTA1bits 0FAC                          _LATD 0F8C  
                        i2l81 001A                          _main 02DC                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 003E                          start 001E                  ___param_bank 0000  
            __end_of_LCD_Init 01B4                         ?_main 0035                ?_LCD_Set_Write 0037  
                       _BRGH1 7D62                 _EUSART_Int_Rx 0008                         i2l901 0018  
                       i2l899 000A                         _TRISD 0F95                         _Text1 0001  
                       _Text2 0025                         _Text3 0015                         tablat 0FF5  
                       ttemp5 003F                         ttemp6 0042                         ttemp7 0046  
                       status 0FD8                         wtemp8 003F               __initialization 0296  
                __end_of_main 02F0                Show_Data_LCD@i 003B                        ??_main 003E  
              ?_EUSART_Int_Rx 0035                 __activetblptr 0000                        _BRG161 7DC3  
                      _ANSELD 0F3B                        _RC1REG 0FAE         __end_of_Show_Data_LCD 011A  
                      _OSCCON 0FD3            LCD_Set_Write@WR_SE 0038                        _SPBRG1 0FAF  
                      i2u6_40 0018                        i2u6_41 0014               ??_LCD_Set_Write 0038  
                      isa$std 0001                        _strlen 022C                  __pdataCOMRAM 0001  
          Show_Data_LCD@i_560 003D            Show_Data_LCD@i_559 003C                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                    __accesstop 0060  
     __end_of__initialization 02B6                     ?_LCD_Init 0035                 ___rparam_used 0001  
              __pcstackCOMRAM 0035               ??_EUSART_Int_Rx 0035                    ??_LCD_Init 0039  
                     ?_strlen 0035                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 0296                       __ramtop 1000                       __ptext0 02DC  
                     __ptext1 0022                       __ptext2 022C                       __ptext3 011A  
                     __ptext4 02C0                       __ptext5 01B4                       __ptext6 01F0  
        end_of_initialization 02B6                       postdec1 0FE5                       postinc0 0FEE  
                     strlen@a 0037                       strlen@s 0035                     _TRISCbits 0F94  
               __pidataCOMRAM 0262         __end_of_LCD_Set_Write 02DC                __end_of_strlen 0262  
         start_initialization 0296  __end_of_LCD_Data_Instruction 01F0                _Configurations 01F0  
       __end_of_EUSART_Int_Rx 001E                      ??_strlen 0037        __end_of_Configurations 022C  
               _Show_Data_LCD 0022      LCD_Data_Instruction@Data 0036                     __pintcode 0008  
             ?_Configurations 0035                ?_Show_Data_LCD 0035                      _LCD_Init 011A  
                    _LATCbits 0F8B                      _PIE1bits 0F9D                      _PIR1bits 0F9E  
        _LCD_Data_Instruction 01B4                      _RCONbits 0FD0          LCD_Set_Write@Command 0037  
                   copy_data0 02AA                      __Hrparam 0000         ?_LCD_Data_Instruction 0035  
                    __Lrparam 0000                    _ANSELCbits 0F3A               ??_Show_Data_LCD 0039  
                    isa$xinst 0000                      int$flags 003E                    _INTCONbits 0FF2  
                    intlevel2 0000                    _RCSTA1bits 0FAB        ??_LCD_Data_Instruction 0035  
            ??_Configurations 0035  
