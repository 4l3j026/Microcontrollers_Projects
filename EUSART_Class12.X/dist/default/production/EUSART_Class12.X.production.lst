

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jan 30 01:27:19 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataBANK0
    61   000CA6                     __pidataBANK0:
    62                           	callstack 0
    63                           
    64                           ;initializer for _Text_Int0
    65   000CA6  49                 	db	73
    66   000CA7  4E                 	db	78
    67   000CA8  54                 	db	84
    68   000CA9  30                 	db	48
    69   000CAA  20                 	db	32
    70   000CAB  43                 	db	67
    71   000CAC  6F                 	db	111
    72   000CAD  75                 	db	117
    73   000CAE  6E                 	db	110
    74   000CAF  74                 	db	116
    75   000CB0  65                 	db	101
    76   000CB1  72                 	db	114
    77   000CB2  3A                 	db	58
    78   000CB3  20                 	db	32
    79   000CB4  00                 	db	0
    80   000CB5  00                 	db	0
    81   000CB6  00                 	db	0
    82   000CB7  00                 	db	0
    83   000CB8  00                 	db	0
    84   000CB9  00                 	db	0
    85   000CBA  00                 	db	0
    86   000CBB  00                 	db	0
    87   000CBC  00                 	db	0
    88   000CBD  00                 	db	0
    89   000CBE  00                 	db	0
    90   000CBF  00                 	db	0
    91   000CC0  00                 	db	0
    92   000CC1  00                 	db	0
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     _dpowers:
    99                           	callstack 0
   100   000801  0001               	dw	1
   101   000803  000A               	dw	10
   102   000805  0064               	dw	100
   103   000807  03E8               	dw	1000
   104   000809  2710               	dw	10000
   105   00080B                     __end_of_dpowers:
   106                           	callstack 0
   107   000000                     _TRISCbits	set	3988
   108   000000                     _ADCON1	set	4033
   109   000000                     _OSCCON	set	4051
   110   000000                     _INTCON3bits	set	4080
   111   000000                     _INTCON2bits	set	4081
   112   000000                     _INTCONbits	set	4082
   113   000000                     _RCONbits	set	4048
   114   000000                     _PIR1bits	set	3998
   115   000000                     _RCSTA	set	4011
   116   000000                     _SPBRG	set	4015
   117   000000                     _TXREG	set	4013
   118   000000                     _TXSTA	set	4012
   119   00080B                     STR_1:
   120   00080B  49                 	db	73	;'I'
   121   00080C  4E                 	db	78	;'N'
   122   00080D  54                 	db	84	;'T'
   123   00080E  30                 	db	48	;'0'
   124   00080F  20                 	db	32
   125   000810  43                 	db	67	;'C'
   126   000811  6F                 	db	111	;'o'
   127   000812  75                 	db	117	;'u'
   128   000813  6E                 	db	110	;'n'
   129   000814  74                 	db	116	;'t'
   130   000815  65                 	db	101	;'e'
   131   000816  72                 	db	114	;'r'
   132   000817  3A                 	db	58	;':'
   133   000818  20                 	db	32
   134   000819  25                 	db	37
   135   00081A  64                 	db	100	;'d'
   136   00081B  00                 	db	0
   137   00081C                     STR_2:
   138   00081C  49                 	db	73	;'I'
   139   00081D  4E                 	db	78	;'N'
   140   00081E  54                 	db	84	;'T'
   141   00081F  32                 	db	50	;'2'
   142   000820  20                 	db	32
   143   000821  43                 	db	67	;'C'
   144   000822  6F                 	db	111	;'o'
   145   000823  75                 	db	117	;'u'
   146   000824  6E                 	db	110	;'n'
   147   000825  74                 	db	116	;'t'
   148   000826  65                 	db	101	;'e'
   149   000827  72                 	db	114	;'r'
   150   000828  3A                 	db	58	;':'
   151   000829  20                 	db	32
   152   00082A  25                 	db	37
   153   00082B  64                 	db	100	;'d'
   154   00082C  00                 	db	0
   155   00082D  00                 	db	0	; dummy byte at the end
   156   000000                     
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160   000C0A                     __pcinit:
   161                           	callstack 0
   162   000C0A                     start_initialization:
   163                           	callstack 0
   164   000C0A                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to BANK0 (28 bytes)
   168                           ; load TBLPTR registers with __pidataBANK0
   169   000C0A  0EA6               	movlw	low __pidataBANK0
   170   000C0C  6EF6               	movwf	tblptrl,c
   171   000C0E  0E0C               	movlw	high __pidataBANK0
   172   000C10  6EF7               	movwf	tblptrh,c
   173   000C12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   174   000C14  6EF8               	movwf	tblptru,c
   175   000C16  EE00  F060         	lfsr	0,__pdataBANK0
   176   000C1A  EE10 F01C          	lfsr	1,28
   177   000C1E                     copy_data0:
   178   000C1E  0009               	tblrd		*+
   179   000C20  CFF5 FFEE          	movff	tablat,postinc0
   180   000C24  50E5               	movf	postdec1,w,c
   181   000C26  50E1               	movf	fsr1l,w,c
   182   000C28  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (33 bytes)
   185   000C2A  EE00  F027         	lfsr	0,__pbssCOMRAM
   186   000C2E  0E21               	movlw	33
   187   000C30                     clear_0:
   188   000C30  6AEE               	clrf	postinc0,c
   189   000C32  06E8               	decf	wreg,f,c
   190   000C34  E1FD               	bnz	clear_0
   191   000C36                     end_of_initialization:
   192                           	callstack 0
   193   000C36                     __end_of__initialization:
   194                           	callstack 0
   195   000C36  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   196   000C38  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   197   000C3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198   000C3C  6EF8               	movwf	tblptru,c
   199   000C3E  0100               	movlb	0
   200   000C40  EF61  F006         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   000027                     __pbssCOMRAM:
   204                           	callstack 0
   205   000027                     _Buffer:
   206                           	callstack 0
   207   000027                     	ds	2
   208   000029                     _Data:
   209                           	callstack 0
   210   000029                     	ds	1
   211   00002A                     _Counter_Button2:
   212                           	callstack 0
   213   00002A                     	ds	1
   214   00002B                     _Counter_Button1:
   215                           	callstack 0
   216   00002B                     	ds	1
   217   00002C                     _Text_Int2:
   218                           	callstack 0
   219   00002C                     	ds	28
   220                           
   221                           	psect	dataBANK0
   222   000060                     __pdataBANK0:
   223                           	callstack 0
   224   000060                     _Text_Int0:
   225                           	callstack 0
   226   000060                     	ds	28
   227                           
   228                           	psect	cstackBANK0
   229   000000                     __pcstackBANK0:
   230                           	callstack 0
   231   000000                     
   232                           ; 1 bytes @ 0x0
   233                           
   234                           	psect	cstackCOMRAM
   235   000001                     __pcstackCOMRAM:
   236                           	callstack 0
   237   000001                     ?_strlen:
   238                           	callstack 0
   239   000001                     ?___lwdiv:
   240                           	callstack 0
   241   000001                     ___lwdiv@dividend:
   242                           	callstack 0
   243   000001                     strlen@s:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x0
   247   000001                     	ds	2
   248   000003                     ___lwdiv@divisor:
   249                           	callstack 0
   250   000003                     strlen@cp:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254   000003                     	ds	2
   255   000005                     ___lwdiv@quotient:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x4
   259   000005                     	ds	2
   260   000007                     ___lwdiv@counter:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x6
   264   000007                     	ds	1
   265   000008                     ?___lwmod:
   266                           	callstack 0
   267   000008                     ___lwmod@dividend:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x7
   271   000008                     	ds	2
   272   00000A                     ___lwmod@divisor:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x9
   276   00000A                     	ds	2
   277   00000C                     ___lwmod@counter:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0xB
   281   00000C                     	ds	1
   282   00000D                     ?_sprintf:
   283                           	callstack 0
   284   00000D                     sprintf@sp:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xC
   288   00000D                     	ds	2
   289   00000F                     sprintf@f:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0xE
   293   00000F                     	ds	4
   294   000013                     ??_sprintf:
   295                           
   296                           ; 1 bytes @ 0x12
   297   000013                     	ds	1
   298   000014                     sprintf@ap:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x13
   302   000014                     	ds	2
   303   000016                     sprintf@flag:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x15
   307   000016                     	ds	1
   308   000017                     sprintf@prec:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x16
   312   000017                     	ds	1
   313   000018                     sprintf@val:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x17
   317   000018                     	ds	2
   318   00001A                     sprintf@c:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x19
   322   00001A                     	ds	1
   323   00001B                     ??_INT_UART_TX:
   324                           
   325                           ; 1 bytes @ 0x1A
   326   00001B                     	ds	8
   327   000023                     INT_UART_TX@i:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x22
   331   000023                     	ds	2
   332   000025                     INT_UART_TX@i_398:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x24
   336   000025                     	ds	2
   337                           
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 51 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   357 ;;      Params:         0       0       0       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels required when called: 4
   363 ;; This function calls:
   364 ;;		_Configurations
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371   000CC2                     __ptext0:
   372                           	callstack 0
   373   000CC2                     _main:
   374                           	callstack 27
   375   000CC2                     
   376                           ;main.c: 54: Configurations();
   377   000CC2  EC3D  F006         	call	_Configurations	;wreg free
   378   000CC6                     l47:
   379   000CC6  EF63  F006         	goto	l47
   380   000CCA  EF07  F000         	goto	start
   381   000CCE                     __end_of_main:
   382                           	callstack 0
   383                           
   384 ;; *************** function _Configurations *****************
   385 ;; Defined at:
   386 ;;		line 65 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   400 ;;      Params:         0       0       0       0       0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0
   403 ;;      Totals:         0       0       0       0       0       0       0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; Hardware stack levels required when called: 3
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text1
   415   000C7A                     __ptext1:
   416                           	callstack 0
   417   000C7A                     _Configurations:
   418                           	callstack 27
   419   000C7A                     
   420                           ;main.c: 67: OSCCON = 0x72;
   421   000C7A  0E72               	movlw	114
   422   000C7C  6ED3               	movwf	211,c	;volatile
   423                           
   424                           ;main.c: 68: ADCON1 = 0x0F;
   425   000C7E  0E0F               	movlw	15
   426   000C80  6EC1               	movwf	193,c	;volatile
   427   000C82                     
   428                           ;main.c: 70: TRISCbits.RC6 = 0;
   429   000C82  9C94               	bcf	148,6,c	;volatile
   430   000C84                     
   431                           ;main.c: 71: TRISCbits.RC7 = 1;
   432   000C84  8E94               	bsf	148,7,c	;volatile
   433                           
   434                           ;main.c: 74: SPBRG = 0x0C;
   435   000C86  0E0C               	movlw	12
   436   000C88  6EAF               	movwf	175,c	;volatile
   437                           
   438                           ;main.c: 75: RCSTA = 0x90;
   439   000C8A  0E90               	movlw	144
   440   000C8C  6EAB               	movwf	171,c	;volatile
   441                           
   442                           ;main.c: 76: TXSTA = 0x20;
   443   000C8E  0E20               	movlw	32
   444   000C90  6EAC               	movwf	172,c	;volatile
   445   000C92                     
   446                           ;main.c: 79: INTCONbits.GIE = 1;
   447   000C92  8EF2               	bsf	242,7,c	;volatile
   448   000C94                     
   449                           ;main.c: 80: INTCONbits.PEIE = 1;
   450   000C94  8CF2               	bsf	242,6,c	;volatile
   451   000C96                     
   452                           ;main.c: 81: RCONbits.IPEN = 0;
   453   000C96  9ED0               	bcf	208,7,c	;volatile
   454   000C98                     
   455                           ;main.c: 84: INTCONbits.INT0E = 1;
   456   000C98  88F2               	bsf	242,4,c	;volatile
   457   000C9A                     
   458                           ;main.c: 85: INTCONbits.INT0F = 0;
   459   000C9A  92F2               	bcf	242,1,c	;volatile
   460   000C9C                     
   461                           ;main.c: 86: INTCON2bits.INTEDG0 = 0;
   462   000C9C  9CF1               	bcf	241,6,c	;volatile
   463   000C9E                     
   464                           ;main.c: 88: INTCON3bits.INT2E = 1;
   465   000C9E  88F0               	bsf	240,4,c	;volatile
   466   000CA0                     
   467                           ;main.c: 89: INTCON3bits.INT2F = 0;
   468   000CA0  92F0               	bcf	240,1,c	;volatile
   469   000CA2                     
   470                           ;main.c: 90: INTCON2bits.INTEDG2 = 1;
   471   000CA2  88F1               	bsf	241,4,c	;volatile
   472   000CA4  0012               	return		;funcret
   473   000CA6                     __end_of_Configurations:
   474                           	callstack 0
   475                           
   476 ;; *************** function _INT_UART_TX *****************
   477 ;; Defined at:
   478 ;;		line 94 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  i               2   36[COMRAM] int 
   483 ;;  i               2   34[COMRAM] int 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         4       0       0       0       0       0       0       0       0
   495 ;;      Temps:          8       0       0       0       0       0       0       0       0
   496 ;;      Totals:        12       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:       12 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 2
   500 ;; This function calls:
   501 ;;		_sprintf
   502 ;;		_strlen
   503 ;; This function is called by:
   504 ;;		Interrupt level 2
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	intcode
   509   000008                     __pintcode:
   510                           	callstack 0
   511   000008                     _INT_UART_TX:
   512                           	callstack 27
   513                           
   514                           ;incstack = 0
   515   000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   516   00000A  EDE6  F004         	call	int_func,f	;refresh shadow registers
   517                           
   518                           	psect	intcode_body
   519   0009CC                     __pintcode_body:
   520                           	callstack 27
   521   0009CC                     int_func:
   522                           	callstack 27
   523   0009CC  0006               	pop		; remove dummy address from shadow register refresh
   524   0009CE  CFD9 F01B          	movff	fsr2l,??_INT_UART_TX
   525   0009D2  CFDA F01C          	movff	fsr2h,??_INT_UART_TX+1
   526   0009D6  CFF3 F01D          	movff	prodl,??_INT_UART_TX+2
   527   0009DA  CFF4 F01E          	movff	prodh,??_INT_UART_TX+3
   528   0009DE  CFF6 F01F          	movff	tblptrl,??_INT_UART_TX+4
   529   0009E2  CFF7 F020          	movff	tblptrh,??_INT_UART_TX+5
   530   0009E6  CFF8 F021          	movff	tblptru,??_INT_UART_TX+6
   531   0009EA  CFF5 F022          	movff	tablat,??_INT_UART_TX+7
   532   0009EE                     
   533                           ;main.c: 96: if (INTCONbits.INT0IF) {
   534   0009EE  A2F2               	btfss	242,1,c	;volatile
   535   0009F0  EFFC  F004         	goto	i2u37_41
   536   0009F4  EFFE  F004         	goto	i2u37_40
   537   0009F8                     i2u37_41:
   538   0009F8  EF40  F005         	goto	i2l58
   539   0009FC                     i2u37_40:
   540   0009FC                     
   541                           ;main.c: 98: INTCONbits.INT0IF = 0;
   542   0009FC  92F2               	bcf	242,1,c	;volatile
   543   0009FE                     
   544                           ;main.c: 99: Counter_Button1++;
   545   0009FE  2A2B               	incf	_Counter_Button1^0,f,c
   546   000A00                     
   547                           ;main.c: 117: sprintf(Text_Int0, "INT0 Counter: %d", Counter_Button1);
   548   000A00  0E60               	movlw	low _Text_Int0
   549   000A02  6E0D               	movwf	sprintf@sp^0,c
   550   000A04  0E00               	movlw	high _Text_Int0
   551   000A06  6E0E               	movwf	(sprintf@sp+1)^0,c
   552   000A08  0E0B               	movlw	low STR_1
   553   000A0A  6E0F               	movwf	sprintf@f^0,c
   554   000A0C  0E08               	movlw	high STR_1
   555   000A0E  6E10               	movwf	(sprintf@f+1)^0,c
   556   000A10  C02B  F011         	movff	_Counter_Button1,?_sprintf+4
   557   000A14  6A12               	clrf	(?_sprintf+5)^0,c
   558   000A16  EC17  F004         	call	_sprintf	;wreg free
   559   000A1A                     
   560                           ;main.c: 119: for (int i = 0; i < strlen(Text_Int0); i++) {
   561   000A1A  0E00               	movlw	0
   562   000A1C  6E24               	movwf	(INT_UART_TX@i+1)^0,c
   563   000A1E  0E00               	movlw	0
   564   000A20  6E23               	movwf	INT_UART_TX@i^0,c
   565   000A22  EF24  F005         	goto	i2l1151
   566   000A26                     i2l61:
   567   000A26  A89E               	btfss	158,4,c	;volatile
   568   000A28  EF18  F005         	goto	i2u38_41
   569   000A2C  EF1A  F005         	goto	i2u38_40
   570   000A30                     i2u38_41:
   571   000A30  EF13  F005         	goto	i2l61
   572   000A34                     i2u38_40:
   573   000A34                     
   574                           ;main.c: 122: TXREG = Text_Int0[i];
   575   000A34  0E60               	movlw	low _Text_Int0
   576   000A36  2423               	addwf	INT_UART_TX@i^0,w,c
   577   000A38  6ED9               	movwf	fsr2l,c
   578   000A3A  0E00               	movlw	high _Text_Int0
   579   000A3C  2024               	addwfc	(INT_UART_TX@i+1)^0,w,c
   580   000A3E  6EDA               	movwf	fsr2h,c
   581   000A40  50DF               	movf	indf2,w,c
   582   000A42  6EAD               	movwf	173,c	;volatile
   583   000A44  4A23               	infsnz	INT_UART_TX@i^0,f,c
   584   000A46  2A24               	incf	(INT_UART_TX@i+1)^0,f,c
   585   000A48                     i2l1151:
   586   000A48  0E60               	movlw	low _Text_Int0
   587   000A4A  6E01               	movwf	strlen@s^0,c
   588   000A4C  0E00               	movlw	high _Text_Int0
   589   000A4E  6E02               	movwf	(strlen@s+1)^0,c
   590   000A50  EC22  F006         	call	_strlen	;wreg free
   591   000A54  5001               	movf	?_strlen^0,w,c
   592   000A56  5C23               	subwf	INT_UART_TX@i^0,w,c
   593   000A58  5002               	movf	(?_strlen+1)^0,w,c
   594   000A5A  5824               	subwfb	(INT_UART_TX@i+1)^0,w,c
   595   000A5C  A0D8               	btfss	status,0,c
   596   000A5E  EF33  F005         	goto	i2u39_41
   597   000A62  EF35  F005         	goto	i2u39_40
   598   000A66                     i2u39_41:
   599   000A66  EF13  F005         	goto	i2l61
   600   000A6A                     i2u39_40:
   601   000A6A                     i2l65:
   602   000A6A  A89E               	btfss	158,4,c	;volatile
   603   000A6C  EF3A  F005         	goto	i2u40_41
   604   000A70  EF3C  F005         	goto	i2u40_40
   605   000A74                     i2u40_41:
   606   000A74  EF35  F005         	goto	i2l65
   607   000A78                     i2u40_40:
   608   000A78                     i2l1153:
   609                           
   610                           ;main.c: 126: TXREG = 0x0D;
   611   000A78  0E0D               	movlw	13
   612   000A7A  6EAD               	movwf	173,c	;volatile
   613                           
   614                           ;main.c: 129: } else if (INTCON3bits.INT2F) {
   615   000A7C  EF87  F005         	goto	i2l79
   616   000A80                     i2l58:
   617   000A80  A2F0               	btfss	240,1,c	;volatile
   618   000A82  EF45  F005         	goto	i2u41_41
   619   000A86  EF47  F005         	goto	i2u41_40
   620   000A8A                     i2u41_41:
   621   000A8A  EF87  F005         	goto	i2l79
   622   000A8E                     i2u41_40:
   623   000A8E                     
   624                           ;main.c: 131: INTCON3bits.INT2F = 0;
   625   000A8E  92F0               	bcf	240,1,c	;volatile
   626   000A90                     
   627                           ;main.c: 132: Counter_Button2++;
   628   000A90  2A2A               	incf	_Counter_Button2^0,f,c
   629   000A92                     
   630                           ;main.c: 134: sprintf(Text_Int2, "INT2 Counter: %d", Counter_Button2);
   631   000A92  0E2C               	movlw	low _Text_Int2
   632   000A94  6E0D               	movwf	sprintf@sp^0,c
   633   000A96  0E00               	movlw	high _Text_Int2
   634   000A98  6E0E               	movwf	(sprintf@sp+1)^0,c
   635   000A9A  0E1C               	movlw	low STR_2
   636   000A9C  6E0F               	movwf	sprintf@f^0,c
   637   000A9E  0E08               	movlw	high STR_2
   638   000AA0  6E10               	movwf	(sprintf@f+1)^0,c
   639   000AA2  C02A  F011         	movff	_Counter_Button2,?_sprintf+4
   640   000AA6  6A12               	clrf	(?_sprintf+5)^0,c
   641   000AA8  EC17  F004         	call	_sprintf	;wreg free
   642   000AAC                     
   643                           ;main.c: 136: for (int i = 0; i < strlen(Text_Int2); i++) {
   644   000AAC  0E00               	movlw	0
   645   000AAE  6E26               	movwf	(INT_UART_TX@i_398+1)^0,c
   646   000AB0  0E00               	movlw	0
   647   000AB2  6E25               	movwf	INT_UART_TX@i_398^0,c
   648   000AB4  EF6D  F005         	goto	i2l1167
   649   000AB8                     i2l72:
   650   000AB8  A89E               	btfss	158,4,c	;volatile
   651   000ABA  EF61  F005         	goto	i2u42_41
   652   000ABE  EF63  F005         	goto	i2u42_40
   653   000AC2                     i2u42_41:
   654   000AC2  EF5C  F005         	goto	i2l72
   655   000AC6                     i2u42_40:
   656   000AC6                     
   657                           ;main.c: 139: TXREG = Text_Int2[i];
   658   000AC6  0E2C               	movlw	low _Text_Int2
   659   000AC8  2425               	addwf	INT_UART_TX@i_398^0,w,c
   660   000ACA  6ED9               	movwf	fsr2l,c
   661   000ACC  0E00               	movlw	high _Text_Int2
   662   000ACE  2026               	addwfc	(INT_UART_TX@i_398+1)^0,w,c
   663   000AD0  6EDA               	movwf	fsr2h,c
   664   000AD2  50DF               	movf	indf2,w,c
   665   000AD4  6EAD               	movwf	173,c	;volatile
   666   000AD6  4A25               	infsnz	INT_UART_TX@i_398^0,f,c
   667   000AD8  2A26               	incf	(INT_UART_TX@i_398+1)^0,f,c
   668   000ADA                     i2l1167:
   669   000ADA  0E2C               	movlw	low _Text_Int2
   670   000ADC  6E01               	movwf	strlen@s^0,c
   671   000ADE  0E00               	movlw	high _Text_Int2
   672   000AE0  6E02               	movwf	(strlen@s+1)^0,c
   673   000AE2  EC22  F006         	call	_strlen	;wreg free
   674   000AE6  5001               	movf	?_strlen^0,w,c
   675   000AE8  5C25               	subwf	INT_UART_TX@i_398^0,w,c
   676   000AEA  5002               	movf	(?_strlen+1)^0,w,c
   677   000AEC  5826               	subwfb	(INT_UART_TX@i_398+1)^0,w,c
   678   000AEE  A0D8               	btfss	status,0,c
   679   000AF0  EF7C  F005         	goto	i2u43_41
   680   000AF4  EF7E  F005         	goto	i2u43_40
   681   000AF8                     i2u43_41:
   682   000AF8  EF5C  F005         	goto	i2l72
   683   000AFC                     i2u43_40:
   684   000AFC                     i2l76:
   685   000AFC  A89E               	btfss	158,4,c	;volatile
   686   000AFE  EF83  F005         	goto	i2u44_41
   687   000B02  EF85  F005         	goto	i2u44_40
   688   000B06                     i2u44_41:
   689   000B06  EF7E  F005         	goto	i2l76
   690   000B0A                     i2u44_40:
   691   000B0A  EF3C  F005         	goto	i2l1153
   692   000B0E                     i2l79:
   693   000B0E  C022  FFF5         	movff	??_INT_UART_TX+7,tablat
   694   000B12  C021  FFF8         	movff	??_INT_UART_TX+6,tblptru
   695   000B16  C020  FFF7         	movff	??_INT_UART_TX+5,tblptrh
   696   000B1A  C01F  FFF6         	movff	??_INT_UART_TX+4,tblptrl
   697   000B1E  C01E  FFF4         	movff	??_INT_UART_TX+3,prodh
   698   000B22  C01D  FFF3         	movff	??_INT_UART_TX+2,prodl
   699   000B26  C01C  FFDA         	movff	??_INT_UART_TX+1,fsr2h
   700   000B2A  C01B  FFD9         	movff	??_INT_UART_TX,fsr2l
   701   000B2E  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   702   000B30  0011               	retfie		f
   703   000B32                     __end_of_INT_UART_TX:
   704                           	callstack 0
   705                           
   706 ;; *************** function _strlen *****************
   707 ;; Defined at:
   708 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  s               2    0[COMRAM] PTR const unsigned char 
   711 ;;		 -> Text_Int2(28), Text_Int0(28), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  cp              2    2[COMRAM] PTR const unsigned char 
   714 ;;		 -> Text_Int2(28), Text_Int0(28), 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2    0[COMRAM] unsigned int 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         2       0       0       0       0       0       0       0       0
   725 ;;      Locals:         2       0       0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0
   727 ;;      Totals:         4       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:        4 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_INT_UART_TX
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text3
   738   000C44                     __ptext3:
   739                           	callstack 0
   740   000C44                     _strlen:
   741                           	callstack 28
   742   000C44  C001  F003         	movff	strlen@s,strlen@cp
   743   000C48  C002  F004         	movff	strlen@s+1,strlen@cp+1
   744   000C4C  EF2A  F006         	goto	i2l1131
   745   000C50                     i2l1129:
   746   000C50  4A03               	infsnz	strlen@cp^0,f,c
   747   000C52  2A04               	incf	(strlen@cp+1)^0,f,c
   748   000C54                     i2l1131:
   749   000C54  C003  FFD9         	movff	strlen@cp,fsr2l
   750   000C58  C004  FFDA         	movff	strlen@cp+1,fsr2h
   751   000C5C  50DF               	movf	indf2,w,c
   752   000C5E  A4D8               	btfss	status,2,c
   753   000C60  EF34  F006         	goto	i2u36_41
   754   000C64  EF36  F006         	goto	i2u36_40
   755   000C68                     i2u36_41:
   756   000C68  EF28  F006         	goto	i2l1129
   757   000C6C                     i2u36_40:
   758   000C6C  5001               	movf	strlen@s^0,w,c
   759   000C6E  5C03               	subwf	strlen@cp^0,w,c
   760   000C70  6E01               	movwf	?_strlen^0,c
   761   000C72  5002               	movf	(strlen@s+1)^0,w,c
   762   000C74  5804               	subwfb	(strlen@cp+1)^0,w,c
   763   000C76  6E02               	movwf	(?_strlen+1)^0,c
   764   000C78  0012               	return		;funcret
   765   000C7A                     __end_of_strlen:
   766                           	callstack 0
   767                           
   768 ;; *************** function _sprintf *****************
   769 ;; Defined at:
   770 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  sp              2   12[COMRAM] PTR unsigned char 
   773 ;;		 -> Text_Int2(28), Text_Int0(28), 
   774 ;;  f               2   14[COMRAM] PTR const unsigned char 
   775 ;;		 -> STR_2(17), STR_1(17), 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  tmpval          4    0        struct .
   778 ;;  cp              3    0        PTR const unsigned char 
   779 ;;  val             2   23[COMRAM] unsigned int 
   780 ;;  ap              2   19[COMRAM] PTR void [1]
   781 ;;		 -> ?_sprintf(2), 
   782 ;;  len             2    0        unsigned int 
   783 ;;  c               1   25[COMRAM] unsigned char 
   784 ;;  prec            1   22[COMRAM] char 
   785 ;;  flag            1   21[COMRAM] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  2   12[COMRAM] int 
   788 ;; Registers used:
   789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   795 ;;      Params:         6       0       0       0       0       0       0       0       0
   796 ;;      Locals:         7       0       0       0       0       0       0       0       0
   797 ;;      Temps:          1       0       0       0       0       0       0       0       0
   798 ;;      Totals:        14       0       0       0       0       0       0       0       0
   799 ;;Total ram usage:       14 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 1
   802 ;; This function calls:
   803 ;;		___lwdiv
   804 ;;		___lwmod
   805 ;; This function is called by:
   806 ;;		_INT_UART_TX
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text4
   811   00082E                     __ptext4:
   812                           	callstack 0
   813   00082E                     _sprintf:
   814                           	callstack 27
   815   00082E                     
   816                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   817   00082E  0E11               	movlw	low (?_sprintf+4)
   818   000830  6E14               	movwf	sprintf@ap^0,c
   819   000832  0E00               	movlw	high (?_sprintf+4)
   820   000834  6E15               	movwf	(sprintf@ap+1)^0,c
   821                           
   822                           ;doprnt.c: 553: while((c = *f++)) {
   823   000836  EFCF  F004         	goto	i2l1121
   824   00083A                     i2l1069:
   825                           
   826                           ;doprnt.c: 555: if(c != '%')
   827   00083A  0E25               	movlw	37
   828   00083C  181A               	xorwf	sprintf@c^0,w,c
   829   00083E  B4D8               	btfsc	status,2,c
   830   000840  EF24  F004         	goto	i2u29_41
   831   000844  EF26  F004         	goto	i2u29_40
   832   000848                     i2u29_41:
   833   000848  EF30  F004         	goto	i2l1075
   834   00084C                     i2u29_40:
   835   00084C                     
   836                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   837   00084C  C00D  FFD9         	movff	sprintf@sp,fsr2l
   838   000850  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   839   000854  C01A  FFDF         	movff	sprintf@c,indf2
   840   000858  4A0D               	infsnz	sprintf@sp^0,f,c
   841   00085A  2A0E               	incf	(sprintf@sp+1)^0,f,c
   842                           
   843                           ;doprnt.c: 559: continue;
   844   00085C  EFCF  F004         	goto	i2l1121
   845   000860                     i2l1075:
   846                           
   847                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   848   000860  0E00               	movlw	0
   849   000862  6E16               	movwf	sprintf@flag^0,c
   850   000864  C00F  FFF6         	movff	sprintf@f,tblptrl
   851   000868  C010  FFF7         	movff	sprintf@f+1,tblptrh
   852   00086C  4A0F               	infsnz	sprintf@f^0,f,c
   853   00086E  2A10               	incf	(sprintf@f+1)^0,f,c
   854   000870                     	if	0	;tblptru may be non-zero
   855   000870                     	endif
   856   000870                     	if	0	;tblptru may be non-zero
   857   000870                     	endif
   858   000870  0008               	tblrd		*
   859   000872  CFF5 F01A          	movff	tablat,sprintf@c
   860   000876  501A               	movf	sprintf@c^0,w,c
   861                           
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 3, Range of values is 0 to 105
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte           10     6 (average)
   867                           ;	Chosen strategy is simple_byte
   868   000878  0A00               	xorlw	0	; case 0
   869   00087A  B4D8               	btfsc	status,2,c
   870   00087C  EFE0  F004         	goto	i2l1123
   871   000880  0A64               	xorlw	100	; case 100
   872   000882  B4D8               	btfsc	status,2,c
   873   000884  EF4A  F004         	goto	i2l1081
   874   000888  0A0D               	xorlw	13	; case 105
   875   00088A  B4D8               	btfsc	status,2,c
   876   00088C  EF4A  F004         	goto	i2l1081
   877   000890  EFCF  F004         	goto	i2l1121
   878   000894                     i2l1081:
   879                           
   880                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
   881   000894  C014  FFD9         	movff	sprintf@ap,fsr2l
   882   000898  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   883   00089C  CFDE F018          	movff	postinc2,sprintf@val
   884   0008A0  CFDD F019          	movff	postdec2,sprintf@val+1
   885   0008A4  0E02               	movlw	2
   886   0008A6  2614               	addwf	sprintf@ap^0,f,c
   887   0008A8  0E00               	movlw	0
   888   0008AA  2215               	addwfc	(sprintf@ap+1)^0,f,c
   889   0008AC                     
   890                           ;doprnt.c: 1287: if((int)val < 0) {
   891   0008AC  BE19               	btfsc	(sprintf@val+1)^0,7,c
   892   0008AE  EF5D  F004         	goto	i2u30_40
   893   0008B2  EF5B  F004         	goto	i2u30_41
   894   0008B6                     i2u30_41:
   895   0008B6  EF63  F004         	goto	i2l1091
   896   0008BA                     i2u30_40:
   897   0008BA                     
   898                           ;doprnt.c: 1288: flag |= 0x03;
   899   0008BA  0E03               	movlw	3
   900   0008BC  1216               	iorwf	sprintf@flag^0,f,c
   901   0008BE                     
   902                           ;doprnt.c: 1289: val = -val;
   903   0008BE  6C18               	negf	sprintf@val^0,c
   904   0008C0  1E19               	comf	(sprintf@val+1)^0,f,c
   905   0008C2  B0D8               	btfsc	status,0,c
   906   0008C4  2A19               	incf	(sprintf@val+1)^0,f,c
   907   0008C6                     i2l1091:
   908                           
   909                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
   910   0008C6  0E01               	movlw	1
   911   0008C8  6E1A               	movwf	sprintf@c^0,c
   912   0008CA                     i2l1097:
   913                           
   914                           ;doprnt.c: 1332: if(val < dpowers[c])
   915   0008CA  501A               	movf	sprintf@c^0,w,c
   916   0008CC  0D02               	mullw	2
   917   0008CE  0E01               	movlw	low _dpowers
   918   0008D0  24F3               	addwf	243,w,c
   919   0008D2  6EF6               	movwf	tblptrl,c
   920   0008D4  0E08               	movlw	high _dpowers
   921   0008D6  20F4               	addwfc	244,w,c
   922   0008D8  6EF7               	movwf	tblptrh,c
   923   0008DA                     	if	0	;There are less than 3 active tblptr bytes
   924   0008DA                     	endif
   925   0008DA  0009               	tblrd		*+
   926   0008DC  50F5               	movf	tablat,w,c
   927   0008DE  5C18               	subwf	sprintf@val^0,w,c
   928   0008E0  0009               	tblrd		*+
   929   0008E2  50F5               	movf	tablat,w,c
   930   0008E4  5819               	subwfb	(sprintf@val+1)^0,w,c
   931   0008E6  B0D8               	btfsc	status,0,c
   932   0008E8  EF78  F004         	goto	i2u31_41
   933   0008EC  EF7A  F004         	goto	i2u31_40
   934   0008F0                     i2u31_41:
   935   0008F0  EF7C  F004         	goto	i2l1101
   936   0008F4                     i2u31_40:
   937   0008F4  EF86  F004         	goto	i2l1105
   938   0008F8                     i2l1101:
   939   0008F8  2A1A               	incf	sprintf@c^0,f,c
   940   0008FA  0E05               	movlw	5
   941   0008FC  181A               	xorwf	sprintf@c^0,w,c
   942   0008FE  A4D8               	btfss	status,2,c
   943   000900  EF84  F004         	goto	i2u32_41
   944   000904  EF86  F004         	goto	i2u32_40
   945   000908                     i2u32_41:
   946   000908  EF65  F004         	goto	i2l1097
   947   00090C                     i2u32_40:
   948   00090C                     i2l1105:
   949                           
   950                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
   951   00090C  C016  F013         	movff	sprintf@flag,??_sprintf
   952   000910  0E03               	movlw	3
   953   000912  1613               	andwf	??_sprintf^0,f,c
   954   000914  B4D8               	btfsc	status,2,c
   955   000916  EF8F  F004         	goto	i2u33_41
   956   00091A  EF91  F004         	goto	i2u33_40
   957   00091E                     i2u33_41:
   958   00091E  EF99  F004         	goto	i2l1111
   959   000922                     i2u33_40:
   960   000922                     
   961                           ;doprnt.c: 1465: ((*sp++ = ('-')));
   962   000922  C00D  FFD9         	movff	sprintf@sp,fsr2l
   963   000926  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   964   00092A  0E2D               	movlw	45
   965   00092C  6EDF               	movwf	indf2,c
   966   00092E  4A0D               	infsnz	sprintf@sp^0,f,c
   967   000930  2A0E               	incf	(sprintf@sp+1)^0,f,c
   968   000932                     i2l1111:
   969                           
   970                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   971   000932  C01A  F017         	movff	sprintf@c,sprintf@prec
   972                           
   973                           ;doprnt.c: 1500: while(prec--) {
   974   000936  EFC6  F004         	goto	i2l1119
   975   00093A                     i2l1113:
   976                           
   977                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   978   00093A  5017               	movf	sprintf@prec^0,w,c
   979   00093C  0D02               	mullw	2
   980   00093E  0E01               	movlw	low _dpowers
   981   000940  24F3               	addwf	243,w,c
   982   000942  6EF6               	movwf	tblptrl,c
   983   000944  0E08               	movlw	high _dpowers
   984   000946  20F4               	addwfc	244,w,c
   985   000948  6EF7               	movwf	tblptrh,c
   986   00094A                     	if	0	;There are less than 3 active tblptr bytes
   987   00094A                     	endif
   988   00094A  0009               	tblrd		*+
   989   00094C  CFF5 F003          	movff	tablat,___lwdiv@divisor
   990   000950  000A               	tblrd		*-
   991   000952  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   992   000956  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   993   00095A  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   994   00095E  EC99  F005         	call	___lwdiv	;wreg free
   995   000962  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   996   000966  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   997   00096A  0E00               	movlw	0
   998   00096C  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   999   00096E  0E0A               	movlw	10
  1000   000970  6E0A               	movwf	___lwmod@divisor^0,c
  1001   000972  ECD3  F005         	call	___lwmod	;wreg free
  1002   000976  5008               	movf	?___lwmod^0,w,c
  1003   000978  0F30               	addlw	48
  1004   00097A  6E1A               	movwf	sprintf@c^0,c
  1005   00097C                     
  1006                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1007   00097C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1008   000980  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1009   000984  C01A  FFDF         	movff	sprintf@c,indf2
  1010   000988  4A0D               	infsnz	sprintf@sp^0,f,c
  1011   00098A  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1012   00098C                     i2l1119:
  1013   00098C  0617               	decf	sprintf@prec^0,f,c
  1014   00098E  2817               	incf	sprintf@prec^0,w,c
  1015   000990  A4D8               	btfss	status,2,c
  1016   000992  EFCD  F004         	goto	i2u34_41
  1017   000996  EFCF  F004         	goto	i2u34_40
  1018   00099A                     i2u34_41:
  1019   00099A  EF9D  F004         	goto	i2l1113
  1020   00099E                     i2u34_40:
  1021   00099E                     i2l1121:
  1022   00099E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1023   0009A2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1024   0009A6  4A0F               	infsnz	sprintf@f^0,f,c
  1025   0009A8  2A10               	incf	(sprintf@f+1)^0,f,c
  1026   0009AA                     	if	0	;tblptru may be non-zero
  1027   0009AA                     	endif
  1028   0009AA                     	if	0	;tblptru may be non-zero
  1029   0009AA                     	endif
  1030   0009AA  0008               	tblrd		*
  1031   0009AC  CFF5 F01A          	movff	tablat,sprintf@c
  1032   0009B0  501A               	movf	sprintf@c^0,w,c
  1033   0009B2  A4D8               	btfss	status,2,c
  1034   0009B4  EFDE  F004         	goto	i2u35_41
  1035   0009B8  EFE0  F004         	goto	i2u35_40
  1036   0009BC                     i2u35_41:
  1037   0009BC  EF1D  F004         	goto	i2l1069
  1038   0009C0                     i2u35_40:
  1039   0009C0                     i2l1123:
  1040                           
  1041                           ;doprnt.c: 1564: *sp = 0;
  1042   0009C0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1043   0009C4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1044   0009C8  6ADF               	clrf	indf2,c
  1045   0009CA  0012               	return		;funcret
  1046   0009CC                     __end_of_sprintf:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function ___lwmod *****************
  1050 ;; Defined at:
  1051 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  dividend        2    7[COMRAM] unsigned int 
  1054 ;;  divisor         2    9[COMRAM] unsigned int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  counter         1   11[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  2    7[COMRAM] unsigned int 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1066 ;;      Params:         4       0       0       0       0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1069 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1070 ;;Total ram usage:        5 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_sprintf
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text5
  1080   000BA6                     __ptext5:
  1081                           	callstack 0
  1082   000BA6                     ___lwmod:
  1083                           	callstack 27
  1084   000BA6  500A               	movf	___lwmod@divisor^0,w,c
  1085   000BA8  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1086   000BAA  B4D8               	btfsc	status,2,c
  1087   000BAC  EFDA  F005         	goto	i2u26_41
  1088   000BB0  EFDC  F005         	goto	i2u26_40
  1089   000BB4                     i2u26_41:
  1090   000BB4  EF00  F006         	goto	i2l599
  1091   000BB8                     i2u26_40:
  1092   000BB8  0E01               	movlw	1
  1093   000BBA  6E0C               	movwf	___lwmod@counter^0,c
  1094   000BBC  EFE4  F005         	goto	i2l1057
  1095   000BC0                     i2l1055:
  1096   000BC0  90D8               	bcf	status,0,c
  1097   000BC2  360A               	rlcf	___lwmod@divisor^0,f,c
  1098   000BC4  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1099   000BC6  2A0C               	incf	___lwmod@counter^0,f,c
  1100   000BC8                     i2l1057:
  1101   000BC8  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1102   000BCA  EFE9  F005         	goto	i2u27_41
  1103   000BCE  EFEB  F005         	goto	i2u27_40
  1104   000BD2                     i2u27_41:
  1105   000BD2  EFE0  F005         	goto	i2l1055
  1106   000BD6                     i2u27_40:
  1107   000BD6                     i2l1059:
  1108   000BD6  500A               	movf	___lwmod@divisor^0,w,c
  1109   000BD8  5C08               	subwf	___lwmod@dividend^0,w,c
  1110   000BDA  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1111   000BDC  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1112   000BDE  A0D8               	btfss	status,0,c
  1113   000BE0  EFF4  F005         	goto	i2u28_41
  1114   000BE4  EFF6  F005         	goto	i2u28_40
  1115   000BE8                     i2u28_41:
  1116   000BE8  EFFA  F005         	goto	i2l1063
  1117   000BEC                     i2u28_40:
  1118   000BEC  500A               	movf	___lwmod@divisor^0,w,c
  1119   000BEE  5E08               	subwf	___lwmod@dividend^0,f,c
  1120   000BF0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1121   000BF2  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1122   000BF4                     i2l1063:
  1123   000BF4  90D8               	bcf	status,0,c
  1124   000BF6  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1125   000BF8  320A               	rrcf	___lwmod@divisor^0,f,c
  1126   000BFA  2E0C               	decfsz	___lwmod@counter^0,f,c
  1127   000BFC  EFEB  F005         	goto	i2l1059
  1128   000C00                     i2l599:
  1129   000C00  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1130   000C04  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1131   000C08  0012               	return		;funcret
  1132   000C0A                     __end_of___lwmod:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function ___lwdiv *****************
  1136 ;; Defined at:
  1137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  dividend        2    0[COMRAM] unsigned int 
  1140 ;;  divisor         2    2[COMRAM] unsigned int 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  quotient        2    4[COMRAM] unsigned int 
  1143 ;;  counter         1    6[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2    0[COMRAM] unsigned int 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         4       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        7 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_sprintf
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167   000B32                     __ptext6:
  1168                           	callstack 0
  1169   000B32                     ___lwdiv:
  1170                           	callstack 27
  1171   000B32  0E00               	movlw	0
  1172   000B34  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1173   000B36  0E00               	movlw	0
  1174   000B38  6E05               	movwf	___lwdiv@quotient^0,c
  1175   000B3A  5003               	movf	___lwdiv@divisor^0,w,c
  1176   000B3C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1177   000B3E  B4D8               	btfsc	status,2,c
  1178   000B40  EFA4  F005         	goto	i2u23_41
  1179   000B44  EFA6  F005         	goto	i2u23_40
  1180   000B48                     i2u23_41:
  1181   000B48  EFCE  F005         	goto	i2l589
  1182   000B4C                     i2u23_40:
  1183   000B4C  0E01               	movlw	1
  1184   000B4E  6E07               	movwf	___lwdiv@counter^0,c
  1185   000B50  EFAE  F005         	goto	i2l1037
  1186   000B54                     i2l1035:
  1187   000B54  90D8               	bcf	status,0,c
  1188   000B56  3603               	rlcf	___lwdiv@divisor^0,f,c
  1189   000B58  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1190   000B5A  2A07               	incf	___lwdiv@counter^0,f,c
  1191   000B5C                     i2l1037:
  1192   000B5C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1193   000B5E  EFB3  F005         	goto	i2u24_41
  1194   000B62  EFB5  F005         	goto	i2u24_40
  1195   000B66                     i2u24_41:
  1196   000B66  EFAA  F005         	goto	i2l1035
  1197   000B6A                     i2u24_40:
  1198   000B6A                     i2l1039:
  1199   000B6A  90D8               	bcf	status,0,c
  1200   000B6C  3605               	rlcf	___lwdiv@quotient^0,f,c
  1201   000B6E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1202   000B70  5003               	movf	___lwdiv@divisor^0,w,c
  1203   000B72  5C01               	subwf	___lwdiv@dividend^0,w,c
  1204   000B74  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1205   000B76  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1206   000B78  A0D8               	btfss	status,0,c
  1207   000B7A  EFC1  F005         	goto	i2u25_41
  1208   000B7E  EFC3  F005         	goto	i2u25_40
  1209   000B82                     i2u25_41:
  1210   000B82  EFC8  F005         	goto	i2l1047
  1211   000B86                     i2u25_40:
  1212   000B86  5003               	movf	___lwdiv@divisor^0,w,c
  1213   000B88  5E01               	subwf	___lwdiv@dividend^0,f,c
  1214   000B8A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1215   000B8C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1216   000B8E  8005               	bsf	___lwdiv@quotient^0,0,c
  1217   000B90                     i2l1047:
  1218   000B90  90D8               	bcf	status,0,c
  1219   000B92  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1220   000B94  3203               	rrcf	___lwdiv@divisor^0,f,c
  1221   000B96  2E07               	decfsz	___lwdiv@counter^0,f,c
  1222   000B98  EFB5  F005         	goto	i2l1039
  1223   000B9C                     i2l589:
  1224   000B9C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1225   000BA0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1226   000BA4  0012               	return		;funcret
  1227   000BA6                     __end_of___lwdiv:
  1228                           	callstack 0
  1229                           
  1230                           	psect	rparam
  1231   000000                     
  1232                           	psect	temp
  1233   000048                     btemp:
  1234                           	callstack 0
  1235   000048                     	ds	1
  1236   000000                     int$flags	set	btemp
  1237   000000                     wtemp8	set	btemp+1
  1238   000000                     ttemp5	set	btemp+1
  1239   000000                     ttemp6	set	btemp+4
  1240   000000                     ttemp7	set	btemp+8
  1241                           
  1242                           	psect	config
  1243                           
  1244                           ;Config register CONFIG1L @ 0x300000
  1245                           ;	PLL Prescaler Selection bits
  1246                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1247                           ;	System Clock Postscaler Selection bits
  1248                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1249                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1250                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1251   300000                     	org	3145728
  1252   300000  00                 	db	0
  1253                           
  1254                           ;Config register CONFIG1H @ 0x300001
  1255                           ;	Oscillator Selection bits
  1256                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  1257                           ;	Fail-Safe Clock Monitor Enable bit
  1258                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1259                           ;	Internal/External Oscillator Switchover bit
  1260                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1261   300001                     	org	3145729
  1262   300001  0B                 	db	11
  1263                           
  1264                           ;Config register CONFIG2L @ 0x300002
  1265                           ;	Power-up Timer Enable bit
  1266                           ;	PWRT = OFF, PWRT disabled
  1267                           ;	Brown-out Reset Enable bits
  1268                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1269                           ;	Brown-out Reset Voltage bits
  1270                           ;	BORV = 3, Minimum setting 2.05V
  1271                           ;	USB Voltage Regulator Enable bit
  1272                           ;	VREGEN = OFF, USB voltage regulator disabled
  1273   300002                     	org	3145730
  1274   300002  19                 	db	25
  1275                           
  1276                           ;Config register CONFIG2H @ 0x300003
  1277                           ;	Watchdog Timer Enable bit
  1278                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1279                           ;	Watchdog Timer Postscale Select bits
  1280                           ;	WDTPS = 32768, 1:32768
  1281   300003                     	org	3145731
  1282   300003  1E                 	db	30
  1283                           
  1284                           ; Padding undefined space
  1285   300004                     	org	3145732
  1286   300004  FF                 	db	255
  1287                           
  1288                           ;Config register CONFIG3H @ 0x300005
  1289                           ;	CCP2 MUX bit
  1290                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1291                           ;	PORTB A/D Enable bit
  1292                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1293                           ;	Low-Power Timer 1 Oscillator Enable bit
  1294                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1295                           ;	MCLR Pin Enable bit
  1296                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1297   300005                     	org	3145733
  1298   300005  83                 	db	131
  1299                           
  1300                           ;Config register CONFIG4L @ 0x300006
  1301                           ;	Stack Full/Underflow Reset Enable bit
  1302                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1303                           ;	Single-Supply ICSP Enable bit
  1304                           ;	LVP = OFF, Single-Supply ICSP disabled
  1305                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1306                           ;	ICPRT = OFF, ICPORT disabled
  1307                           ;	Extended Instruction Set Enable bit
  1308                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1309                           ;	Background Debugger Enable bit
  1310                           ;	DEBUG = 0x1, unprogrammed default
  1311   300006                     	org	3145734
  1312   300006  81                 	db	129
  1313                           
  1314                           ; Padding undefined space
  1315   300007                     	org	3145735
  1316   300007  FF                 	db	255
  1317                           
  1318                           ;Config register CONFIG5L @ 0x300008
  1319                           ;	Code Protection bit
  1320                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1321                           ;	Code Protection bit
  1322                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1323                           ;	Code Protection bit
  1324                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1325                           ;	Code Protection bit
  1326                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1327   300008                     	org	3145736
  1328   300008  0F                 	db	15
  1329                           
  1330                           ;Config register CONFIG5H @ 0x300009
  1331                           ;	Boot Block Code Protection bit
  1332                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1333                           ;	Data EEPROM Code Protection bit
  1334                           ;	CPD = OFF, Data EEPROM is not code-protected
  1335   300009                     	org	3145737
  1336   300009  C0                 	db	192
  1337                           
  1338                           ;Config register CONFIG6L @ 0x30000A
  1339                           ;	Write Protection bit
  1340                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1341                           ;	Write Protection bit
  1342                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1343                           ;	Write Protection bit
  1344                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1345                           ;	Write Protection bit
  1346                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1347   30000A                     	org	3145738
  1348   30000A  0F                 	db	15
  1349                           
  1350                           ;Config register CONFIG6H @ 0x30000B
  1351                           ;	Configuration Register Write Protection bit
  1352                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1353                           ;	Boot Block Write Protection bit
  1354                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1355                           ;	Data EEPROM Write Protection bit
  1356                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1357   30000B                     	org	3145739
  1358   30000B  E0                 	db	224
  1359                           
  1360                           ;Config register CONFIG7L @ 0x30000C
  1361                           ;	Table Read Protection bit
  1362                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1363                           ;	Table Read Protection bit
  1364                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1365                           ;	Table Read Protection bit
  1366                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1367                           ;	Table Read Protection bit
  1368                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1369   30000C                     	org	3145740
  1370   30000C  0F                 	db	15
  1371                           
  1372                           ;Config register CONFIG7H @ 0x30000D
  1373                           ;	Boot Block Table Read Protection bit
  1374                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1375   30000D                     	org	3145741
  1376   30000D  40                 	db	64
  1377                           tosu	equ	0xFFF
  1378                           tosh	equ	0xFFE
  1379                           tosl	equ	0xFFD
  1380                           stkptr	equ	0xFFC
  1381                           pclatu	equ	0xFFB
  1382                           pclath	equ	0xFFA
  1383                           pcl	equ	0xFF9
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           indf0	equ	0xFEF
  1391                           postinc0	equ	0xFEE
  1392                           postdec0	equ	0xFED
  1393                           preinc0	equ	0xFEC
  1394                           plusw0	equ	0xFEB
  1395                           fsr0h	equ	0xFEA
  1396                           fsr0l	equ	0xFE9
  1397                           wreg	equ	0xFE8
  1398                           indf1	equ	0xFE7
  1399                           postinc1	equ	0xFE6
  1400                           postdec1	equ	0xFE5
  1401                           preinc1	equ	0xFE4
  1402                           plusw1	equ	0xFE3
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           bsr	equ	0xFE0
  1406                           indf2	equ	0xFDF
  1407                           postinc2	equ	0xFDE
  1408                           postdec2	equ	0xFDD
  1409                           preinc2	equ	0xFDC
  1410                           plusw2	equ	0xFDB
  1411                           fsr2h	equ	0xFDA
  1412                           fsr2l	equ	0xFD9
  1413                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    10
    Data        28
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      71
    BANK0           160      0      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 28
		 -> Text_Int2(COMRAM[28]), Text_Int0(BANK0[28]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> Text_Int2(COMRAM[28]), Text_Int0(BANK0[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 28
		 -> Text_Int2(COMRAM[28]), Text_Int0(BANK0[28]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_UART_TX in COMRAM

    _INT_UART_TX->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_UART_TX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_UART_TX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_UART_TX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_UART_TX in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_UART_TX in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_UART_TX in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_UART_TX in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_UART_TX in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_UART_TX                                         12    12      0    1740
                                             26 COMRAM    12    12      0
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    17      6    1406
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations

 _INT_UART_TX (ROOT)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      47       1       75.5%
BITBIGSFRlll        34      0       0      28        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRllhh       11      0       0      24        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRllhllh      C      0       0      26        0.0%
BITBIGSFRllhlll      9      0       0      27        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRllhlh       1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      63      29        0.0%
DATA                 0      0      63       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jan 30 01:27:19 2024

                     l53 0CA4                       l47 0CC6                       l48 0CC6  
                    wreg 0FE8                     l1171 0C7A                     l1181 0C96  
                   l1173 0C82                     l1191 0CA0                     l1183 0C98  
                   l1175 0C84                     l1193 0CA2                     l1185 0C9A  
                   l1177 0C92                     l1187 0C9C                     l1179 0C94  
                   l1195 0CC2                     l1189 0C9E                     STR_1 080B  
                   STR_2 081C                     i2l61 0A26                     i2l72 0AB8  
                   i2l65 0A6A                     i2l58 0A80                     i2l76 0AFC  
                   i2l79 0B0E                     _Data 0029                     _main 0CC2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0048                     prodh 0FF4  
                   prodl 0FF3                     start 000E             ___param_bank 0000  
                  ?_main 0001          __end_of___lwdiv 0BA6          __end_of___lwmod 0C0A  
                  i2l107 09CA                    i2l606 0C08                    i2l596 0BA4  
                  i2l589 0B9C                    i2l599 0C00                    i2l775 0C78  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _TXREG 0FAD  
                  _TXSTA 0FAC             ?_INT_UART_TX 0001          __end_of_dpowers 080B  
                  tablat 0FF5                    ttemp5 0049                    ttemp6 004C  
                  ttemp7 0050                    status 0FD8                    wtemp8 0049  
        __end_of_sprintf 09CC          __initialization 0C0A             __end_of_main 0CCE  
                 ??_main 0000            __activetblptr 0002                   _ADCON1 0FC1  
                 i2l1101 08F8                   i2l1031 0B3A                   i2l1111 0932  
                 i2l1103 08FA                   i2l1041 0B70                   i2l1033 0B4C  
                 i2l1113 093A                   i2l1105 090C                   i2l1121 099E  
                 i2l1043 0B86                   i2l1035 0B54                   i2l1051 0BA6  
                 i2l1115 097C                   i2l1107 0922                   i2l1123 09C0  
                 i2l1131 0C54                   i2l1045 0B8E                   i2l1037 0B5C  
                 i2l1029 0B32                   i2l1061 0BEC                   i2l1053 0BB8  
                 i2l1117 0988                   i2l1109 092E                   i2l1133 0C6C  
                 i2l1141 09FE                   i2l1047 0B90                   i2l1039 0B6A  
                 i2l1063 0BF4                   i2l1055 0BC0                   i2l1119 098C  
                 i2l1071 084C                   i2l1127 0C44                   i2l1151 0A48  
                 i2l1143 0A00                   i2l1049 0B96                   i2l1065 0BFA  
                 i2l1057 0BC8                   i2l1081 0894                   i2l1073 0858  
                 i2l1129 0C50                   i2l1161 0AAC                   i2l1153 0A78  
                 i2l1145 0A1A                   i2l1137 09EE                   i2l1059 0BD6  
                 i2l1091 08C6                   i2l1083 08A4                   i2l1075 0860  
                 i2l1067 082E                   i2l1163 0AC6                   i2l1155 0A8E  
                 i2l1147 0A34                   i2l1139 09FC                   i2l1085 08AC  
                 i2l1069 083A                   i2l1165 0AD6                   i2l1157 0A90  
                 i2l1149 0A44                   i2l1087 08BA                   i2l1079 0864  
                 i2l1167 0ADA                   i2l1159 0A92                   i2l1097 08CA  
                 i2l1089 08BE                   _OSCCON 0FD3                   _Buffer 0027  
              ??___lwdiv 0005                ??___lwmod 000C                   clear_0 0C30  
                 isa$std 0001                   _strlen 0C44             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
              ??_sprintf 0013               __accesstop 0060  __end_of__initialization 0C36  
          ___rparam_used 0001           __pcstackCOMRAM 0001             __pidataBANK0 0CA6  
                ?_strlen 0001                  i2u30_40 08BA                  i2u30_41 08B6  
                i2u23_40 0B4C                  i2u31_40 08F4                  i2u23_41 0B48  
                i2u31_41 08F0                  i2u24_40 0B6A                  i2u32_40 090C  
                i2u40_40 0A78                  i2u24_41 0B66                  i2u32_41 0908  
                i2u40_41 0A74                  i2u25_40 0B86                  i2u33_40 0922  
                i2u41_40 0A8E                  i2u25_41 0B82                  i2u33_41 091E  
                i2u41_41 0A8A                  i2u26_40 0BB8                  i2u34_40 099E  
                i2u42_40 0AC6                  i2u26_41 0BB4                  i2u34_41 099A  
                i2u42_41 0AC2                  i2u27_40 0BD6                  i2u35_40 09C0  
                i2u43_40 0AFC                  i2u27_41 0BD2                  i2u35_41 09BC  
                i2u43_41 0AF8                  i2u28_40 0BEC                  i2u36_40 0C6C  
                i2u44_40 0B0A                  i2u28_41 0BE8                  i2u36_41 0C68  
                i2u44_41 0B06                  i2u29_40 084C                  i2u37_40 09FC  
                i2u29_41 0848                  i2u37_41 09F8                  i2u38_40 0A34  
                i2u38_41 0A30                  i2u39_40 0A6A                  i2u39_41 0A66  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0B32  
                ___lwmod 0BA6             __psmallconst 0800                  __pcinit 0C0A  
                __ramtop 0800                  __ptext0 0CC2                  __ptext1 0C7A  
                __ptext3 0C44                  __ptext4 082E                  __ptext5 0BA6  
                __ptext6 0B32                  _dpowers 0801                  _sprintf 082E  
         __pintcode_body 09CC     end_of_initialization 0C36            __Lmediumconst 0000  
                int_func 09CC                  postdec1 0FE5                  postdec2 0FDD  
                postinc0 0FEE                  postinc2 0FDE                  strlen@s 0001  
           INT_UART_TX@i 0023                _TRISCbits 0F94           __end_of_strlen 0C7A  
    start_initialization 0C0A           _Configurations 0C7A                _Text_Int0 0060  
              _Text_Int2 002C              __pdataBANK0 0060                 ??_strlen 0003  
            __pbssCOMRAM 0027   __end_of_Configurations 0CA6            __pcstackBANK0 0000  
          ??_INT_UART_TX 001B              sprintf@flag 0016              sprintf@prec 0017  
       ___lwdiv@dividend 0001                __pintcode 0008                 ?___lwdiv 0001  
               ?___lwmod 0008              __smallconst 0800          ?_Configurations 0001  
       ___lwdiv@quotient 0005                 ?_sprintf 000D      __end_of_INT_UART_TX 0B32  
               _PIR1bits 0F9E                 _RCONbits 0FD0         INT_UART_TX@i_398 0025  
            _INTCON2bits 0FF1              _INTCON3bits 0FF0                copy_data0 0C1E  
               __Hrparam 0000                 __Lrparam 0000               sprintf@val 0018  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007              _INT_UART_TX 0008  
               isa$xinst 0000                 int$flags 0048               _INTCONbits 0FF2  
               intlevel2 0000                sprintf@ap 0014                sprintf@sp 000D  
       ___lwmod@dividend 0008         ??_Configurations 0000                 sprintf@c 001A  
               sprintf@f 000F          ___lwmod@divisor 000A                 strlen@cp 0003  
        ___lwmod@counter 000C          _Counter_Button1 002B          _Counter_Button2 002A  
