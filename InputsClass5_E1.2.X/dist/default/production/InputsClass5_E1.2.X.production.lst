

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 10 12:53:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Generated 23/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _PORTBbits	set	3969
    49   000000                     _LATAbits	set	3977
    50   000000                     _TRISBbits	set	3987
    51   000000                     _ADCON1	set	4033
    52   000000                     _OSCCON	set	4051
    53   000000                     _LATBbits	set	3978
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   007F88                     __pcinit:
    59                           	callstack 0
    60   007F88                     start_initialization:
    61                           	callstack 0
    62   007F88                     __initialization:
    63                           	callstack 0
    64   007F88                     end_of_initialization:
    65                           	callstack 0
    66   007F88                     __end_of__initialization:
    67                           	callstack 0
    68   007F88  0100               	movlb	0
    69   007F8A  EFCF  F03F         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72   000001                     __pcstackCOMRAM:
    73                           	callstack 0
    74   000001                     ??_Led_State:
    75   000001                     
    76                           ; 1 bytes @ 0x0
    77   000001                     	ds	1
    78   000002                     
    79                           ; 1 bytes @ 0x1
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    82 ;;
    83 ;; *************** function _main *****************
    84 ;; Defined at:
    85 ;;		line 20 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;                  1    wreg      void 
    92 ;; Registers used:
    93 ;;		wreg, status,2, status,0, cstack
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    99 ;;      Params:         0       0       0       0       0       0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0
   101 ;;      Temps:          0       0       0       0       0       0       0       0       0
   102 ;;      Totals:         0       0       0       0       0       0       0       0       0
   103 ;;Total ram usage:        0 bytes
   104 ;; Hardware stack levels required when called: 1
   105 ;; This function calls:
   106 ;;		_Led_State
   107 ;;		_Set_Registers
   108 ;; This function is called by:
   109 ;;		Startup code after reset
   110 ;; This function uses a non-reentrant model
   111 ;;
   112                           
   113                           	psect	text0
   114   007F9E                     __ptext0:
   115                           	callstack 0
   116   007F9E                     _main:
   117                           	callstack 30
   118   007F9E                     
   119                           ;main.c: 22:     Set_Registers();
   120   007F9E  ECC7  F03F         	call	_Set_Registers	;wreg free
   121   007FA2                     l732:
   122                           
   123                           ;main.c: 26:         Led_State();
   124   007FA2  ECD7  F03F         	call	_Led_State	;wreg free
   125   007FA6  EFD1  F03F         	goto	l732
   126   007FAA  EF00  F000         	goto	start
   127   007FAE                     __end_of_main:
   128                           	callstack 0
   129                           
   130 ;; *************** function _Set_Registers *****************
   131 ;; Defined at:
   132 ;;		line 34 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          0       0       0       0       0       0       0       0       0
   149 ;;      Totals:         0       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        0 bytes
   151 ;; Hardware stack levels used: 1
   152 ;; This function calls:
   153 ;;		Nothing
   154 ;; This function is called by:
   155 ;;		_main
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text1
   160   007F8E                     __ptext1:
   161                           	callstack 0
   162   007F8E                     _Set_Registers:
   163                           	callstack 30
   164   007F8E                     
   165                           ;main.c: 36:     OSCCON = 0x72;
   166   007F8E  0E72               	movlw	114
   167   007F90  6ED3               	movwf	211,c	;volatile
   168                           
   169                           ;main.c: 37:     ADCON1 = 0x0F;
   170   007F92  0E0F               	movlw	15
   171   007F94  6EC1               	movwf	193,c	;volatile
   172   007F96                     
   173                           ;main.c: 39:     TRISBbits.RB0 = 1;
   174   007F96  8093               	bsf	147,0,c	;volatile
   175   007F98                     
   176                           ;main.c: 40:     TRISBbits.RB2 = 0;
   177   007F98  9493               	bcf	147,2,c	;volatile
   178   007F9A                     
   179                           ;main.c: 42:     LATAbits.LA1 = 0;
   180   007F9A  9289               	bcf	137,1,c	;volatile
   181   007F9C  0012               	return		;funcret
   182   007F9E                     __end_of_Set_Registers:
   183                           	callstack 0
   184                           
   185 ;; *************** function _Led_State *****************
   186 ;; Defined at:
   187 ;;		line 48 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   201 ;;      Params:         0       0       0       0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0
   203 ;;      Temps:          1       0       0       0       0       0       0       0       0
   204 ;;      Totals:         1       0       0       0       0       0       0       0       0
   205 ;;Total ram usage:        1 bytes
   206 ;; Hardware stack levels used: 1
   207 ;; This function calls:
   208 ;;		Nothing
   209 ;; This function is called by:
   210 ;;		_main
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text2
   215   007FAE                     __ptext2:
   216                           	callstack 0
   217   007FAE                     _Led_State:
   218                           	callstack 30
   219   007FAE                     
   220                           ;main.c: 50:     if (PORTBbits.RB0 == 1) {
   221   007FAE  A081               	btfss	129,0,c	;volatile
   222   007FB0  EFDC  F03F         	goto	u11
   223   007FB4  EFDE  F03F         	goto	u10
   224   007FB8                     u11:
   225   007FB8  EFFF  F03F         	goto	l36
   226   007FBC                     u10:
   227   007FBC  EFF8  F03F         	goto	l728
   228   007FC0                     l724:
   229                           
   230                           ;main.c: 54:             _delay((unsigned long)((20)*(8000000/4000.0)));
   231   007FC0  0E34               	movlw	52
   232   007FC2  6E01               	movwf	??_Led_State^0,c
   233   007FC4  0EF2               	movlw	242
   234   007FC6                     u57:
   235   007FC6  2EE8               	decfsz	wreg,f,c
   236   007FC8  D7FE               	bra	u57
   237   007FCA  2E01               	decfsz	??_Led_State^0,f,c
   238   007FCC  D7FC               	bra	u57
   239   007FCE                     
   240                           ;main.c: 55:             LATBbits.LB2 = !LATBbits.LB2;
   241   007FCE  A48A               	btfss	138,2,c	;volatile
   242   007FD0  EFEC  F03F         	goto	u21
   243   007FD4  EFF0  F03F         	goto	u20
   244   007FD8                     u21:
   245   007FD8  6A01               	clrf	??_Led_State^0,c
   246   007FDA  2A01               	incf	??_Led_State^0,f,c
   247   007FDC  EFF1  F03F         	goto	u38
   248   007FE0                     u20:
   249   007FE0  6A01               	clrf	??_Led_State^0,c
   250   007FE2                     u38:
   251   007FE2  4601               	rlncf	??_Led_State^0,f,c
   252   007FE4  4601               	rlncf	??_Led_State^0,f,c
   253   007FE6  508A               	movf	138,w,c	;volatile
   254   007FE8  1801               	xorwf	??_Led_State^0,w,c
   255   007FEA  0BFB               	andlw	-5
   256   007FEC  1801               	xorwf	??_Led_State^0,w,c
   257   007FEE  6E8A               	movwf	138,c	;volatile
   258   007FF0                     l728:
   259                           
   260                           ;main.c: 52:         while (PORTBbits.RB0 == 1) {
   261   007FF0  B081               	btfsc	129,0,c	;volatile
   262   007FF2  EFFD  F03F         	goto	u41
   263   007FF6  EFFF  F03F         	goto	u40
   264   007FFA                     u41:
   265   007FFA  EFE0  F03F         	goto	l724
   266   007FFE                     u40:
   267   007FFE                     l36:
   268   007FFE  0012               	return		;funcret
   269   008000                     __end_of_Led_State:
   270                           	callstack 0
   271   000000                     
   272                           	psect	rparam
   273   000000                     
   274                           	psect	config
   275                           
   276                           ;Config register CONFIG1L @ 0x300000
   277                           ;	PLL Prescaler Selection bits
   278                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   279                           ;	System Clock Postscaler Selection bits
   280                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   281                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   282                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   283   300000                     	org	3145728
   284   300000  00                 	db	0
   285                           
   286                           ;Config register CONFIG1H @ 0x300001
   287                           ;	Oscillator Selection bits
   288                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   289                           ;	Fail-Safe Clock Monitor Enable bit
   290                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   291                           ;	Internal/External Oscillator Switchover bit
   292                           ;	IESO = OFF, Oscillator Switchover mode disabled
   293   300001                     	org	3145729
   294   300001  0B                 	db	11
   295                           
   296                           ;Config register CONFIG2L @ 0x300002
   297                           ;	Power-up Timer Enable bit
   298                           ;	PWRT = OFF, PWRT disabled
   299                           ;	Brown-out Reset Enable bits
   300                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   301                           ;	Brown-out Reset Voltage bits
   302                           ;	BORV = 3, Minimum setting 2.05V
   303                           ;	USB Voltage Regulator Enable bit
   304                           ;	VREGEN = OFF, USB voltage regulator disabled
   305   300002                     	org	3145730
   306   300002  19                 	db	25
   307                           
   308                           ;Config register CONFIG2H @ 0x300003
   309                           ;	Watchdog Timer Enable bit
   310                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   311                           ;	Watchdog Timer Postscale Select bits
   312                           ;	WDTPS = 32768, 1:32768
   313   300003                     	org	3145731
   314   300003  1E                 	db	30
   315                           
   316                           ; Padding undefined space
   317   300004                     	org	3145732
   318   300004  FF                 	db	255
   319                           
   320                           ;Config register CONFIG3H @ 0x300005
   321                           ;	CCP2 MUX bit
   322                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   323                           ;	PORTB A/D Enable bit
   324                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   325                           ;	Low-Power Timer 1 Oscillator Enable bit
   326                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   327                           ;	MCLR Pin Enable bit
   328                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   329   300005                     	org	3145733
   330   300005  83                 	db	131
   331                           
   332                           ;Config register CONFIG4L @ 0x300006
   333                           ;	Stack Full/Underflow Reset Enable bit
   334                           ;	STVREN = ON, Stack full/underflow will cause Reset
   335                           ;	Single-Supply ICSP Enable bit
   336                           ;	LVP = OFF, Single-Supply ICSP disabled
   337                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   338                           ;	ICPRT = OFF, ICPORT disabled
   339                           ;	Extended Instruction Set Enable bit
   340                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   341                           ;	Background Debugger Enable bit
   342                           ;	DEBUG = 0x1, unprogrammed default
   343   300006                     	org	3145734
   344   300006  81                 	db	129
   345                           
   346                           ; Padding undefined space
   347   300007                     	org	3145735
   348   300007  FF                 	db	255
   349                           
   350                           ;Config register CONFIG5L @ 0x300008
   351                           ;	Code Protection bit
   352                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   353                           ;	Code Protection bit
   354                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   355                           ;	Code Protection bit
   356                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   357                           ;	Code Protection bit
   358                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   359   300008                     	org	3145736
   360   300008  0F                 	db	15
   361                           
   362                           ;Config register CONFIG5H @ 0x300009
   363                           ;	Boot Block Code Protection bit
   364                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   365                           ;	Data EEPROM Code Protection bit
   366                           ;	CPD = OFF, Data EEPROM is not code-protected
   367   300009                     	org	3145737
   368   300009  C0                 	db	192
   369                           
   370                           ;Config register CONFIG6L @ 0x30000A
   371                           ;	Write Protection bit
   372                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   373                           ;	Write Protection bit
   374                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   375                           ;	Write Protection bit
   376                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   377                           ;	Write Protection bit
   378                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   379   30000A                     	org	3145738
   380   30000A  0F                 	db	15
   381                           
   382                           ;Config register CONFIG6H @ 0x30000B
   383                           ;	Configuration Register Write Protection bit
   384                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   385                           ;	Boot Block Write Protection bit
   386                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   387                           ;	Data EEPROM Write Protection bit
   388                           ;	WRTD = OFF, Data EEPROM is not write-protected
   389   30000B                     	org	3145739
   390   30000B  E0                 	db	224
   391                           
   392                           ;Config register CONFIG7L @ 0x30000C
   393                           ;	Table Read Protection bit
   394                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   395                           ;	Table Read Protection bit
   396                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   397                           ;	Table Read Protection bit
   398                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   399                           ;	Table Read Protection bit
   400                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   401   30000C                     	org	3145740
   402   30000C  0F                 	db	15
   403                           
   404                           ;Config register CONFIG7H @ 0x30000D
   405                           ;	Boot Block Table Read Protection bit
   406                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   407   30000D                     	org	3145741
   408   30000D  40                 	db	64
   409                           tosu	equ	0xFFF
   410                           tosh	equ	0xFFE
   411                           tosl	equ	0xFFD
   412                           stkptr	equ	0xFFC
   413                           pclatu	equ	0xFFB
   414                           pclath	equ	0xFFA
   415                           pcl	equ	0xFF9
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           prodh	equ	0xFF4
   421                           prodl	equ	0xFF3
   422                           indf0	equ	0xFEF
   423                           postinc0	equ	0xFEE
   424                           postdec0	equ	0xFED
   425                           preinc0	equ	0xFEC
   426                           plusw0	equ	0xFEB
   427                           fsr0h	equ	0xFEA
   428                           fsr0l	equ	0xFE9
   429                           wreg	equ	0xFE8
   430                           indf1	equ	0xFE7
   431                           postinc1	equ	0xFE6
   432                           postdec1	equ	0xFE5
   433                           preinc1	equ	0xFE4
   434                           plusw1	equ	0xFE3
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           bsr	equ	0xFE0
   438                           indf2	equ	0xFDF
   439                           postinc2	equ	0xFDE
   440                           postdec2	equ	0xFDD
   441                           preinc2	equ	0xFDC
   442                           plusw2	equ	0xFDB
   443                           fsr2h	equ	0xFDA
   444                           fsr2l	equ	0xFD9
   445                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Led_State

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Led_State
                      _Set_Registers
 ---------------------------------------------------------------------------------
 (1) _Set_Registers                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Led_State                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Led_State
   _Set_Registers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BITBIGSFRllh        2D      0       0      23        0.0%
BITBIGSFRlllh        8      0       0      24        0.0%
BITBIGSFRllllh       7      0       0      25        0.0%
BITBIGSFRlllll      21      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 10 12:53:59 2023

                     l36 7FFE                       l29 7F9C                       u10 7FBC  
                     u11 7FB8                       u20 7FE0                       u21 7FD8  
                     u40 7FFE                       u41 7FFA                       u38 7FE2  
                     u57 7FC6                      l720 7FAE                      l712 7F8E  
                    l714 7F96                      l730 7F9E                      l724 7FC0  
                    l716 7F98                      l732 7FA2                      l726 7FCE  
                    l718 7F9A                      l728 7FF0                      wreg 0FE8  
                   _main 7F9E                     start 0000             ___param_bank 0000  
                  ?_main 0001          __initialization 7F88             __end_of_main 7FAE  
                 ??_main 0002            __activetblptr 0000                   _ADCON1 0FC1  
                 _OSCCON 0FD3                   isa$std 0001               __accesstop 0060  
__end_of__initialization 7F88            ___rparam_used 0001        __end_of_Led_State 8000  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F88                  __ramtop 0800                  __ptext0 7F9E  
                __ptext1 7F8E                  __ptext2 7FAE     end_of_initialization 7F88  
          _Set_Registers 7F8E                _PORTBbits 0F81                _TRISBbits 0F93  
         ?_Set_Registers 0001                _Led_State 7FAE      start_initialization 7F88  
             ?_Led_State 0001          ??_Set_Registers 0001                 _LATAbits 0F89  
               _LATBbits 0F8A              ??_Led_State 0001                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000    __end_of_Set_Registers 7F9E  
