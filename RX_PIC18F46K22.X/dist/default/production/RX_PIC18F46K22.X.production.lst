

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 07 17:05:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F46K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _ANSELC	set	3898
    57   000000                     _OSCCON	set	4051
    58   000000                     _INTCONbits	set	4082
    59   000000                     _LATCbits	set	3979
    60   000000                     _TRISCbits	set	3988
    61   000000                     _ANSELD	set	3899
    62   000000                     _PIE1bits	set	3997
    63   000000                     _RCONbits	set	4048
    64   000000                     _TRISD	set	3989
    65   000000                     _LATD	set	3980
    66   000000                     _RCSTAbits	set	4011
    67   000000                     _TXSTA1bits	set	4012
    68   000000                     _SPBRG	set	4015
    69   000000                     _PIR1bits	set	3998
    70   000000                     _BAUDCON1bits	set	4024
    71   000000                     _RCREG1	set	4014
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   00115E                     __pcinit:
    77                           	callstack 0
    78   00115E                     start_initialization:
    79                           	callstack 0
    80   00115E                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (1 bytes)
    84   00115E  6A09               	clrf	__pbssCOMRAM& (0+255),c
    85   001160                     end_of_initialization:
    86                           	callstack 0
    87   001160                     __end_of__initialization:
    88                           	callstack 0
    89   001160  900A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90   001162  920A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91   001164  0100               	movlb	0
    92   001166  EFA7  F008         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95   000009                     __pbssCOMRAM:
    96                           	callstack 0
    97   000009                     _Rx_Buffer:
    98                           	callstack 0
    99   000009                     	ds	1
   100                           
   101                           	psect	cstackCOMRAM
   102   000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104   000001                     i2LCD_Instruction@Instruction:
   105                           	callstack 0
   106                           
   107                           ; 1 bytes @ 0x0
   108   000001                     	ds	1
   109   000002                     i2Send_Instruction_Data@Data:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x1
   113   000002                     	ds	1
   114   000003                     i2Send_Instruction_Data@Instruction:
   115                           	callstack 0
   116                           
   117                           ; 1 bytes @ 0x2
   118   000003                     	ds	1
   119   000004                     LCD_Instruction@Instruction:
   120                           	callstack 0
   121                           
   122                           ; 1 bytes @ 0x3
   123   000004                     	ds	1
   124   000005                     Send_Instruction_Data@Data:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x4
   128   000005                     	ds	1
   129   000006                     Send_Instruction_Data@Instruction:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x5
   133   000006                     	ds	1
   134   000007                     ??_Init_LCD:
   135                           
   136                           ; 1 bytes @ 0x6
   137   000007                     	ds	2
   138   000009                     
   139                           ; 1 bytes @ 0x8
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 43 in file "main.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1    wreg      void 
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 0/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels required when called: 6
   165 ;; This function calls:
   166 ;;		_Configurations
   167 ;;		_Init_LCD
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174   00114E                     __ptext0:
   175                           	callstack 0
   176   00114E                     _main:
   177                           	callstack 25
   178   00114E                     
   179                           ;main.c: 46:     Configurations();
   180   00114E  EC4E  F008         	call	_Configurations	;wreg free
   181   001152                     
   182                           ;main.c: 47:     Init_LCD();
   183   001152  EC01  F008         	call	_Init_LCD	;wreg free
   184   001156                     l49:
   185   001156  EFAB  F008         	goto	l49
   186   00115A  EF35  F000         	goto	start
   187   00115E                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _Init_LCD *****************
   191 ;; Defined at:
   192 ;;		line 138 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;Total ram usage:        2 bytes
   211 ;; Hardware stack levels used: 1
   212 ;; Hardware stack levels required when called: 5
   213 ;; This function calls:
   214 ;;		_Send_Instruction_Data
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221   001002                     __ptext1:
   222                           	callstack 0
   223   001002                     _Init_LCD:
   224                           	callstack 25
   225   001002                     
   226                           ;main.c: 140:     _delay((unsigned long)((20)*(16000000/4000.0)));
   227   001002  0E68               	movlw	104
   228   001004  6E07               	movwf	??_Init_LCD^0,c
   229   001006  0EE4               	movlw	228
   230   001008                     u117:
   231   001008  2EE8               	decfsz	wreg,f,c
   232   00100A  D7FE               	bra	u117
   233   00100C  2E07               	decfsz	??_Init_LCD^0,f,c
   234   00100E  D7FC               	bra	u117
   235   001010  D000               	nop2	
   236   001012                     
   237                           ;main.c: 141:     Send_Instruction_Data(0, 0x30);
   238   001012  0E30               	movlw	48
   239   001014  6E05               	movwf	Send_Instruction_Data@Data^0,c
   240   001016  0E00               	movlw	0
   241   001018  EC8B  F008         	call	_Send_Instruction_Data
   242   00101C                     
   243                           ;main.c: 142:     _delay((unsigned long)((5)*(16000000/4000.0)));
   244   00101C  0E1A               	movlw	26
   245   00101E  6E07               	movwf	??_Init_LCD^0,c
   246   001020  0EF8               	movlw	248
   247   001022                     u127:
   248   001022  2EE8               	decfsz	wreg,f,c
   249   001024  D7FE               	bra	u127
   250   001026  2E07               	decfsz	??_Init_LCD^0,f,c
   251   001028  D7FC               	bra	u127
   252   00102A  D000               	nop2	
   253                           
   254                           ;main.c: 143:     Send_Instruction_Data(0, 0x30);
   255   00102C  0E30               	movlw	48
   256   00102E  6E05               	movwf	Send_Instruction_Data@Data^0,c
   257   001030  0E00               	movlw	0
   258   001032  EC8B  F008         	call	_Send_Instruction_Data
   259   001036                     
   260                           ;main.c: 144:     _delay((unsigned long)((5)*(16000000/4000.0)));
   261   001036  0E1A               	movlw	26
   262   001038  6E07               	movwf	??_Init_LCD^0,c
   263   00103A  0EF8               	movlw	248
   264   00103C                     u137:
   265   00103C  2EE8               	decfsz	wreg,f,c
   266   00103E  D7FE               	bra	u137
   267   001040  2E07               	decfsz	??_Init_LCD^0,f,c
   268   001042  D7FC               	bra	u137
   269   001044  D000               	nop2	
   270   001046                     
   271                           ;main.c: 145:     Send_Instruction_Data(0, 0x30);
   272   001046  0E30               	movlw	48
   273   001048  6E05               	movwf	Send_Instruction_Data@Data^0,c
   274   00104A  0E00               	movlw	0
   275   00104C  EC8B  F008         	call	_Send_Instruction_Data
   276   001050                     
   277                           ;main.c: 146:     Send_Instruction_Data(0, 0x02);
   278   001050  0E02               	movlw	2
   279   001052  6E05               	movwf	Send_Instruction_Data@Data^0,c
   280   001054  0E00               	movlw	0
   281   001056  EC8B  F008         	call	_Send_Instruction_Data
   282   00105A                     
   283                           ;main.c: 147:     Send_Instruction_Data(0, 0x06);
   284   00105A  0E06               	movlw	6
   285   00105C  6E05               	movwf	Send_Instruction_Data@Data^0,c
   286   00105E  0E00               	movlw	0
   287   001060  EC8B  F008         	call	_Send_Instruction_Data
   288   001064                     
   289                           ;main.c: 148:     Send_Instruction_Data(0, 0x0F);
   290   001064  0E0F               	movlw	15
   291   001066  6E05               	movwf	Send_Instruction_Data@Data^0,c
   292   001068  0E00               	movlw	0
   293   00106A  EC8B  F008         	call	_Send_Instruction_Data
   294   00106E                     
   295                           ;main.c: 149:     Send_Instruction_Data(0, 0x28);
   296   00106E  0E28               	movlw	40
   297   001070  6E05               	movwf	Send_Instruction_Data@Data^0,c
   298   001072  0E00               	movlw	0
   299   001074  EC8B  F008         	call	_Send_Instruction_Data
   300   001078                     
   301                           ;main.c: 150:     Send_Instruction_Data(0, 0x01);
   302   001078  0E01               	movlw	1
   303   00107A  6E05               	movwf	Send_Instruction_Data@Data^0,c
   304   00107C  0E00               	movlw	0
   305   00107E  EC8B  F008         	call	_Send_Instruction_Data
   306   001082                     
   307                           ;main.c: 151:     _delay((unsigned long)((50)*(16000000/4000.0)));
   308   001082  0E02               	movlw	2
   309   001084  6E08               	movwf	(??_Init_LCD+1)^0,c
   310   001086  0E04               	movlw	4
   311   001088  6E07               	movwf	??_Init_LCD^0,c
   312   00108A  0EBA               	movlw	186
   313   00108C                     u147:
   314   00108C  2EE8               	decfsz	wreg,f,c
   315   00108E  D7FE               	bra	u147
   316   001090  2E07               	decfsz	??_Init_LCD^0,f,c
   317   001092  D7FC               	bra	u147
   318   001094  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   319   001096  D7FA               	bra	u147
   320   001098  D000               	nop2	
   321   00109A  0012               	return		;funcret
   322   00109C                     __end_of_Init_LCD:
   323                           	callstack 0
   324                           
   325 ;; *************** function _Send_Instruction_Data *****************
   326 ;; Defined at:
   327 ;;		line 157 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;  Instruction     1    wreg     unsigned char 
   330 ;;  Data            1    4[COMRAM] unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  Instruction     1    5[COMRAM] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;Total ram usage:        2 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; Hardware stack levels required when called: 4
   349 ;; This function calls:
   350 ;;		_LCD_Instruction
   351 ;; This function is called by:
   352 ;;		_Init_LCD
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text2
   357   001116                     __ptext2:
   358                           	callstack 0
   359   001116                     _Send_Instruction_Data:
   360                           	callstack 25
   361                           
   362                           ;incstack = 0
   363                           ;Send_Instruction_Data@Instruction stored from wreg
   364   001116  6E06               	movwf	Send_Instruction_Data@Instruction^0,c
   365   001118                     
   366                           ;main.c: 159:     LATCbits.LATC4 = Instruction;
   367   001118  B006               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   368   00111A  D002               	bra	u65
   369   00111C  988B               	bcf	139,4,c	;volatile
   370   00111E  D001               	bra	u66
   371   001120                     u65:
   372   001120  888B               	bsf	139,4,c	;volatile
   373   001122                     u66:
   374   001122                     
   375                           ;main.c: 160:     LCD_Instruction(Data >> 4);
   376   001122  3805               	swapf	Send_Instruction_Data@Data^0,w,c
   377   001124  0B0F               	andlw	15
   378   001126  EC6D  F008         	call	_LCD_Instruction
   379   00112A                     
   380                           ;main.c: 161:     LCD_Instruction(Data);
   381   00112A  5005               	movf	Send_Instruction_Data@Data^0,w,c
   382   00112C  EC6D  F008         	call	_LCD_Instruction
   383   001130  0012               	return		;funcret
   384   001132                     __end_of_Send_Instruction_Data:
   385                           	callstack 0
   386                           
   387 ;; *************** function _LCD_Instruction *****************
   388 ;; Defined at:
   389 ;;		line 176 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  Instruction     1    wreg     unsigned char 
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  Instruction     1    3[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 3
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_Send_Instruction_Data
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text3
   418   0010DA                     __ptext3:
   419                           	callstack 0
   420   0010DA                     _LCD_Instruction:
   421                           	callstack 25
   422                           
   423                           ;incstack = 0
   424                           ;LCD_Instruction@Instruction stored from wreg
   425   0010DA  6E04               	movwf	LCD_Instruction@Instruction^0,c
   426   0010DC                     
   427                           ;main.c: 178:     LATCbits.LATC5 = 1;
   428   0010DC  8A8B               	bsf	139,5,c	;volatile
   429   0010DE                     
   430                           ;main.c: 179:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   431   0010DE  0E78               	movlw	120
   432   0010E0                     u157:
   433   0010E0  2EE8               	decfsz	wreg,f,c
   434   0010E2  D7FE               	bra	u157
   435   0010E4                     
   436                           ;main.c: 180:     LATD = Instruction;
   437   0010E4  C004  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   438   0010E8                     
   439                           ;main.c: 181:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   440   0010E8  0E78               	movlw	120
   441   0010EA                     u167:
   442   0010EA  2EE8               	decfsz	wreg,f,c
   443   0010EC  D7FE               	bra	u167
   444   0010EE                     
   445                           ;main.c: 182:     LATCbits.LATC5 = 0;
   446   0010EE  9A8B               	bcf	139,5,c	;volatile
   447   0010F0                     
   448                           ;main.c: 183:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   449   0010F0  0E78               	movlw	120
   450   0010F2                     u177:
   451   0010F2  2EE8               	decfsz	wreg,f,c
   452   0010F4  D7FE               	bra	u177
   453   0010F6  0012               	return		;funcret
   454   0010F8                     __end_of_LCD_Instruction:
   455                           	callstack 0
   456                           
   457 ;; *************** function _Configurations *****************
   458 ;; Defined at:
   459 ;;		line 56 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; Hardware stack levels required when called: 3
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text4
   488   00109C                     __ptext4:
   489                           	callstack 0
   490   00109C                     _Configurations:
   491                           	callstack 27
   492   00109C                     
   493                           ;main.c: 58:     OSCCON = 0x72;
   494   00109C  0E72               	movlw	114
   495   00109E  6ED3               	movwf	211,c	;volatile
   496                           
   497                           ;main.c: 61:     ANSELC = 0x00;
   498   0010A0  0E00               	movlw	0
   499   0010A2  010F               	movlb	15	; () banked
   500   0010A4  6F3A               	movwf	58,b	;volatile
   501                           
   502                           ;main.c: 62:     ANSELD = 0x00;
   503   0010A6  0E00               	movlw	0
   504   0010A8  6F3B               	movwf	59,b	;volatile
   505   0010AA                     
   506                           ; BSR set to: 15
   507                           ;main.c: 64:     TRISCbits.RC4 = 0;
   508   0010AA  9894               	bcf	148,4,c	;volatile
   509   0010AC                     
   510                           ; BSR set to: 15
   511                           ;main.c: 65:     TRISCbits.RC5 = 0;
   512   0010AC  9A94               	bcf	148,5,c	;volatile
   513                           
   514                           ;main.c: 66:     TRISD = 0x00;
   515   0010AE  0E00               	movlw	0
   516   0010B0  6E95               	movwf	149,c	;volatile
   517   0010B2                     
   518                           ; BSR set to: 15
   519                           ;main.c: 69:     LATCbits.LC4 = 0;
   520   0010B2  988B               	bcf	139,4,c	;volatile
   521   0010B4                     
   522                           ; BSR set to: 15
   523                           ;main.c: 70:     LATCbits.LC5 = 0;
   524   0010B4  9A8B               	bcf	139,5,c	;volatile
   525   0010B6                     
   526                           ; BSR set to: 15
   527                           ;main.c: 73:     INTCONbits.GIE = 1;
   528   0010B6  8EF2               	bsf	242,7,c	;volatile
   529   0010B8                     
   530                           ; BSR set to: 15
   531                           ;main.c: 74:     INTCONbits.PEIE = 1;
   532   0010B8  8CF2               	bsf	242,6,c	;volatile
   533   0010BA                     
   534                           ; BSR set to: 15
   535                           ;main.c: 75:     RCONbits.IPEN = 0;
   536   0010BA  9ED0               	bcf	208,7,c	;volatile
   537   0010BC                     
   538                           ; BSR set to: 15
   539                           ;main.c: 77:     PIE1bits.RC1IE = 1;
   540   0010BC  8A9D               	bsf	157,5,c	;volatile
   541   0010BE                     
   542                           ; BSR set to: 15
   543                           ;main.c: 78:     PIR1bits.RC1IF = 0;
   544   0010BE  9A9E               	bcf	158,5,c	;volatile
   545                           
   546                           ;main.c: 81:     SPBRG = 103;
   547   0010C0  0E67               	movlw	103
   548   0010C2  6EAF               	movwf	175,c	;volatile
   549   0010C4                     
   550                           ; BSR set to: 15
   551                           ;main.c: 82:     TRISCbits.RC6 = 1;
   552   0010C4  8C94               	bsf	148,6,c	;volatile
   553   0010C6                     
   554                           ; BSR set to: 15
   555                           ;main.c: 83:     TRISCbits.RC7 = 1;
   556   0010C6  8E94               	bsf	148,7,c	;volatile
   557   0010C8                     
   558                           ; BSR set to: 15
   559                           ;main.c: 86:     TXSTA1bits.TX91 = 0;
   560   0010C8  9CAC               	bcf	172,6,c	;volatile
   561   0010CA                     
   562                           ; BSR set to: 15
   563                           ;main.c: 87:     TXSTA1bits.TXEN1 = 1;
   564   0010CA  8AAC               	bsf	172,5,c	;volatile
   565   0010CC                     
   566                           ; BSR set to: 15
   567                           ;main.c: 88:     TXSTA1bits.SYNC1 = 0;
   568   0010CC  98AC               	bcf	172,4,c	;volatile
   569   0010CE                     
   570                           ; BSR set to: 15
   571                           ;main.c: 89:     TXSTA1bits.BRGH1 = 1;
   572   0010CE  84AC               	bsf	172,2,c	;volatile
   573   0010D0                     
   574                           ; BSR set to: 15
   575                           ;main.c: 92:     RCSTAbits.SPEN1 = 1;
   576   0010D0  8EAB               	bsf	171,7,c	;volatile
   577   0010D2                     
   578                           ; BSR set to: 15
   579                           ;main.c: 93:     RCSTAbits.RX91 = 0;
   580   0010D2  9CAB               	bcf	171,6,c	;volatile
   581   0010D4                     
   582                           ; BSR set to: 15
   583                           ;main.c: 94:     RCSTAbits.CREN1 = 1;
   584   0010D4  88AB               	bsf	171,4,c	;volatile
   585   0010D6                     
   586                           ; BSR set to: 15
   587                           ;main.c: 97:     BAUDCON1bits.BRG16 = 0;
   588   0010D6  96B8               	bcf	184,3,c	;volatile
   589   0010D8                     
   590                           ; BSR set to: 15
   591   0010D8  0012               	return		;funcret
   592   0010DA                     __end_of_Configurations:
   593                           	callstack 0
   594                           
   595 ;; *************** function _RX_EUSART *****************
   596 ;; Defined at:
   597 ;;		line 112 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 2
   618 ;; This function calls:
   619 ;;		i2_Send_Instruction_Data
   620 ;; This function is called by:
   621 ;;		Interrupt level 2
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	intcode
   626   000008                     __pintcode:
   627                           	callstack 0
   628   000008                     _RX_EUSART:
   629                           	callstack 25
   630                           
   631                           ; BSR set to: 15
   632                           ;incstack = 0
   633   000008  820A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   634   00000A                     
   635                           ;main.c: 114:     if (PIR1bits.RC1IF) {
   636   00000A  AA9E               	btfss	158,5,c	;volatile
   637   00000C  EF0A  F000         	goto	i2u8_41
   638   000010  EF0C  F000         	goto	i2u8_40
   639   000014                     i2u8_41:
   640   000014  EF33  F000         	goto	i2l65
   641   000018                     i2u8_40:
   642   000018                     
   643                           ;main.c: 116:         Rx_Buffer = RCREG1;
   644   000018  CFAE F009          	movff	4014,_Rx_Buffer	;volatile
   645   00001C                     
   646                           ;main.c: 118:         if (Rx_Buffer == 'A') {
   647   00001C  0E41               	movlw	65
   648   00001E  1809               	xorwf	_Rx_Buffer^0,w,c
   649   000020  A4D8               	btfss	status,2,c
   650   000022  EF15  F000         	goto	i2u9_41
   651   000026  EF17  F000         	goto	i2u9_40
   652   00002A                     i2u9_41:
   653   00002A  EF1E  F000         	goto	i2l924
   654   00002E                     i2u9_40:
   655   00002E                     
   656                           ;main.c: 120:             Send_Instruction_Data(0, 0xC0);
   657   00002E  0EC0               	movlw	192
   658   000030  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   659   000032  0E00               	movlw	0
   660   000034  EC99  F008         	call	i2_Send_Instruction_Data
   661                           
   662                           ;main.c: 122:         } else if (Rx_Buffer == 0x0D) {
   663   000038  EF33  F000         	goto	i2l65
   664   00003C                     i2l924:
   665   00003C  0E0D               	movlw	13
   666   00003E  1809               	xorwf	_Rx_Buffer^0,w,c
   667   000040  A4D8               	btfss	status,2,c
   668   000042  EF25  F000         	goto	i2u10_41
   669   000046  EF27  F000         	goto	i2u10_40
   670   00004A                     i2u10_41:
   671   00004A  EF2E  F000         	goto	i2l928
   672   00004E                     i2u10_40:
   673   00004E                     
   674                           ;main.c: 124:             Send_Instruction_Data(0, 0x02);
   675   00004E  0E02               	movlw	2
   676   000050  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   677   000052  0E00               	movlw	0
   678   000054  EC99  F008         	call	i2_Send_Instruction_Data
   679                           
   680                           ;main.c: 126:         } else {
   681   000058  EF33  F000         	goto	i2l65
   682   00005C                     i2l928:
   683                           
   684                           ;main.c: 128:             Send_Instruction_Data(1, Rx_Buffer);
   685   00005C  C009  F002         	movff	_Rx_Buffer,i2Send_Instruction_Data@Data
   686   000060  0E01               	movlw	1
   687   000062  EC99  F008         	call	i2_Send_Instruction_Data
   688   000066                     i2l65:
   689   000066  920A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   690   000068  0011               	retfie		f
   691   00006A                     __end_of_RX_EUSART:
   692                           	callstack 0
   693                           
   694 ;; *************** function i2_Send_Instruction_Data *****************
   695 ;; Defined at:
   696 ;;		line 157 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  Instruction     1    wreg     unsigned char 
   699 ;;  Data            1    1[COMRAM] unsigned char 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  Instruction     1    2[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 1
   718 ;; This function calls:
   719 ;;		i2_LCD_Instruction
   720 ;; This function is called by:
   721 ;;		_RX_EUSART
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text6
   726   001132                     __ptext6:
   727                           	callstack 0
   728   001132                     i2_Send_Instruction_Data:
   729                           	callstack 25
   730                           
   731                           ;incstack = 0
   732                           ;i2Send_Instruction_Data@Instruction stored from wreg
   733   001132  6E03               	movwf	i2Send_Instruction_Data@Instruction^0,c
   734   001134                     
   735                           ;main.c: 159:     LATCbits.LATC4 = Instruction;
   736   001134  B003               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
   737   001136  D002               	bra	i2u7_45
   738   001138  988B               	bcf	139,4,c	;volatile
   739   00113A  D001               	bra	i2u7_46
   740   00113C                     i2u7_45:
   741   00113C  888B               	bsf	139,4,c	;volatile
   742   00113E                     i2u7_46:
   743   00113E                     
   744                           ;main.c: 160:     LCD_Instruction(Data >> 4);
   745   00113E  3802               	swapf	i2Send_Instruction_Data@Data^0,w,c
   746   001140  0B0F               	andlw	15
   747   001142  EC7C  F008         	call	i2_LCD_Instruction
   748   001146                     
   749                           ;main.c: 161:     LCD_Instruction(Data);
   750   001146  5002               	movf	i2Send_Instruction_Data@Data^0,w,c
   751   001148  EC7C  F008         	call	i2_LCD_Instruction
   752   00114C  0012               	return		;funcret
   753   00114E                     __end_ofi2_Send_Instruction_Data:
   754                           	callstack 0
   755                           
   756 ;; *************** function i2_LCD_Instruction *****************
   757 ;; Defined at:
   758 ;;		line 176 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  Instruction     1    wreg     unsigned char 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  Instruction     1    0[COMRAM] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;Total ram usage:        1 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		i2_Send_Instruction_Data
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text7
   786   0010F8                     __ptext7:
   787                           	callstack 0
   788   0010F8                     i2_LCD_Instruction:
   789                           	callstack 25
   790                           
   791                           ;incstack = 0
   792                           ;i2LCD_Instruction@Instruction stored from wreg
   793   0010F8  6E01               	movwf	i2LCD_Instruction@Instruction^0,c
   794   0010FA                     
   795                           ;main.c: 178:     LATCbits.LATC5 = 1;
   796   0010FA  8A8B               	bsf	139,5,c	;volatile
   797   0010FC                     
   798                           ;main.c: 179:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   799   0010FC  0E78               	movlw	120
   800   0010FE                     i2u18_47:
   801   0010FE  2EE8               	decfsz	wreg,f,c
   802   001100  D7FE               	bra	i2u18_47
   803   001102                     
   804                           ;main.c: 180:     LATD = Instruction;
   805   001102  C001  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
   806   001106                     
   807                           ;main.c: 181:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   808   001106  0E78               	movlw	120
   809   001108                     i2u19_47:
   810   001108  2EE8               	decfsz	wreg,f,c
   811   00110A  D7FE               	bra	i2u19_47
   812   00110C                     
   813                           ;main.c: 182:     LATCbits.LATC5 = 0;
   814   00110C  9A8B               	bcf	139,5,c	;volatile
   815   00110E                     
   816                           ;main.c: 183:     _delay((unsigned long)((90)*(16000000/4000000.0)));
   817   00110E  0E78               	movlw	120
   818   001110                     i2u20_47:
   819   001110  2EE8               	decfsz	wreg,f,c
   820   001112  D7FE               	bra	i2u20_47
   821   001114  0012               	return		;funcret
   822   001116                     __end_ofi2_LCD_Instruction:
   823                           	callstack 0
   824                           
   825                           	psect	smallconst
   826   001000                     __psmallconst:
   827                           	callstack 0
   828   001000  00                 	db	0
   829   001001  00                 	db	0	; dummy byte at the end
   830   000000                     
   831                           	psect	rparam
   832   000000                     
   833                           	psect	temp
   834   00000A                     btemp:
   835                           	callstack 0
   836   00000A                     	ds	1
   837   000000                     int$flags	set	btemp
   838   000000                     wtemp8	set	btemp+1
   839   000000                     ttemp5	set	btemp+1
   840   000000                     ttemp6	set	btemp+4
   841   000000                     ttemp7	set	btemp+8
   842                           
   843                           	psect	config
   844                           
   845                           ; Padding undefined space
   846   300000                     	org	3145728
   847   300000  FF                 	db	255
   848                           
   849                           ;Config register CONFIG1H @ 0x300001
   850                           ;	Oscillator Selection bits
   851                           ;	FOSC = INTIO67, Internal oscillator block
   852                           ;	4X PLL Enable
   853                           ;	PLLCFG = OFF, Oscillator used directly
   854                           ;	Primary clock enable bit
   855                           ;	PRICLKEN = ON, Primary clock is always enabled
   856                           ;	Fail-Safe Clock Monitor Enable bit
   857                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   858                           ;	Internal/External Oscillator Switchover bit
   859                           ;	IESO = OFF, Oscillator Switchover mode disabled
   860   300001                     	org	3145729
   861   300001  28                 	db	40
   862                           
   863                           ;Config register CONFIG2L @ 0x300002
   864                           ;	Power-up Timer Enable bit
   865                           ;	PWRTEN = OFF, Power up timer disabled
   866                           ;	Brown-out Reset Enable bits
   867                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   868                           ;	Brown Out Reset Voltage bits
   869                           ;	BORV = 190, VBOR set to 1.90 V nominal
   870   300002                     	org	3145730
   871   300002  1F                 	db	31
   872                           
   873                           ;Config register CONFIG2H @ 0x300003
   874                           ;	Watchdog Timer Enable bits
   875                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   876                           ;	Watchdog Timer Postscale Select bits
   877                           ;	WDTPS = 32768, 1:32768
   878   300003                     	org	3145731
   879   300003  3C                 	db	60
   880                           
   881                           ; Padding undefined space
   882   300004                     	org	3145732
   883   300004  FF                 	db	255
   884                           
   885                           ;Config register CONFIG3H @ 0x300005
   886                           ;	CCP2 MUX bit
   887                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   888                           ;	PORTB A/D Enable bit
   889                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   890                           ;	P3A/CCP3 Mux bit
   891                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   892                           ;	HFINTOSC Fast Start-up
   893                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   894                           ;	Timer3 Clock input mux bit
   895                           ;	T3CMX = PORTC0, T3CKI is on RC0
   896                           ;	ECCP2 B output mux bit
   897                           ;	P2BMX = PORTD2, P2B is on RD2
   898                           ;	MCLR Pin Enable bit
   899                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   900   300005                     	org	3145733
   901   300005  BF                 	db	191
   902                           
   903                           ;Config register CONFIG4L @ 0x300006
   904                           ;	Stack Full/Underflow Reset Enable bit
   905                           ;	STVREN = ON, Stack full/underflow will cause Reset
   906                           ;	Single-Supply ICSP Enable bit
   907                           ;	LVP = OFF, Single-Supply ICSP disabled
   908                           ;	Extended Instruction Set Enable bit
   909                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   910                           ;	Background Debug
   911                           ;	DEBUG = 0x1, unprogrammed default
   912   300006                     	org	3145734
   913   300006  81                 	db	129
   914                           
   915                           ; Padding undefined space
   916   300007                     	org	3145735
   917   300007  FF                 	db	255
   918                           
   919                           ;Config register CONFIG5L @ 0x300008
   920                           ;	Code Protection Block 0
   921                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   922                           ;	Code Protection Block 1
   923                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   924                           ;	Code Protection Block 2
   925                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   926                           ;	Code Protection Block 3
   927                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   928   300008                     	org	3145736
   929   300008  0F                 	db	15
   930                           
   931                           ;Config register CONFIG5H @ 0x300009
   932                           ;	Boot Block Code Protection bit
   933                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   934                           ;	Data EEPROM Code Protection bit
   935                           ;	CPD = OFF, Data EEPROM not code-protected
   936   300009                     	org	3145737
   937   300009  C0                 	db	192
   938                           
   939                           ;Config register CONFIG6L @ 0x30000A
   940                           ;	Write Protection Block 0
   941                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   942                           ;	Write Protection Block 1
   943                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   944                           ;	Write Protection Block 2
   945                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   946                           ;	Write Protection Block 3
   947                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   948   30000A                     	org	3145738
   949   30000A  0F                 	db	15
   950                           
   951                           ;Config register CONFIG6H @ 0x30000B
   952                           ;	Configuration Register Write Protection bit
   953                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   954                           ;	Boot Block Write Protection bit
   955                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   956                           ;	Data EEPROM Write Protection bit
   957                           ;	WRTD = OFF, Data EEPROM not write-protected
   958   30000B                     	org	3145739
   959   30000B  E0                 	db	224
   960                           
   961                           ;Config register CONFIG7L @ 0x30000C
   962                           ;	Table Read Protection Block 0
   963                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   964                           ;	Table Read Protection Block 1
   965                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   966                           ;	Table Read Protection Block 2
   967                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   968                           ;	Table Read Protection Block 3
   969                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   970   30000C                     	org	3145740
   971   30000C  0F                 	db	15
   972                           
   973                           ;Config register CONFIG7H @ 0x30000D
   974                           ;	Boot Block Table Read Protection bit
   975                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   976   30000D                     	org	3145741
   977   30000D  40                 	db	64
   978                           tosu	equ	0xFFF
   979                           tosh	equ	0xFFE
   980                           tosl	equ	0xFFD
   981                           stkptr	equ	0xFFC
   982                           pclatu	equ	0xFFB
   983                           pclath	equ	0xFFA
   984                           pcl	equ	0xFF9
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           prodh	equ	0xFF4
   990                           prodl	equ	0xFF3
   991                           indf0	equ	0xFEF
   992                           postinc0	equ	0xFEE
   993                           postdec0	equ	0xFED
   994                           preinc0	equ	0xFEC
   995                           plusw0	equ	0xFEB
   996                           fsr0h	equ	0xFEA
   997                           fsr0l	equ	0xFE9
   998                           wreg	equ	0xFE8
   999                           indf1	equ	0xFE7
  1000                           postinc1	equ	0xFE6
  1001                           postdec1	equ	0xFE5
  1002                           preinc1	equ	0xFE4
  1003                           plusw1	equ	0xFE3
  1004                           fsr1h	equ	0xFE2
  1005                           fsr1l	equ	0xFE1
  1006                           bsr	equ	0xFE0
  1007                           indf2	equ	0xFDF
  1008                           postinc2	equ	0xFDE
  1009                           postdec2	equ	0xFDD
  1010                           preinc2	equ	0xFDC
  1011                           plusw2	equ	0xFDB
  1012                           fsr2h	equ	0xFDA
  1013                           fsr2l	equ	0xFD9
  1014                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _RX_EUSART in COMRAM

    _RX_EUSART->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _RX_EUSART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX_EUSART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX_EUSART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RX_EUSART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RX_EUSART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RX_EUSART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RX_EUSART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RX_EUSART in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _RX_EUSART in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _RX_EUSART in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _RX_EUSART in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _RX_EUSART in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _RX_EUSART in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _RX_EUSART in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _RX_EUSART in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _RX_EUSART in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     839
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     839
                                              6 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     839
                                              4 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RX_EUSART                                            0     0      0     166
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (5) i2_Send_Instruction_Data                              2     1      1     166
                                              1 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Instruction                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _RX_EUSART (ROOT)
   i2_Send_Instruction_Data
     i2_LCD_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      8       9       1        9.6%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      47        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 07 17:05:17 2024

                                l50 1156                                  l55 10D8  
                                l71 1130                                  l49 1156  
                                l74 10F6                                  l68 109A  
                                u65 1120                                  u66 1122  
                               l800 10C4                                 l810 10CE  
                               l802 10C6                                 l812 10D0  
                               l804 10C8                                 l900 106E  
                               l814 10D2                                 l806 10CA  
                               l750 10DC                                 l902 1078  
                               l816 10D4                                 l808 10CC  
                               l760 10F0                                 l752 10DE  
                               l904 1082                                 l912 114E  
                               l818 10D6                                 l754 10E4  
                               l914 1152                                 l780 109C  
                               l756 10E8                                 l790 10B6  
                               l782 10AA                                 l758 10EE  
                               l870 112A                                 l792 10B8  
                               l784 10AC                                 l794 10BA  
                               l786 10B2                                 l866 1118  
                               l890 1036                                 l796 10BC  
                               l788 10B4                                 l868 1122  
                               l892 1046                                 l884 1002  
                               l798 10BE                                 l894 1050  
                               l886 1012                                 l896 105A  
                               l888 101C                                 l898 1064  
                               u117 1008                                 u127 1022  
                               u137 103C                                 u147 108C  
                               u157 10E0                                 u167 10EA  
                               u177 10F2         i2Send_Instruction_Data@Data 0002  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              _LATD 0F8C                                i2l71 114C  
                              i2l65 0066                                i2l74 1114  
                              _main 114E                                btemp 000A  
                              start 006A                        ___param_bank 0000  
                   _LCD_Instruction 10DA    Send_Instruction_Data@Instruction 0006  
i2Send_Instruction_Data@Instruction 0003                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l910 1146  
                             i2l920 001C                               i2l906 1134  
                             i2l922 002E                               i2l908 113E  
                             i2l924 003C                               i2l916 000A  
                             i2l926 004E                               i2l918 0018  
                             i2l880 110C                               i2l872 10FA  
                             i2l928 005C                               i2l882 110E  
                             i2l874 10FC                               i2l876 1102  
                             i2l878 1106                               _SPBRG 0FAF  
                             _TRISD 0F95        i2LCD_Instruction@Instruction 0001  
                             ttemp5 000B                               ttemp6 000E  
                             ttemp7 0012                               status 0FD8  
                             wtemp8 000B                     __initialization 115E  
                      __end_of_main 115E                    __end_of_Init_LCD 109C  
             _Send_Instruction_Data 1116                              ??_main 0009  
                     __activetblptr 0000                              _ANSELC 0F3A  
                            _ANSELD 0F3B                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 0004                              _OSCCON 0FD3  
                            i2u7_45 113C                              i2u7_46 113E  
                            i2u8_40 0018                              i2u8_41 0014  
                            i2u9_40 002E                              i2u9_41 002A  
           __end_of_LCD_Instruction 10F8                              isa$std 0001  
                      __mediumconst 0000                   __end_of_RX_EUSART 006A  
                        __accesstop 0060             __end_of__initialization 1160  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 0005                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001             i2_Send_Instruction_Data 1132  
                           i2u10_40 004E                             i2u10_41 004A  
                           i2u20_47 1110                             i2u18_47 10FE  
                           i2u19_47 1108                          ??_Init_LCD 0007  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 1000                             __pcinit 115E  
                           __ramtop 1000                             __ptext0 114E  
                           __ptext1 1002                             __ptext2 1116  
                           __ptext3 10DA                             __ptext4 109C  
                           __ptext6 1132                             __ptext7 10F8  
              end_of_initialization 1160           ??i2_Send_Instruction_Data 0003  
                         _RCSTAbits 0FAB                           _TRISCbits 0F94  
                         _RX_EUSART 0008             ??_Send_Instruction_Data 0006  
               start_initialization 115E           Send_Instruction_Data@Data 0005  
                    _Configurations 109C                          ?_RX_EUSART 0001  
                         _Rx_Buffer 0009                         __pbssCOMRAM 0009  
            __end_of_Configurations 10DA                           __pintcode 0008  
                       __smallconst 1000                     ?_Configurations 0001  
                       ??_RX_EUSART 0004                            _LATCbits 0F8B  
                          _PIE1bits 0F9D                            _PIR1bits 0F9E  
                          _RCONbits 0FD0                   i2_LCD_Instruction 10F8  
                ?i2_LCD_Instruction 0001                 ??i2_LCD_Instruction 0001  
                          _Init_LCD 1002                            __Hrparam 0000  
                          __Lrparam 0000       __end_of_Send_Instruction_Data 1132  
         __end_ofi2_LCD_Instruction 1116                   ??_LCD_Instruction 0004  
          ?i2_Send_Instruction_Data 0002                            isa$xinst 0000  
                          int$flags 000A                          _INTCONbits 0FF2  
                          intlevel2 0000                    ??_Configurations 0004  
   __end_ofi2_Send_Instruction_Data 114E  
