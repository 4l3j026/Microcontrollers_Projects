

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 07 15:30:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0011F0                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _CountRX_Tens
    64   0011F0  30                 	db	48
    65                           
    66                           ;initializer for _CountRX_Units
    67   0011F1  30                 	db	48
    68                           
    69                           ;initializer for _Rx_Text_1
    70   0011F2  49                 	db	73
    71   0011F3  6E                 	db	110
    72   0011F4  74                 	db	116
    73   0011F5  65                 	db	101
    74   0011F6  72                 	db	114
    75   0011F7  20                 	db	32
    76   0011F8  43                 	db	67
    77   0011F9  6F                 	db	111
    78   0011FA  75                 	db	117
    79   0011FB  6E                 	db	110
    80   0011FC  74                 	db	116
    81   0011FD  65                 	db	101
    82   0011FE  72                 	db	114
    83   0011FF  20                 	db	32
    84   001200  3A                 	db	58
    85   001201  20                 	db	32
    86   001202  00                 	db	0
    87   000000                     _TXREG1	set	4013
    88   000000                     _RCREG1	set	4014
    89   000000                     _ANSELC	set	3898
    90   000000                     _OSCCON	set	4051
    91   000000                     _INTCONbits	set	4082
    92   000000                     _LATCbits	set	3979
    93   000000                     _TRISCbits	set	3988
    94   000000                     _ANSELD	set	3899
    95   000000                     _PIE1bits	set	3997
    96   000000                     _RCONbits	set	4048
    97   000000                     _TRISD	set	3989
    98   000000                     _LATD	set	3980
    99   000000                     _RCSTAbits	set	4011
   100   000000                     _TXSTA1bits	set	4012
   101   000000                     _SPBRG	set	4015
   102   000000                     _PIR1bits	set	3998
   103   000000                     _BAUDCON1bits	set	4024
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   001162                     __pcinit:
   109                           	callstack 0
   110   001162                     start_initialization:
   111                           	callstack 0
   112   001162                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (19 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   001162  0EF0               	movlw	low __pidataCOMRAM
   118   001164  6EF6               	movwf	tblptrl,c
   119   001166  0E11               	movlw	high __pidataCOMRAM
   120   001168  6EF7               	movwf	tblptrh,c
   121   00116A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   00116C  6EF8               	movwf	tblptru,c
   123   00116E  EE00  F001         	lfsr	0,__pdataCOMRAM
   124   001172  EE10 F013          	lfsr	1,19
   125   001176                     copy_data0:
   126   001176  0009               	tblrd		*+
   127   001178  CFF5 FFEE          	movff	tablat,postinc0
   128   00117C  50E5               	movf	postdec1,w,c
   129   00117E  50E1               	movf	fsr1l,w,c
   130   001180  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to COMRAM (3 bytes)
   133   001182  6A1C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   134   001184  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   135   001186  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   136   001188                     end_of_initialization:
   137                           	callstack 0
   138   001188                     __end_of__initialization:
   139                           	callstack 0
   140   001188  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   141   00118A  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   142   00118C  0100               	movlb	0
   143   00118E  EFEE  F008         	goto	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMRAM
   146   00001A                     __pbssCOMRAM:
   147                           	callstack 0
   148   00001A                     _Rx_Counter:
   149                           	callstack 0
   150   00001A                     	ds	2
   151   00001C                     _Rx_Buffer:
   152                           	callstack 0
   153   00001C                     	ds	1
   154                           
   155                           	psect	dataCOMRAM
   156   000001                     __pdataCOMRAM:
   157                           	callstack 0
   158   000001                     _CountRX_Tens:
   159                           	callstack 0
   160   000001                     	ds	1
   161   000002                     _CountRX_Units:
   162                           	callstack 0
   163   000002                     	ds	1
   164   000003                     _Rx_Text_1:
   165                           	callstack 0
   166   000003                     	ds	17
   167                           
   168                           	psect	cstackCOMRAM
   169   000014                     __pcstackCOMRAM:
   170                           	callstack 0
   171   000014                     ??_LCD_Instruction:
   172   000014                     ?_strlen:
   173                           	callstack 0
   174   000014                     strlen@s:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x0
   178   000014                     	ds	1
   179   000015                     LCD_Instruction@Instruction:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x1
   183   000015                     	ds	1
   184   000016                     Send_Instruction_Data@Data:
   185                           	callstack 0
   186   000016                     strlen@a:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x2
   190   000016                     	ds	1
   191   000017                     Send_Instruction_Data@Instruction:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x3
   195   000017                     	ds	1
   196   000018                     ??_Init_LCD:
   197   000018                     LCD_Message@i:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x4
   201   000018                     	ds	2
   202   00001A                     
   203                           ; 1 bytes @ 0x6
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 46 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels required when called: 4
   229 ;; This function calls:
   230 ;;		_Configurations
   231 ;;		_Init_LCD
   232 ;;		_LCD_Message
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239   0011DC                     __ptext0:
   240                           	callstack 0
   241   0011DC                     _main:
   242                           	callstack 27
   243   0011DC                     
   244                           ;main.c: 49:     Configurations();
   245   0011DC  EC74  F008         	call	_Configurations	;wreg free
   246   0011E0                     
   247                           ;main.c: 50:     Init_LCD();
   248   0011E0  EC01  F008         	call	_Init_LCD	;wreg free
   249   0011E4                     
   250                           ;main.c: 51:     LCD_Message();
   251   0011E4  EC4E  F008         	call	_LCD_Message	;wreg free
   252   0011E8                     l63:
   253   0011E8  EFF4  F008         	goto	l63
   254   0011EC  EF19  F000         	goto	start
   255   0011F0                     __end_of_main:
   256                           	callstack 0
   257                           
   258 ;; *************** function _LCD_Message *****************
   259 ;; Defined at:
   260 ;;		line 172 in file "main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  i               2    4[COMRAM] int 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;Total ram usage:        2 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; Hardware stack levels required when called: 3
   281 ;; This function calls:
   282 ;;		_Send_Instruction_Data
   283 ;;		_strlen
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text1
   290   00109C                     __ptext1:
   291                           	callstack 0
   292   00109C                     _LCD_Message:
   293                           	callstack 27
   294   00109C                     
   295                           ;main.c: 174:     Send_Instruction_Data(0, 0X80);
   296   00109C  0E80               	movlw	128
   297   00109E  6E16               	movwf	Send_Instruction_Data@Data^0,c
   298   0010A0  0E00               	movlw	0
   299   0010A2  ECE0  F008         	call	_Send_Instruction_Data
   300   0010A6                     
   301                           ;main.c: 176:     for (int i = 0; i < strlen(Rx_Text_1); i++) {
   302   0010A6  0E00               	movlw	0
   303   0010A8  6E19               	movwf	(LCD_Message@i+1)^0,c
   304   0010AA  0E00               	movlw	0
   305   0010AC  6E18               	movwf	LCD_Message@i^0,c
   306   0010AE  EF64  F008         	goto	l949
   307   0010B2                     l945:
   308                           
   309                           ;main.c: 178:         Send_Instruction_Data(1, Rx_Text_1[i]);
   310   0010B2  5018               	movf	LCD_Message@i^0,w,c
   311   0010B4  0F03               	addlw	low _Rx_Text_1
   312   0010B6  6ED9               	movwf	fsr2l,c
   313   0010B8  6ADA               	clrf	fsr2h,c
   314   0010BA  50DF               	movf	indf2,w,c
   315   0010BC  6E16               	movwf	Send_Instruction_Data@Data^0,c
   316   0010BE  0E01               	movlw	1
   317   0010C0  ECE0  F008         	call	_Send_Instruction_Data
   318   0010C4                     
   319                           ;main.c: 180:     }
   320   0010C4  4A18               	infsnz	LCD_Message@i^0,f,c
   321   0010C6  2A19               	incf	(LCD_Message@i+1)^0,f,c
   322   0010C8                     l949:
   323   0010C8  0E03               	movlw	low _Rx_Text_1
   324   0010CA  6E14               	movwf	strlen@s^0,c
   325   0010CC  ECC9  F008         	call	_strlen	;wreg free
   326   0010D0  5014               	movf	?_strlen^0,w,c
   327   0010D2  5C18               	subwf	LCD_Message@i^0,w,c
   328   0010D4  5015               	movf	(?_strlen+1)^0,w,c
   329   0010D6  5819               	subwfb	(LCD_Message@i+1)^0,w,c
   330   0010D8  A0D8               	btfss	status,0,c
   331   0010DA  EF71  F008         	goto	u111
   332   0010DE  EF73  F008         	goto	u110
   333   0010E2                     u111:
   334   0010E2  EF59  F008         	goto	l945
   335   0010E6                     u110:
   336   0010E6  0012               	return		;funcret
   337   0010E8                     __end_of_LCD_Message:
   338                           	callstack 0
   339                           
   340 ;; *************** function _strlen *****************
   341 ;; Defined at:
   342 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  s               1    0[COMRAM] PTR const unsigned char 
   345 ;;		 -> Rx_Text_1(17), 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  a               1    2[COMRAM] PTR const unsigned char 
   348 ;;		 -> Rx_Text_1(17), 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2    0[COMRAM] unsigned int 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        3 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_LCD_Message
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373   001192                     __ptext2:
   374                           	callstack 0
   375   001192                     _strlen:
   376                           	callstack 28
   377   001192  C014  F016         	movff	strlen@s,strlen@a
   378   001196  EFCE  F008         	goto	l913
   379   00119A                     l911:
   380   00119A  2A14               	incf	strlen@s^0,f,c
   381   00119C                     l913:
   382   00119C  5014               	movf	strlen@s^0,w,c
   383   00119E  6ED9               	movwf	fsr2l,c
   384   0011A0  6ADA               	clrf	fsr2h,c
   385   0011A2  50DF               	movf	indf2,w,c
   386   0011A4  A4D8               	btfss	status,2,c
   387   0011A6  EFD7  F008         	goto	u101
   388   0011AA  EFD9  F008         	goto	u100
   389   0011AE                     u101:
   390   0011AE  EFCD  F008         	goto	l911
   391   0011B2                     u100:
   392   0011B2  5016               	movf	strlen@a^0,w,c
   393   0011B4  5C14               	subwf	strlen@s^0,w,c
   394   0011B6  6E14               	movwf	?_strlen^0,c
   395   0011B8  6A15               	clrf	(?_strlen+1)^0,c
   396   0011BA  BE14               	btfsc	?_strlen^0,7,c
   397   0011BC  0615               	decf	(?_strlen+1)^0,f,c
   398   0011BE  0012               	return		;funcret
   399   0011C0                     __end_of_strlen:
   400                           	callstack 0
   401                           
   402 ;; *************** function _Init_LCD *****************
   403 ;; Defined at:
   404 ;;		line 132 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;Total ram usage:        2 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; Hardware stack levels required when called: 3
   425 ;; This function calls:
   426 ;;		_Send_Instruction_Data
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text3
   433   001002                     __ptext3:
   434                           	callstack 0
   435   001002                     _Init_LCD:
   436                           	callstack 27
   437   001002                     
   438                           ;main.c: 134:     _delay((unsigned long)((20)*(16000000/4000.0)));
   439   001002  0E68               	movlw	104
   440   001004  6E18               	movwf	??_Init_LCD^0,c
   441   001006  0EE4               	movlw	228
   442   001008                     u127:
   443   001008  2EE8               	decfsz	wreg,f,c
   444   00100A  D7FE               	bra	u127
   445   00100C  2E18               	decfsz	??_Init_LCD^0,f,c
   446   00100E  D7FC               	bra	u127
   447   001010  D000               	nop2	
   448   001012                     
   449                           ;main.c: 135:     Send_Instruction_Data(0, 0x30);
   450   001012  0E30               	movlw	48
   451   001014  6E16               	movwf	Send_Instruction_Data@Data^0,c
   452   001016  0E00               	movlw	0
   453   001018  ECE0  F008         	call	_Send_Instruction_Data
   454   00101C                     
   455                           ;main.c: 136:     _delay((unsigned long)((5)*(16000000/4000.0)));
   456   00101C  0E1A               	movlw	26
   457   00101E  6E18               	movwf	??_Init_LCD^0,c
   458   001020  0EF8               	movlw	248
   459   001022                     u137:
   460   001022  2EE8               	decfsz	wreg,f,c
   461   001024  D7FE               	bra	u137
   462   001026  2E18               	decfsz	??_Init_LCD^0,f,c
   463   001028  D7FC               	bra	u137
   464   00102A  D000               	nop2	
   465                           
   466                           ;main.c: 137:     Send_Instruction_Data(0, 0x30);
   467   00102C  0E30               	movlw	48
   468   00102E  6E16               	movwf	Send_Instruction_Data@Data^0,c
   469   001030  0E00               	movlw	0
   470   001032  ECE0  F008         	call	_Send_Instruction_Data
   471   001036                     
   472                           ;main.c: 138:     _delay((unsigned long)((5)*(16000000/4000.0)));
   473   001036  0E1A               	movlw	26
   474   001038  6E18               	movwf	??_Init_LCD^0,c
   475   00103A  0EF8               	movlw	248
   476   00103C                     u147:
   477   00103C  2EE8               	decfsz	wreg,f,c
   478   00103E  D7FE               	bra	u147
   479   001040  2E18               	decfsz	??_Init_LCD^0,f,c
   480   001042  D7FC               	bra	u147
   481   001044  D000               	nop2	
   482   001046                     
   483                           ;main.c: 139:     Send_Instruction_Data(0, 0x30);
   484   001046  0E30               	movlw	48
   485   001048  6E16               	movwf	Send_Instruction_Data@Data^0,c
   486   00104A  0E00               	movlw	0
   487   00104C  ECE0  F008         	call	_Send_Instruction_Data
   488   001050                     
   489                           ;main.c: 140:     Send_Instruction_Data(0, 0x02);
   490   001050  0E02               	movlw	2
   491   001052  6E16               	movwf	Send_Instruction_Data@Data^0,c
   492   001054  0E00               	movlw	0
   493   001056  ECE0  F008         	call	_Send_Instruction_Data
   494   00105A                     
   495                           ;main.c: 141:     Send_Instruction_Data(0, 0x06);
   496   00105A  0E06               	movlw	6
   497   00105C  6E16               	movwf	Send_Instruction_Data@Data^0,c
   498   00105E  0E00               	movlw	0
   499   001060  ECE0  F008         	call	_Send_Instruction_Data
   500   001064                     
   501                           ;main.c: 142:     Send_Instruction_Data(0, 0x0F);
   502   001064  0E0F               	movlw	15
   503   001066  6E16               	movwf	Send_Instruction_Data@Data^0,c
   504   001068  0E00               	movlw	0
   505   00106A  ECE0  F008         	call	_Send_Instruction_Data
   506   00106E                     
   507                           ;main.c: 143:     Send_Instruction_Data(0, 0x28);
   508   00106E  0E28               	movlw	40
   509   001070  6E16               	movwf	Send_Instruction_Data@Data^0,c
   510   001072  0E00               	movlw	0
   511   001074  ECE0  F008         	call	_Send_Instruction_Data
   512   001078                     
   513                           ;main.c: 144:     Send_Instruction_Data(0, 0x01);
   514   001078  0E01               	movlw	1
   515   00107A  6E16               	movwf	Send_Instruction_Data@Data^0,c
   516   00107C  0E00               	movlw	0
   517   00107E  ECE0  F008         	call	_Send_Instruction_Data
   518   001082                     
   519                           ;main.c: 145:     _delay((unsigned long)((50)*(16000000/4000.0)));
   520   001082  0E02               	movlw	2
   521   001084  6E19               	movwf	(??_Init_LCD+1)^0,c
   522   001086  0E04               	movlw	4
   523   001088  6E18               	movwf	??_Init_LCD^0,c
   524   00108A  0EBA               	movlw	186
   525   00108C                     u157:
   526   00108C  2EE8               	decfsz	wreg,f,c
   527   00108E  D7FE               	bra	u157
   528   001090  2E18               	decfsz	??_Init_LCD^0,f,c
   529   001092  D7FC               	bra	u157
   530   001094  2E19               	decfsz	(??_Init_LCD+1)^0,f,c
   531   001096  D7FA               	bra	u157
   532   001098  D000               	nop2	
   533   00109A  0012               	return		;funcret
   534   00109C                     __end_of_Init_LCD:
   535                           	callstack 0
   536                           
   537 ;; *************** function _Send_Instruction_Data *****************
   538 ;; Defined at:
   539 ;;		line 151 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  Instruction     1    wreg     unsigned char 
   542 ;;  Data            1    2[COMRAM] unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  Instruction     1    3[COMRAM] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 2
   561 ;; This function calls:
   562 ;;		_LCD_Instruction
   563 ;; This function is called by:
   564 ;;		_Init_LCD
   565 ;;		_LCD_Message
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text4
   570   0011C0                     __ptext4:
   571                           	callstack 0
   572   0011C0                     _Send_Instruction_Data:
   573                           	callstack 27
   574                           
   575                           ;incstack = 0
   576                           ;Send_Instruction_Data@Instruction stored from wreg
   577   0011C0  6E17               	movwf	Send_Instruction_Data@Instruction^0,c
   578   0011C2                     
   579                           ;main.c: 153:     LATCbits.LATC4 = Instruction;
   580   0011C2  B017               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   581   0011C4  D002               	bra	u95
   582   0011C6  988B               	bcf	139,4,c	;volatile
   583   0011C8  D001               	bra	u96
   584   0011CA                     u95:
   585   0011CA  888B               	bsf	139,4,c	;volatile
   586   0011CC                     u96:
   587   0011CC                     
   588                           ;main.c: 154:     LCD_Instruction(Data >> 4);
   589   0011CC  3816               	swapf	Send_Instruction_Data@Data^0,w,c
   590   0011CE  0B0F               	andlw	15
   591   0011D0  EC93  F008         	call	_LCD_Instruction
   592   0011D4                     
   593                           ;main.c: 155:     LCD_Instruction(Data);
   594   0011D4  5016               	movf	Send_Instruction_Data@Data^0,w,c
   595   0011D6  EC93  F008         	call	_LCD_Instruction
   596   0011DA  0012               	return		;funcret
   597   0011DC                     __end_of_Send_Instruction_Data:
   598                           	callstack 0
   599                           
   600 ;; *************** function _LCD_Instruction *****************
   601 ;; Defined at:
   602 ;;		line 161 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  Instruction     1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  Instruction     1    1[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_Send_Instruction_Data
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text5
   631   001126                     __ptext5:
   632                           	callstack 0
   633   001126                     _LCD_Instruction:
   634                           	callstack 27
   635                           
   636                           ;incstack = 0
   637                           ;LCD_Instruction@Instruction stored from wreg
   638   001126  6E15               	movwf	LCD_Instruction@Instruction^0,c
   639   001128                     
   640                           ;main.c: 163:     LATCbits.LATC5 = 1;
   641   001128  8A8B               	bsf	139,5,c	;volatile
   642   00112A                     
   643                           ;main.c: 164:     _delay((unsigned long)((15)*(16000000/4000.0)));
   644   00112A  0E4E               	movlw	78
   645   00112C  6E14               	movwf	??_LCD_Instruction^0,c
   646   00112E  0EEB               	movlw	235
   647   001130                     u167:
   648   001130  2EE8               	decfsz	wreg,f,c
   649   001132  D7FE               	bra	u167
   650   001134  2E14               	decfsz	??_LCD_Instruction^0,f,c
   651   001136  D7FC               	bra	u167
   652   001138  0000               	nop	
   653   00113A                     
   654                           ;main.c: 165:     LATD = Instruction;
   655   00113A  C015  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   656   00113E                     
   657                           ;main.c: 166:     _delay((unsigned long)((15)*(16000000/4000.0)));
   658   00113E  0E4E               	movlw	78
   659   001140  6E14               	movwf	??_LCD_Instruction^0,c
   660   001142  0EEB               	movlw	235
   661   001144                     u177:
   662   001144  2EE8               	decfsz	wreg,f,c
   663   001146  D7FE               	bra	u177
   664   001148  2E14               	decfsz	??_LCD_Instruction^0,f,c
   665   00114A  D7FC               	bra	u177
   666   00114C  0000               	nop	
   667   00114E                     
   668                           ;main.c: 167:     LATCbits.LATC5 = 0;
   669   00114E  9A8B               	bcf	139,5,c	;volatile
   670   001150                     
   671                           ;main.c: 168:     _delay((unsigned long)((15)*(16000000/4000.0)));
   672   001150  0E4E               	movlw	78
   673   001152  6E14               	movwf	??_LCD_Instruction^0,c
   674   001154  0EEB               	movlw	235
   675   001156                     u187:
   676   001156  2EE8               	decfsz	wreg,f,c
   677   001158  D7FE               	bra	u187
   678   00115A  2E14               	decfsz	??_LCD_Instruction^0,f,c
   679   00115C  D7FC               	bra	u187
   680   00115E  0000               	nop	
   681   001160  0012               	return		;funcret
   682   001162                     __end_of_LCD_Instruction:
   683                           	callstack 0
   684                           
   685 ;; *************** function _Configurations *****************
   686 ;; Defined at:
   687 ;;		line 62 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text6
   716   0010E8                     __ptext6:
   717                           	callstack 0
   718   0010E8                     _Configurations:
   719                           	callstack 29
   720   0010E8                     
   721                           ;main.c: 64:     OSCCON = 0x72;
   722   0010E8  0E72               	movlw	114
   723   0010EA  6ED3               	movwf	211,c	;volatile
   724                           
   725                           ;main.c: 67:     ANSELC = 0x00;
   726   0010EC  0E00               	movlw	0
   727   0010EE  010F               	movlb	15	; () banked
   728   0010F0  6F3A               	movwf	58,b	;volatile
   729                           
   730                           ;main.c: 68:     ANSELD = 0x00;
   731   0010F2  0E00               	movlw	0
   732   0010F4  6F3B               	movwf	59,b	;volatile
   733   0010F6                     
   734                           ; BSR set to: 15
   735                           ;main.c: 70:     TRISCbits.RC4 = 0;
   736   0010F6  9894               	bcf	148,4,c	;volatile
   737   0010F8                     
   738                           ; BSR set to: 15
   739                           ;main.c: 71:     TRISCbits.RC5 = 0;
   740   0010F8  9A94               	bcf	148,5,c	;volatile
   741                           
   742                           ;main.c: 72:     TRISD = 0x00;
   743   0010FA  0E00               	movlw	0
   744   0010FC  6E95               	movwf	149,c	;volatile
   745   0010FE                     
   746                           ; BSR set to: 15
   747                           ;main.c: 75:     LATCbits.LC4 = 0;
   748   0010FE  988B               	bcf	139,4,c	;volatile
   749   001100                     
   750                           ; BSR set to: 15
   751                           ;main.c: 76:     LATCbits.LC5 = 0;
   752   001100  9A8B               	bcf	139,5,c	;volatile
   753   001102                     
   754                           ; BSR set to: 15
   755                           ;main.c: 79:     INTCONbits.GIE = 1;
   756   001102  8EF2               	bsf	242,7,c	;volatile
   757   001104                     
   758                           ; BSR set to: 15
   759                           ;main.c: 80:     INTCONbits.PEIE = 1;
   760   001104  8CF2               	bsf	242,6,c	;volatile
   761   001106                     
   762                           ; BSR set to: 15
   763                           ;main.c: 81:     RCONbits.IPEN = 0;
   764   001106  9ED0               	bcf	208,7,c	;volatile
   765   001108                     
   766                           ; BSR set to: 15
   767                           ;main.c: 83:     PIE1bits.RC1IE = 1;
   768   001108  8A9D               	bsf	157,5,c	;volatile
   769   00110A                     
   770                           ; BSR set to: 15
   771                           ;main.c: 84:     PIR1bits.RC1IF = 0;
   772   00110A  9A9E               	bcf	158,5,c	;volatile
   773                           
   774                           ;main.c: 87:     SPBRG = 103;
   775   00110C  0E67               	movlw	103
   776   00110E  6EAF               	movwf	175,c	;volatile
   777   001110                     
   778                           ; BSR set to: 15
   779                           ;main.c: 88:     TRISCbits.RC6 = 1;
   780   001110  8C94               	bsf	148,6,c	;volatile
   781   001112                     
   782                           ; BSR set to: 15
   783                           ;main.c: 89:     TRISCbits.RC7 = 1;
   784   001112  8E94               	bsf	148,7,c	;volatile
   785   001114                     
   786                           ; BSR set to: 15
   787                           ;main.c: 92:     TXSTA1bits.TX91 = 0;
   788   001114  9CAC               	bcf	172,6,c	;volatile
   789   001116                     
   790                           ; BSR set to: 15
   791                           ;main.c: 93:     TXSTA1bits.TXEN1 = 1;
   792   001116  8AAC               	bsf	172,5,c	;volatile
   793   001118                     
   794                           ; BSR set to: 15
   795                           ;main.c: 94:     TXSTA1bits.SYNC1 = 0;
   796   001118  98AC               	bcf	172,4,c	;volatile
   797   00111A                     
   798                           ; BSR set to: 15
   799                           ;main.c: 95:     TXSTA1bits.BRGH1 = 1;
   800   00111A  84AC               	bsf	172,2,c	;volatile
   801   00111C                     
   802                           ; BSR set to: 15
   803                           ;main.c: 98:     RCSTAbits.SPEN1 = 1;
   804   00111C  8EAB               	bsf	171,7,c	;volatile
   805   00111E                     
   806                           ; BSR set to: 15
   807                           ;main.c: 99:     RCSTAbits.RX91 = 0;
   808   00111E  9CAB               	bcf	171,6,c	;volatile
   809   001120                     
   810                           ; BSR set to: 15
   811                           ;main.c: 100:     RCSTAbits.CREN1 = 1;
   812   001120  88AB               	bsf	171,4,c	;volatile
   813   001122                     
   814                           ; BSR set to: 15
   815                           ;main.c: 103:     BAUDCON1bits.BRG16 = 0;
   816   001122  96B8               	bcf	184,3,c	;volatile
   817   001124                     
   818                           ; BSR set to: 15
   819   001124  0012               	return		;funcret
   820   001126                     __end_of_Configurations:
   821                           	callstack 0
   822                           
   823 ;; *************** function _RX_EUSART *****************
   824 ;; Defined at:
   825 ;;		line 116 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		Interrupt level 2
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	intcode
   853   000008                     __pintcode:
   854                           	callstack 0
   855   000008                     _RX_EUSART:
   856                           	callstack 27
   857                           
   858                           ; BSR set to: 15
   859                           ;incstack = 0
   860   000008  821D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   861   00000A                     
   862                           ;main.c: 118:     if (PIR1bits.RC1IF) {
   863   00000A  AA9E               	btfss	158,5,c	;volatile
   864   00000C  EF0A  F000         	goto	i2u4_41
   865   000010  EF0C  F000         	goto	i2u4_40
   866   000014                     i2u4_41:
   867   000014  EF17  F000         	goto	i2l76
   868   000018                     i2u4_40:
   869   000018                     
   870                           ;main.c: 122:         if (RCREG1 == 'A') {
   871   000018  0E41               	movlw	65
   872   00001A  18AE               	xorwf	174,w,c	;volatile
   873   00001C  A4D8               	btfss	status,2,c
   874   00001E  EF13  F000         	goto	i2u5_41
   875   000022  EF15  F000         	goto	i2u5_40
   876   000026                     i2u5_41:
   877   000026  EF17  F000         	goto	i2l76
   878   00002A                     i2u5_40:
   879   00002A                     
   880                           ;main.c: 124:             Rx_Counter++;
   881   00002A  4A1A               	infsnz	_Rx_Counter^0,f,c
   882   00002C  2A1B               	incf	(_Rx_Counter+1)^0,f,c
   883   00002E                     i2l76:
   884   00002E  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   885   000030  0011               	retfie		f
   886   000032                     __end_of_RX_EUSART:
   887                           	callstack 0
   888                           
   889                           	psect	smallconst
   890   001000                     __psmallconst:
   891                           	callstack 0
   892   001000  00                 	db	0
   893   001001  00                 	db	0	; dummy byte at the end
   894   000000                     
   895                           	psect	rparam
   896   000000                     
   897                           	psect	temp
   898   00001D                     btemp:
   899                           	callstack 0
   900   00001D                     	ds	1
   901   000000                     int$flags	set	btemp
   902   000000                     wtemp8	set	btemp+1
   903   000000                     ttemp5	set	btemp+1
   904   000000                     ttemp6	set	btemp+4
   905   000000                     ttemp7	set	btemp+8
   906                           
   907                           	psect	config
   908                           
   909                           ; Padding undefined space
   910   300000                     	org	3145728
   911   300000  FF                 	db	255
   912                           
   913                           ;Config register CONFIG1H @ 0x300001
   914                           ;	Oscillator Selection bits
   915                           ;	FOSC = INTIO67, Internal oscillator block
   916                           ;	4X PLL Enable
   917                           ;	PLLCFG = OFF, Oscillator used directly
   918                           ;	Primary clock enable bit
   919                           ;	PRICLKEN = ON, Primary clock is always enabled
   920                           ;	Fail-Safe Clock Monitor Enable bit
   921                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   922                           ;	Internal/External Oscillator Switchover bit
   923                           ;	IESO = OFF, Oscillator Switchover mode disabled
   924   300001                     	org	3145729
   925   300001  28                 	db	40
   926                           
   927                           ;Config register CONFIG2L @ 0x300002
   928                           ;	Power-up Timer Enable bit
   929                           ;	PWRTEN = OFF, Power up timer disabled
   930                           ;	Brown-out Reset Enable bits
   931                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   932                           ;	Brown Out Reset Voltage bits
   933                           ;	BORV = 190, VBOR set to 1.90 V nominal
   934   300002                     	org	3145730
   935   300002  1F                 	db	31
   936                           
   937                           ;Config register CONFIG2H @ 0x300003
   938                           ;	Watchdog Timer Enable bits
   939                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   940                           ;	Watchdog Timer Postscale Select bits
   941                           ;	WDTPS = 32768, 1:32768
   942   300003                     	org	3145731
   943   300003  3C                 	db	60
   944                           
   945                           ; Padding undefined space
   946   300004                     	org	3145732
   947   300004  FF                 	db	255
   948                           
   949                           ;Config register CONFIG3H @ 0x300005
   950                           ;	CCP2 MUX bit
   951                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   952                           ;	PORTB A/D Enable bit
   953                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   954                           ;	P3A/CCP3 Mux bit
   955                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   956                           ;	HFINTOSC Fast Start-up
   957                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   958                           ;	Timer3 Clock input mux bit
   959                           ;	T3CMX = PORTC0, T3CKI is on RC0
   960                           ;	ECCP2 B output mux bit
   961                           ;	P2BMX = PORTD2, P2B is on RD2
   962                           ;	MCLR Pin Enable bit
   963                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   964   300005                     	org	3145733
   965   300005  BF                 	db	191
   966                           
   967                           ;Config register CONFIG4L @ 0x300006
   968                           ;	Stack Full/Underflow Reset Enable bit
   969                           ;	STVREN = ON, Stack full/underflow will cause Reset
   970                           ;	Single-Supply ICSP Enable bit
   971                           ;	LVP = OFF, Single-Supply ICSP disabled
   972                           ;	Extended Instruction Set Enable bit
   973                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   974                           ;	Background Debug
   975                           ;	DEBUG = 0x1, unprogrammed default
   976   300006                     	org	3145734
   977   300006  81                 	db	129
   978                           
   979                           ; Padding undefined space
   980   300007                     	org	3145735
   981   300007  FF                 	db	255
   982                           
   983                           ;Config register CONFIG5L @ 0x300008
   984                           ;	Code Protection Block 0
   985                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   986                           ;	Code Protection Block 1
   987                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   988                           ;	Code Protection Block 2
   989                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   990                           ;	Code Protection Block 3
   991                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   992   300008                     	org	3145736
   993   300008  0F                 	db	15
   994                           
   995                           ;Config register CONFIG5H @ 0x300009
   996                           ;	Boot Block Code Protection bit
   997                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   998                           ;	Data EEPROM Code Protection bit
   999                           ;	CPD = OFF, Data EEPROM not code-protected
  1000   300009                     	org	3145737
  1001   300009  C0                 	db	192
  1002                           
  1003                           ;Config register CONFIG6L @ 0x30000A
  1004                           ;	Write Protection Block 0
  1005                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1006                           ;	Write Protection Block 1
  1007                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1008                           ;	Write Protection Block 2
  1009                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1010                           ;	Write Protection Block 3
  1011                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1012   30000A                     	org	3145738
  1013   30000A  0F                 	db	15
  1014                           
  1015                           ;Config register CONFIG6H @ 0x30000B
  1016                           ;	Configuration Register Write Protection bit
  1017                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1018                           ;	Boot Block Write Protection bit
  1019                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1020                           ;	Data EEPROM Write Protection bit
  1021                           ;	WRTD = OFF, Data EEPROM not write-protected
  1022   30000B                     	org	3145739
  1023   30000B  E0                 	db	224
  1024                           
  1025                           ;Config register CONFIG7L @ 0x30000C
  1026                           ;	Table Read Protection Block 0
  1027                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1028                           ;	Table Read Protection Block 1
  1029                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1030                           ;	Table Read Protection Block 2
  1031                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1032                           ;	Table Read Protection Block 3
  1033                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1034   30000C                     	org	3145740
  1035   30000C  0F                 	db	15
  1036                           
  1037                           ;Config register CONFIG7H @ 0x30000D
  1038                           ;	Boot Block Table Read Protection bit
  1039                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1040   30000D                     	org	3145741
  1041   30000D  40                 	db	64
  1042                           tosu	equ	0xFFF
  1043                           tosh	equ	0xFFE
  1044                           tosl	equ	0xFFD
  1045                           stkptr	equ	0xFFC
  1046                           pclatu	equ	0xFFB
  1047                           pclath	equ	0xFFA
  1048                           pcl	equ	0xFF9
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           indf0	equ	0xFEF
  1056                           postinc0	equ	0xFEE
  1057                           postdec0	equ	0xFED
  1058                           preinc0	equ	0xFEC
  1059                           plusw0	equ	0xFEB
  1060                           fsr0h	equ	0xFEA
  1061                           fsr0l	equ	0xFE9
  1062                           wreg	equ	0xFE8
  1063                           indf1	equ	0xFE7
  1064                           postinc1	equ	0xFE6
  1065                           postdec1	equ	0xFE5
  1066                           preinc1	equ	0xFE4
  1067                           plusw1	equ	0xFE3
  1068                           fsr1h	equ	0xFE2
  1069                           fsr1l	equ	0xFE1
  1070                           bsr	equ	0xFE0
  1071                           indf2	equ	0xFDF
  1072                           postinc2	equ	0xFDE
  1073                           postdec2	equ	0xFDD
  1074                           preinc2	equ	0xFDC
  1075                           plusw2	equ	0xFDB
  1076                           fsr2h	equ	0xFDA
  1077                           fsr2l	equ	0xFD9
  1078                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> Rx_Text_1(COMRAM[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> Rx_Text_1(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _main->_LCD_Message
    _LCD_Message->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _RX_EUSART in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _RX_EUSART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX_EUSART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX_EUSART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RX_EUSART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RX_EUSART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RX_EUSART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RX_EUSART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RX_EUSART in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _RX_EUSART in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _RX_EUSART in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _RX_EUSART in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _RX_EUSART in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _RX_EUSART in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _RX_EUSART in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _RX_EUSART in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _RX_EUSART in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1894
                     _Configurations
                           _Init_LCD
                        _LCD_Message
 ---------------------------------------------------------------------------------
 (1) _LCD_Message                                          2     2      0    1053
                                              4 COMRAM     2     2      0
              _Send_Instruction_Data
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     841
                                              4 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     841
                                              2 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RX_EUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _LCD_Message
     _Send_Instruction_Data
     _strlen

 _RX_EUSART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      1C       1       29.8%
BITBIGSFRlhll       4F      0       0      44        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      41        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      43        0.0%
BITBIGSFRlhhll       7      0       0      42        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      46        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 07 15:30:23 2024

                              l63 11E8                                l64 11E8                                l82 11DA  
                              l91 10E6                                l69 1124                                l85 1160  
                              l79 109A                                u95 11CA                                u96 11CC  
                    ?_LCD_Message 0014                               l821 1100                               l813 10E8  
                             l831 110A                               l823 1102                               l815 10F6  
                             l903 11C2                               l911 119A                               l841 1118  
                             l833 1110                               l825 1104                               l817 10F8  
                             l905 11CC                               l921 1012                               l913 119C  
                             l851 1122                               l843 111A                               l835 1112  
                             l827 1106                               l819 10FE                               l907 11D4  
                             l931 105A                               l923 101C                               l915 11B2  
                             l845 111C                               l837 1114                               l829 1108  
                             l933 1064                               l925 1036                               l909 1192  
                             l941 109C                               l847 111E                               l839 1116  
                             l791 113E                               l935 106E                               l927 1046  
                             l919 1002                               l783 11BE                               l943 10A6  
                             l951 11DC                               l849 1120                               l793 114E  
                             l785 1128                               l937 1078                               l929 1050  
                             l945 10B2                               l953 11E0                               l795 1150  
                             l787 112A                               l939 1082                               l947 10C4  
                             l955 11E4                               l789 113A                               l949 10C8  
                             u100 11B2                               u101 11AE                               u110 10E6  
                             u111 10E2                               u127 1008                               u137 1022  
                             u147 103C                               u157 108C                               u167 1130  
                             u177 1144                               u187 1156                               wreg 0FE8  
                      _TXSTA1bits 0FAC                              _LATD 0F8C                              i2l76 002E  
                            _main 11DC                              fsr2h 0FDA                              indf2 0FDF  
                            fsr1l 0FE1                              fsr2l 0FD9                              btemp 001D  
                            start 0032                      ___param_bank 0000                   _LCD_Instruction 1126  
Send_Instruction_Data@Instruction 0017                      _BAUDCON1bits 0FB8                             ?_main 0014  
                           i2l891 000A                             i2l893 0018                             i2l895 002A  
                           _SPBRG 0FAF                             _TRISD 0F95                             tablat 0FF5  
                           ttemp5 001E                             ttemp6 0021                             ttemp7 0025  
                           status 0FD8                             wtemp8 001E                   __initialization 1162  
                    __end_of_main 11F0                  __end_of_Init_LCD 109C                      LCD_Message@i 0018  
           _Send_Instruction_Data 11C0                            ??_main 001A                     __activetblptr 0000  
                          _ANSELC 0F3A                            _ANSELD 0F3B                            _RCREG1 0FAE  
      LCD_Instruction@Instruction 0015                            _OSCCON 0FD3                            i2u4_40 0018  
                          i2u4_41 0014                            i2u5_40 002A                            i2u5_41 0026  
                          _TXREG1 0FAD           __end_of_LCD_Instruction 1162                        _Rx_Counter 001A  
                          isa$std 0001                            _strlen 1192                      __pdataCOMRAM 0001  
                    __mediumconst 0000                            tblptrh 0FF7                            tblptrl 0FF6  
                          tblptru 0FF8                 __end_of_RX_EUSART 0032                        __accesstop 0060  
         __end_of__initialization 1188                     ___rparam_used 0001                    __pcstackCOMRAM 0014  
          ?_Send_Instruction_Data 0016                         ?_Init_LCD 0014                  ?_LCD_Instruction 0014  
                         ?_strlen 0014                        ??_Init_LCD 0018                           __Hparam 0000  
                         __Lparam 0000                      __psmallconst 1000                           __pcinit 1162  
                         __ramtop 1000                           __ptext0 11DC                           __ptext1 109C  
                         __ptext2 1192                           __ptext3 1002                           __ptext4 11C0  
                         __ptext5 1126                           __ptext6 10E8              end_of_initialization 1188  
                    _CountRX_Tens 0001                         _RCSTAbits 0FAB                           postdec1 0FE5  
                         postinc0 0FEE                           strlen@a 0016                           strlen@s 0014  
                       _TRISCbits 0F94                         _RX_EUSART 0008           ??_Send_Instruction_Data 0017  
                   __pidataCOMRAM 11F0                     ??_LCD_Message 0018                    __end_of_strlen 11C0  
             start_initialization 1162         Send_Instruction_Data@Data 0016                    _Configurations 10E8  
                      ?_RX_EUSART 0014                         _Rx_Buffer 001C                         _Rx_Text_1 0003  
                        ??_strlen 0016                       __pbssCOMRAM 001A            __end_of_Configurations 1126  
             __end_of_LCD_Message 10E8                         __pintcode 0008                       __smallconst 1000  
                 ?_Configurations 0014                       ??_RX_EUSART 0014                          _LATCbits 0F8B  
                        _PIE1bits 0F9D                          _PIR1bits 0F9E                          _RCONbits 0FD0  
                     _LCD_Message 109C                         copy_data0 1176                          _Init_LCD 1002  
                        __Hrparam 0000                          __Lrparam 0000     __end_of_Send_Instruction_Data 11DC  
               ??_LCD_Instruction 0014                          isa$xinst 0000                          int$flags 001D  
                      _INTCONbits 0FF2                          intlevel2 0000                     _CountRX_Units 0002  
                ??_Configurations 0014  
