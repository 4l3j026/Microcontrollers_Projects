

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 05 18:15:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 23/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   007F40                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _Bounce_Time
    56   007F40  0064               	dw	100
    57                           
    58                           ;initializer for _Time
    59   007F42  03E8               	dw	1000
    60   000000                     _PORTBbits	set	3969
    61   000000                     _LATBbits	set	3978
    62   000000                     _TRISBbits	set	3987
    63   000000                     _ADCON1	set	4033
    64   000000                     _OSCCON	set	4051
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   007F6A                     __pcinit:
    70                           	callstack 0
    71   007F6A                     start_initialization:
    72                           	callstack 0
    73   007F6A                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Initialize objects allocated to COMRAM (4 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78   007F6A  0E40               	movlw	low __pidataCOMRAM
    79   007F6C  6EF6               	movwf	tblptrl,c
    80   007F6E  0E7F               	movlw	high __pidataCOMRAM
    81   007F70  6EF7               	movwf	tblptrh,c
    82   007F72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    83   007F74  6EF8               	movwf	tblptru,c
    84   007F76  EE00  F001         	lfsr	0,__pdataCOMRAM
    85   007F7A  EE10 F004          	lfsr	1,4
    86   007F7E                     copy_data0:
    87   007F7E  0009               	tblrd		*+
    88   007F80  CFF5 FFEE          	movff	tablat,postinc0
    89   007F84  50E5               	movf	postdec1,w,c
    90   007F86  50E1               	movf	fsr1l,w,c
    91   007F88  E1FA               	bnz	copy_data0
    92   007F8A                     end_of_initialization:
    93                           	callstack 0
    94   007F8A                     __end_of__initialization:
    95                           	callstack 0
    96   007F8A  0100               	movlb	0
    97   007F8C  EFA2  F03F         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	dataCOMRAM
   100   000001                     __pdataCOMRAM:
   101                           	callstack 0
   102   000001                     _Bounce_Time:
   103                           	callstack 0
   104   000001                     	ds	2
   105   000003                     _Time:
   106                           	callstack 0
   107   000003                     	ds	2
   108                           
   109                           	psect	cstackCOMRAM
   110   000005                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000005                     ??_Input_Test:
   113   000005                     
   114                           ; 1 bytes @ 0x0
   115   000005                     	ds	2
   116   000007                     
   117                           ; 1 bytes @ 0x2
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   120 ;;
   121 ;; *************** function _main *****************
   122 ;; Defined at:
   123 ;;		line 32 in file "main.c"
   124 ;; Parameters:    Size  Location     Type
   125 ;;		None
   126 ;; Auto vars:     Size  Location     Type
   127 ;;		None
   128 ;; Return value:  Size  Location     Type
   129 ;;                  1    wreg      void 
   130 ;; Registers used:
   131 ;;		wreg, status,2, status,0, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : 0/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   137 ;;      Params:         0       0       0       0       0       0       0       0       0
   138 ;;      Locals:         0       0       0       0       0       0       0       0       0
   139 ;;      Temps:          0       0       0       0       0       0       0       0       0
   140 ;;      Totals:         0       0       0       0       0       0       0       0       0
   141 ;;Total ram usage:        0 bytes
   142 ;; Hardware stack levels required when called: 1
   143 ;; This function calls:
   144 ;;		_Configurations
   145 ;;		_Input_Test
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           	psect	text0
   152   007F44                     __ptext0:
   153                           	callstack 0
   154   007F44                     _main:
   155                           	callstack 30
   156   007F44                     
   157                           ;main.c: 35:     Configurations();
   158   007F44  ECAA  F03F         	call	_Configurations	;wreg free
   159   007F48                     l743:
   160                           
   161                           ;main.c: 40:         Input_Test();
   162   007F48  ECC8  F03F         	call	_Input_Test	;wreg free
   163   007F4C  EFA4  F03F         	goto	l743
   164   007F50  EF00  F000         	goto	start
   165   007F54                     __end_of_main:
   166                           	callstack 0
   167                           
   168 ;; *************** function _Input_Test *****************
   169 ;; Defined at:
   170 ;;		line 71 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0       0       0       0       0
   187 ;;      Totals:         2       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        2 bytes
   189 ;; Hardware stack levels used: 1
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		_main
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text1
   198   007F90                     __ptext1:
   199                           	callstack 0
   200   007F90                     _Input_Test:
   201                           	callstack 30
   202   007F90                     
   203                           ;main.c: 73:     if (PORTBbits.RB0) {
   204   007F90  A081               	btfss	129,0,c	;volatile
   205   007F92  EFCD  F03F         	goto	u11
   206   007F96  EFCF  F03F         	goto	u10
   207   007F9A                     u11:
   208   007F9A  EFE9  F03F         	goto	l34
   209   007F9E                     u10:
   210   007F9E                     
   211                           ;main.c: 74:         _delay((unsigned long)((Bounce_Time)*(8000000/4000.0)));
   212   007F9E  0E02               	movlw	2
   213   007FA0  6E06               	movwf	(??_Input_Test+1)^0,c
   214   007FA2  0E04               	movlw	4
   215   007FA4  6E05               	movwf	??_Input_Test^0,c
   216   007FA6  0EBA               	movlw	186
   217   007FA8                     u397:
   218   007FA8  2EE8               	decfsz	wreg,f,c
   219   007FAA  D7FE               	bra	u397
   220   007FAC  2E05               	decfsz	??_Input_Test^0,f,c
   221   007FAE  D7FC               	bra	u397
   222   007FB0  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   223   007FB2  D7FA               	bra	u397
   224   007FB4  D000               	nop2	
   225   007FB6                     
   226                           ;main.c: 75:         LATBbits.LB2 ^= 1;
   227   007FB6  748A               	btg	138,2,c	;volatile
   228   007FB8                     l733:
   229                           
   230                           ;main.c: 76:         _delay((unsigned long)((Time)*(8000000/4000.0)));
   231   007FB8  0E0B               	movlw	11
   232   007FBA  6E06               	movwf	(??_Input_Test+1)^0,c
   233   007FBC  0E26               	movlw	38
   234   007FBE  6E05               	movwf	??_Input_Test^0,c
   235   007FC0  0E5E               	movlw	94
   236   007FC2                     u407:
   237   007FC2  2EE8               	decfsz	wreg,f,c
   238   007FC4  D7FE               	bra	u407
   239   007FC6  2E05               	decfsz	??_Input_Test^0,f,c
   240   007FC8  D7FC               	bra	u407
   241   007FCA  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   242   007FCC  D7FA               	bra	u407
   243                           
   244                           ;main.c: 78:     } else if (!PORTBbits.RB1) {
   245   007FCE  EFFF  F03F         	goto	l37
   246   007FD2                     l34:
   247   007FD2  B281               	btfsc	129,1,c	;volatile
   248   007FD4  EFEE  F03F         	goto	u21
   249   007FD8  EFF0  F03F         	goto	u20
   250   007FDC                     u21:
   251   007FDC  EFFF  F03F         	goto	l37
   252   007FE0                     u20:
   253   007FE0                     
   254                           ;main.c: 79:         _delay((unsigned long)((Bounce_Time)*(8000000/4000.0)));
   255   007FE0  0E02               	movlw	2
   256   007FE2  6E06               	movwf	(??_Input_Test+1)^0,c
   257   007FE4  0E04               	movlw	4
   258   007FE6  6E05               	movwf	??_Input_Test^0,c
   259   007FE8  0EBA               	movlw	186
   260   007FEA                     u417:
   261   007FEA  2EE8               	decfsz	wreg,f,c
   262   007FEC  D7FE               	bra	u417
   263   007FEE  2E05               	decfsz	??_Input_Test^0,f,c
   264   007FF0  D7FC               	bra	u417
   265   007FF2  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   266   007FF4  D7FA               	bra	u417
   267   007FF6  D000               	nop2	
   268   007FF8                     
   269                           ;main.c: 80:         LATBbits.LATB3 ^= 1;
   270   007FF8  768A               	btg	138,3,c	;volatile
   271   007FFA  EFDC  F03F         	goto	l733
   272   007FFE                     l37:
   273   007FFE  0012               	return		;funcret
   274   008000                     __end_of_Input_Test:
   275                           	callstack 0
   276                           
   277 ;; *************** function _Configurations *****************
   278 ;; Defined at:
   279 ;;		line 49 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used: 1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text2
   307   007F54                     __ptext2:
   308                           	callstack 0
   309   007F54                     _Configurations:
   310                           	callstack 30
   311   007F54                     
   312                           ;main.c: 52:     OSCCON = 0x72;
   313   007F54  0E72               	movlw	114
   314   007F56  6ED3               	movwf	211,c	;volatile
   315                           
   316                           ;main.c: 54:     ADCON1 = 0x0F;
   317   007F58  0E0F               	movlw	15
   318   007F5A  6EC1               	movwf	193,c	;volatile
   319   007F5C                     
   320                           ;main.c: 57:     TRISBbits.RB0 = 1;
   321   007F5C  8093               	bsf	147,0,c	;volatile
   322   007F5E                     
   323                           ;main.c: 58:     TRISBbits.RB1 = 1;
   324   007F5E  8293               	bsf	147,1,c	;volatile
   325   007F60                     
   326                           ;main.c: 60:     TRISBbits.RB2 = 0;
   327   007F60  9493               	bcf	147,2,c	;volatile
   328   007F62                     
   329                           ;main.c: 61:     TRISBbits.RB3 = 0;
   330   007F62  9693               	bcf	147,3,c	;volatile
   331   007F64                     
   332                           ;main.c: 64:     LATBbits.LB2 = 0;
   333   007F64  948A               	bcf	138,2,c	;volatile
   334   007F66                     
   335                           ;main.c: 65:     LATBbits.LB3 = 0;
   336   007F66  968A               	bcf	138,3,c	;volatile
   337   007F68  0012               	return		;funcret
   338   007F6A                     __end_of_Configurations:
   339                           	callstack 0
   340   000000                     
   341                           	psect	rparam
   342   000000                     
   343                           	psect	config
   344                           
   345                           ;Config register CONFIG1L @ 0x300000
   346                           ;	PLL Prescaler Selection bits
   347                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   348                           ;	System Clock Postscaler Selection bits
   349                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   350                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   351                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   352   300000                     	org	3145728
   353   300000  00                 	db	0
   354                           
   355                           ;Config register CONFIG1H @ 0x300001
   356                           ;	Oscillator Selection bits
   357                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   358                           ;	Fail-Safe Clock Monitor Enable bit
   359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   360                           ;	Internal/External Oscillator Switchover bit
   361                           ;	IESO = OFF, Oscillator Switchover mode disabled
   362   300001                     	org	3145729
   363   300001  0B                 	db	11
   364                           
   365                           ;Config register CONFIG2L @ 0x300002
   366                           ;	Power-up Timer Enable bit
   367                           ;	PWRT = OFF, PWRT disabled
   368                           ;	Brown-out Reset Enable bits
   369                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   370                           ;	Brown-out Reset Voltage bits
   371                           ;	BORV = 3, Minimum setting 2.05V
   372                           ;	USB Voltage Regulator Enable bit
   373                           ;	VREGEN = OFF, USB voltage regulator disabled
   374   300002                     	org	3145730
   375   300002  1F                 	db	31
   376                           
   377                           ;Config register CONFIG2H @ 0x300003
   378                           ;	Watchdog Timer Enable bit
   379                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   380                           ;	Watchdog Timer Postscale Select bits
   381                           ;	WDTPS = 32768, 1:32768
   382   300003                     	org	3145731
   383   300003  1E                 	db	30
   384                           
   385                           ; Padding undefined space
   386   300004                     	org	3145732
   387   300004  FF                 	db	255
   388                           
   389                           ;Config register CONFIG3H @ 0x300005
   390                           ;	CCP2 MUX bit
   391                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   392                           ;	PORTB A/D Enable bit
   393                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   394                           ;	Low-Power Timer 1 Oscillator Enable bit
   395                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   396                           ;	MCLR Pin Enable bit
   397                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   398   300005                     	org	3145733
   399   300005  83                 	db	131
   400                           
   401                           ;Config register CONFIG4L @ 0x300006
   402                           ;	Stack Full/Underflow Reset Enable bit
   403                           ;	STVREN = ON, Stack full/underflow will cause Reset
   404                           ;	Single-Supply ICSP Enable bit
   405                           ;	LVP = OFF, Single-Supply ICSP disabled
   406                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   407                           ;	ICPRT = OFF, ICPORT disabled
   408                           ;	Extended Instruction Set Enable bit
   409                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   410                           ;	Background Debugger Enable bit
   411                           ;	DEBUG = 0x1, unprogrammed default
   412   300006                     	org	3145734
   413   300006  81                 	db	129
   414                           
   415                           ; Padding undefined space
   416   300007                     	org	3145735
   417   300007  FF                 	db	255
   418                           
   419                           ;Config register CONFIG5L @ 0x300008
   420                           ;	Code Protection bit
   421                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   422                           ;	Code Protection bit
   423                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   424                           ;	Code Protection bit
   425                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   426                           ;	Code Protection bit
   427                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   428   300008                     	org	3145736
   429   300008  0F                 	db	15
   430                           
   431                           ;Config register CONFIG5H @ 0x300009
   432                           ;	Boot Block Code Protection bit
   433                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   434                           ;	Data EEPROM Code Protection bit
   435                           ;	CPD = OFF, Data EEPROM is not code-protected
   436   300009                     	org	3145737
   437   300009  C0                 	db	192
   438                           
   439                           ;Config register CONFIG6L @ 0x30000A
   440                           ;	Write Protection bit
   441                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   442                           ;	Write Protection bit
   443                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   444                           ;	Write Protection bit
   445                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   446                           ;	Write Protection bit
   447                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   448   30000A                     	org	3145738
   449   30000A  0F                 	db	15
   450                           
   451                           ;Config register CONFIG6H @ 0x30000B
   452                           ;	Configuration Register Write Protection bit
   453                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   454                           ;	Boot Block Write Protection bit
   455                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   456                           ;	Data EEPROM Write Protection bit
   457                           ;	WRTD = OFF, Data EEPROM is not write-protected
   458   30000B                     	org	3145739
   459   30000B  E0                 	db	224
   460                           
   461                           ;Config register CONFIG7L @ 0x30000C
   462                           ;	Table Read Protection bit
   463                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   464                           ;	Table Read Protection bit
   465                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   466                           ;	Table Read Protection bit
   467                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   468                           ;	Table Read Protection bit
   469                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   470   30000C                     	org	3145740
   471   30000C  0F                 	db	15
   472                           
   473                           ;Config register CONFIG7H @ 0x30000D
   474                           ;	Boot Block Table Read Protection bit
   475                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   476   30000D                     	org	3145741
   477   30000D  40                 	db	64
   478                           tosu	equ	0xFFF
   479                           tosh	equ	0xFFE
   480                           tosl	equ	0xFFD
   481                           stkptr	equ	0xFFC
   482                           pclatu	equ	0xFFB
   483                           pclath	equ	0xFFA
   484                           pcl	equ	0xFF9
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           prodh	equ	0xFF4
   490                           prodl	equ	0xFF3
   491                           indf0	equ	0xFEF
   492                           postinc0	equ	0xFEE
   493                           postdec0	equ	0xFED
   494                           preinc0	equ	0xFEC
   495                           plusw0	equ	0xFEB
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           wreg	equ	0xFE8
   499                           indf1	equ	0xFE7
   500                           postinc1	equ	0xFE6
   501                           postdec1	equ	0xFE5
   502                           preinc1	equ	0xFE4
   503                           plusw1	equ	0xFE3
   504                           fsr1h	equ	0xFE2
   505                           fsr1l	equ	0xFE1
   506                           bsr	equ	0xFE0
   507                           indf2	equ	0xFDF
   508                           postinc2	equ	0xFDE
   509                           postdec2	equ	0xFDD
   510                           preinc2	equ	0xFDC
   511                           plusw2	equ	0xFDB
   512                           fsr2h	equ	0xFDA
   513                           fsr2l	equ	0xFD9
   514                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Input_Test

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
                         _Input_Test
 ---------------------------------------------------------------------------------
 (1) _Input_Test                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Input_Test

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRllh        2D      0       0      23        0.0%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRlllll      21      0       0      26        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BITBIGSFRllllh       8      0       0      25        0.0%
BITBIGSFRlllh        8      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       3        0.0%
DATA                 0      0       6       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 05 18:15:37 2023

                     l31 7F68                       l34 7FD2                       l37 7FFE  
                     u10 7F9E                       u11 7F9A                       u20 7FE0  
                     u21 7FDC                      l721 7F62                      l713 7F54  
                    l723 7F64                      l715 7F5C                      l731 7FB6  
                    l725 7F66                      l717 7F5E                      l733 7FB8  
                    l741 7F44                      l719 7F60                      l735 7FE0  
                    l727 7F90                      l743 7F48                      l737 7FF8  
                    l729 7F9E                      u407 7FC2                      u417 7FEA  
                    u397 7FA8                      wreg 0FE8                     _Time 0003  
                   _main 7F44                     fsr1l 0FE1                     start 0000  
           ___param_bank 0000                    ?_main 0005                    tablat 0FF5  
        __initialization 7F6A             __end_of_main 7F54                   ??_main 0007  
          __activetblptr 0000               _Input_Test 7F90                   _ADCON1 0FC1  
                 _OSCCON 0FD3              _Bounce_Time 0001                   isa$std 0001  
           __pdataCOMRAM 0001                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 7F8A  
          ___rparam_used 0001           __pcstackCOMRAM 0005              ?_Input_Test 0005  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F6A  
                __ramtop 0800                  __ptext0 7F44                  __ptext1 7F90  
                __ptext2 7F54     end_of_initialization 7F8A                  postdec1 0FE5  
                postinc0 0FEE                _PORTBbits 0F81                _TRISBbits 0F93  
          __pidataCOMRAM 7F40             ??_Input_Test 0005      start_initialization 7F6A  
         _Configurations 7F54       __end_of_Input_Test 8000   __end_of_Configurations 7F6A  
        ?_Configurations 0005                 _LATBbits 0F8A                copy_data0 7F7E  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
       ??_Configurations 0005  
