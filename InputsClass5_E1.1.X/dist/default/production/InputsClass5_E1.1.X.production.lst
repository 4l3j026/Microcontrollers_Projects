

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 09 14:18:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 23/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   007EE8                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _Bounce_Time
    56   007EE8  0064               	dw	100
    57                           
    58                           ;initializer for _Time
    59   007EEA  01F4               	dw	500
    60   000000                     _PORTBbits	set	3969
    61   000000                     _LATBbits	set	3978
    62   000000                     _TRISBbits	set	3987
    63   000000                     _ADCON1	set	4033
    64   000000                     _OSCCON	set	4051
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   007F12                     __pcinit:
    70                           	callstack 0
    71   007F12                     start_initialization:
    72                           	callstack 0
    73   007F12                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Initialize objects allocated to COMRAM (4 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78   007F12  0EE8               	movlw	low __pidataCOMRAM
    79   007F14  6EF6               	movwf	tblptrl,c
    80   007F16  0E7E               	movlw	high __pidataCOMRAM
    81   007F18  6EF7               	movwf	tblptrh,c
    82   007F1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    83   007F1C  6EF8               	movwf	tblptru,c
    84   007F1E  EE00  F001         	lfsr	0,__pdataCOMRAM
    85   007F22  EE10 F004          	lfsr	1,4
    86   007F26                     copy_data0:
    87   007F26  0009               	tblrd		*+
    88   007F28  CFF5 FFEE          	movff	tablat,postinc0
    89   007F2C  50E5               	movf	postdec1,w,c
    90   007F2E  50E1               	movf	fsr1l,w,c
    91   007F30  E1FA               	bnz	copy_data0
    92   007F32                     end_of_initialization:
    93                           	callstack 0
    94   007F32                     __end_of__initialization:
    95                           	callstack 0
    96   007F32  0100               	movlb	0
    97   007F34  EF76  F03F         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	dataCOMRAM
   100   000001                     __pdataCOMRAM:
   101                           	callstack 0
   102   000001                     _Bounce_Time:
   103                           	callstack 0
   104   000001                     	ds	2
   105   000003                     _Time:
   106                           	callstack 0
   107   000003                     	ds	2
   108                           
   109                           	psect	cstackCOMRAM
   110   000005                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000005                     ??_Input_Test:
   113   000005                     
   114                           ; 1 bytes @ 0x0
   115   000005                     	ds	2
   116   000007                     
   117                           ; 1 bytes @ 0x2
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   120 ;;
   121 ;; *************** function _main *****************
   122 ;; Defined at:
   123 ;;		line 32 in file "main.c"
   124 ;; Parameters:    Size  Location     Type
   125 ;;		None
   126 ;; Auto vars:     Size  Location     Type
   127 ;;		None
   128 ;; Return value:  Size  Location     Type
   129 ;;                  1    wreg      void 
   130 ;; Registers used:
   131 ;;		wreg, status,2, status,0, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : 0/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   137 ;;      Params:         0       0       0       0       0       0       0       0       0
   138 ;;      Locals:         0       0       0       0       0       0       0       0       0
   139 ;;      Temps:          0       0       0       0       0       0       0       0       0
   140 ;;      Totals:         0       0       0       0       0       0       0       0       0
   141 ;;Total ram usage:        0 bytes
   142 ;; Hardware stack levels required when called: 1
   143 ;; This function calls:
   144 ;;		_Configurations
   145 ;;		_Input_Test
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           	psect	text0
   152   007EEC                     __ptext0:
   153                           	callstack 0
   154   007EEC                     _main:
   155                           	callstack 30
   156   007EEC                     
   157                           ;main.c: 35:     Configurations();
   158   007EEC  EC7E  F03F         	call	_Configurations	;wreg free
   159   007EF0                     l762:
   160                           
   161                           ;main.c: 40:         Input_Test();
   162   007EF0  EC9C  F03F         	call	_Input_Test	;wreg free
   163   007EF4  EF78  F03F         	goto	l762
   164   007EF8  EF00  F000         	goto	start
   165   007EFC                     __end_of_main:
   166                           	callstack 0
   167                           
   168 ;; *************** function _Input_Test *****************
   169 ;; Defined at:
   170 ;;		line 71 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0       0       0       0       0
   187 ;;      Totals:         2       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        2 bytes
   189 ;; Hardware stack levels used: 1
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		_main
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text1
   198   007F38                     __ptext1:
   199                           	callstack 0
   200   007F38                     _Input_Test:
   201                           	callstack 30
   202   007F38                     
   203                           ;main.c: 73:     if (PORTBbits.RB0) {
   204   007F38  A081               	btfss	129,0,c	;volatile
   205   007F3A  EFA1  F03F         	goto	u11
   206   007F3E  EFA3  F03F         	goto	u10
   207   007F42                     u11:
   208   007F42  EFBD  F03F         	goto	l34
   209   007F46                     u10:
   210   007F46                     
   211                           ;main.c: 74:         _delay((unsigned long)((Bounce_Time)*(8000000/4000.0)));
   212   007F46  0E02               	movlw	2
   213   007F48  6E06               	movwf	(??_Input_Test+1)^0,c
   214   007F4A  0E04               	movlw	4
   215   007F4C  6E05               	movwf	??_Input_Test^0,c
   216   007F4E  0EBA               	movlw	186
   217   007F50                     u417:
   218   007F50  2EE8               	decfsz	wreg,f,c
   219   007F52  D7FE               	bra	u417
   220   007F54  2E05               	decfsz	??_Input_Test^0,f,c
   221   007F56  D7FC               	bra	u417
   222   007F58  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   223   007F5A  D7FA               	bra	u417
   224   007F5C  D000               	nop2	
   225   007F5E                     
   226                           ;main.c: 75:         LATBbits.LB2 ^= 1;
   227   007F5E  748A               	btg	138,2,c	;volatile
   228   007F60                     l738:
   229                           
   230                           ;main.c: 76:         _delay((unsigned long)((Time)*(8000000/4000.0)));
   231   007F60  0E06               	movlw	6
   232   007F62  6E06               	movwf	(??_Input_Test+1)^0,c
   233   007F64  0E13               	movlw	19
   234   007F66  6E05               	movwf	??_Input_Test^0,c
   235   007F68  0EAE               	movlw	174
   236   007F6A                     u427:
   237   007F6A  2EE8               	decfsz	wreg,f,c
   238   007F6C  D7FE               	bra	u427
   239   007F6E  2E05               	decfsz	??_Input_Test^0,f,c
   240   007F70  D7FC               	bra	u427
   241   007F72  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   242   007F74  D7FA               	bra	u427
   243                           
   244                           ;main.c: 78:     } else if (PORTBbits.RB1) {
   245   007F76  EFF1  F03F         	goto	l756
   246   007F7A                     l34:
   247   007F7A  A281               	btfss	129,1,c	;volatile
   248   007F7C  EFC2  F03F         	goto	u21
   249   007F80  EFC4  F03F         	goto	u20
   250   007F84                     u21:
   251   007F84  EFF1  F03F         	goto	l756
   252   007F88                     u20:
   253   007F88                     
   254                           ;main.c: 79:         _delay((unsigned long)((Bounce_Time)*(8000000/4000.0)));
   255   007F88  0E02               	movlw	2
   256   007F8A  6E06               	movwf	(??_Input_Test+1)^0,c
   257   007F8C  0E04               	movlw	4
   258   007F8E  6E05               	movwf	??_Input_Test^0,c
   259   007F90  0EBA               	movlw	186
   260   007F92                     u437:
   261   007F92  2EE8               	decfsz	wreg,f,c
   262   007F94  D7FE               	bra	u437
   263   007F96  2E05               	decfsz	??_Input_Test^0,f,c
   264   007F98  D7FC               	bra	u437
   265   007F9A  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   266   007F9C  D7FA               	bra	u437
   267   007F9E  D000               	nop2	
   268   007FA0                     
   269                           ;main.c: 80:         LATBbits.LATB3 ^= 1;
   270   007FA0  768A               	btg	138,3,c	;volatile
   271   007FA2  EFB0  F03F         	goto	l738
   272   007FA6                     l746:
   273                           
   274                           ;main.c: 86:         _delay((unsigned long)((Bounce_Time)*(8000000/4000.0)));
   275   007FA6  0E02               	movlw	2
   276   007FA8  6E06               	movwf	(??_Input_Test+1)^0,c
   277   007FAA  0E04               	movlw	4
   278   007FAC  6E05               	movwf	??_Input_Test^0,c
   279   007FAE  0EBA               	movlw	186
   280   007FB0                     u447:
   281   007FB0  2EE8               	decfsz	wreg,f,c
   282   007FB2  D7FE               	bra	u447
   283   007FB4  2E05               	decfsz	??_Input_Test^0,f,c
   284   007FB6  D7FC               	bra	u447
   285   007FB8  2E06               	decfsz	(??_Input_Test+1)^0,f,c
   286   007FBA  D7FA               	bra	u447
   287   007FBC  D000               	nop2	
   288   007FBE                     
   289                           ;main.c: 87:         LATBbits.LB2 = 1;
   290   007FBE  848A               	bsf	138,2,c	;volatile
   291   007FC0                     
   292                           ;main.c: 88:         LATBbits.LB3 = 1;
   293   007FC0  868A               	bsf	138,3,c	;volatile
   294                           
   295                           ;main.c: 89:         _delay((unsigned long)((80)*(8000000/4000.0)));
   296   007FC2  0ED0               	movlw	208
   297   007FC4  6E05               	movwf	??_Input_Test^0,c
   298   007FC6  0ECA               	movlw	202
   299   007FC8                     u457:
   300   007FC8  2EE8               	decfsz	wreg,f,c
   301   007FCA  D7FE               	bra	u457
   302   007FCC  2E05               	decfsz	??_Input_Test^0,f,c
   303   007FCE  D7FC               	bra	u457
   304   007FD0                     
   305                           ;main.c: 90:         LATBbits.LB2 = 0;
   306   007FD0  948A               	bcf	138,2,c	;volatile
   307   007FD2                     
   308                           ;main.c: 91:         LATBbits.LATB3 = 0;
   309   007FD2  968A               	bcf	138,3,c	;volatile
   310                           
   311                           ;main.c: 92:         _delay((unsigned long)((80)*(8000000/4000.0)));
   312   007FD4  0ED0               	movlw	208
   313   007FD6  6E05               	movwf	??_Input_Test^0,c
   314   007FD8  0ECA               	movlw	202
   315   007FDA                     u467:
   316   007FDA  2EE8               	decfsz	wreg,f,c
   317   007FDC  D7FE               	bra	u467
   318   007FDE  2E05               	decfsz	??_Input_Test^0,f,c
   319   007FE0  D7FC               	bra	u467
   320   007FE2                     l756:
   321                           
   322                           ;main.c: 85:     while (PORTBbits.RB0 == 1 && PORTBbits.RB1 ==1){
   323   007FE2  A081               	btfss	129,0,c	;volatile
   324   007FE4  EFF6  F03F         	goto	u31
   325   007FE8  EFF8  F03F         	goto	u30
   326   007FEC                     u31:
   327   007FEC  EFFF  F03F         	goto	l42
   328   007FF0                     u30:
   329   007FF0  B281               	btfsc	129,1,c	;volatile
   330   007FF2  EFFD  F03F         	goto	u41
   331   007FF6  EFFF  F03F         	goto	u40
   332   007FFA                     u41:
   333   007FFA  EFD3  F03F         	goto	l746
   334   007FFE                     u40:
   335   007FFE                     l42:
   336   007FFE  0012               	return		;funcret
   337   008000                     __end_of_Input_Test:
   338                           	callstack 0
   339                           
   340 ;; *************** function _Configurations *****************
   341 ;; Defined at:
   342 ;;		line 49 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   356 ;;      Params:         0       0       0       0       0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text2
   370   007EFC                     __ptext2:
   371                           	callstack 0
   372   007EFC                     _Configurations:
   373                           	callstack 30
   374   007EFC                     
   375                           ;main.c: 52:     OSCCON = 0x72;
   376   007EFC  0E72               	movlw	114
   377   007EFE  6ED3               	movwf	211,c	;volatile
   378                           
   379                           ;main.c: 54:     ADCON1 = 0x0F;
   380   007F00  0E0F               	movlw	15
   381   007F02  6EC1               	movwf	193,c	;volatile
   382   007F04                     
   383                           ;main.c: 57:     TRISBbits.RB0 = 1;
   384   007F04  8093               	bsf	147,0,c	;volatile
   385   007F06                     
   386                           ;main.c: 58:     TRISBbits.RB1 = 1;
   387   007F06  8293               	bsf	147,1,c	;volatile
   388   007F08                     
   389                           ;main.c: 60:     TRISBbits.RB2 = 0;
   390   007F08  9493               	bcf	147,2,c	;volatile
   391   007F0A                     
   392                           ;main.c: 61:     TRISBbits.RB3 = 0;
   393   007F0A  9693               	bcf	147,3,c	;volatile
   394   007F0C                     
   395                           ;main.c: 64:     LATBbits.LB2 = 0;
   396   007F0C  948A               	bcf	138,2,c	;volatile
   397   007F0E                     
   398                           ;main.c: 65:     LATBbits.LB3 = 0;
   399   007F0E  968A               	bcf	138,3,c	;volatile
   400   007F10  0012               	return		;funcret
   401   007F12                     __end_of_Configurations:
   402                           	callstack 0
   403   000000                     
   404                           	psect	rparam
   405   000000                     
   406                           	psect	config
   407                           
   408                           ;Config register CONFIG1L @ 0x300000
   409                           ;	PLL Prescaler Selection bits
   410                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   411                           ;	System Clock Postscaler Selection bits
   412                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   413                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   414                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   415   300000                     	org	3145728
   416   300000  00                 	db	0
   417                           
   418                           ;Config register CONFIG1H @ 0x300001
   419                           ;	Oscillator Selection bits
   420                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   421                           ;	Fail-Safe Clock Monitor Enable bit
   422                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   423                           ;	Internal/External Oscillator Switchover bit
   424                           ;	IESO = OFF, Oscillator Switchover mode disabled
   425   300001                     	org	3145729
   426   300001  0B                 	db	11
   427                           
   428                           ;Config register CONFIG2L @ 0x300002
   429                           ;	Power-up Timer Enable bit
   430                           ;	PWRT = OFF, PWRT disabled
   431                           ;	Brown-out Reset Enable bits
   432                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   433                           ;	Brown-out Reset Voltage bits
   434                           ;	BORV = 3, Minimum setting 2.05V
   435                           ;	USB Voltage Regulator Enable bit
   436                           ;	VREGEN = OFF, USB voltage regulator disabled
   437   300002                     	org	3145730
   438   300002  1F                 	db	31
   439                           
   440                           ;Config register CONFIG2H @ 0x300003
   441                           ;	Watchdog Timer Enable bit
   442                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   443                           ;	Watchdog Timer Postscale Select bits
   444                           ;	WDTPS = 32768, 1:32768
   445   300003                     	org	3145731
   446   300003  1E                 	db	30
   447                           
   448                           ; Padding undefined space
   449   300004                     	org	3145732
   450   300004  FF                 	db	255
   451                           
   452                           ;Config register CONFIG3H @ 0x300005
   453                           ;	CCP2 MUX bit
   454                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   455                           ;	PORTB A/D Enable bit
   456                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   457                           ;	Low-Power Timer 1 Oscillator Enable bit
   458                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   459                           ;	MCLR Pin Enable bit
   460                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   461   300005                     	org	3145733
   462   300005  83                 	db	131
   463                           
   464                           ;Config register CONFIG4L @ 0x300006
   465                           ;	Stack Full/Underflow Reset Enable bit
   466                           ;	STVREN = ON, Stack full/underflow will cause Reset
   467                           ;	Single-Supply ICSP Enable bit
   468                           ;	LVP = OFF, Single-Supply ICSP disabled
   469                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   470                           ;	ICPRT = OFF, ICPORT disabled
   471                           ;	Extended Instruction Set Enable bit
   472                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   473                           ;	Background Debugger Enable bit
   474                           ;	DEBUG = 0x1, unprogrammed default
   475   300006                     	org	3145734
   476   300006  81                 	db	129
   477                           
   478                           ; Padding undefined space
   479   300007                     	org	3145735
   480   300007  FF                 	db	255
   481                           
   482                           ;Config register CONFIG5L @ 0x300008
   483                           ;	Code Protection bit
   484                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   485                           ;	Code Protection bit
   486                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   487                           ;	Code Protection bit
   488                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   489                           ;	Code Protection bit
   490                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   491   300008                     	org	3145736
   492   300008  0F                 	db	15
   493                           
   494                           ;Config register CONFIG5H @ 0x300009
   495                           ;	Boot Block Code Protection bit
   496                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   497                           ;	Data EEPROM Code Protection bit
   498                           ;	CPD = OFF, Data EEPROM is not code-protected
   499   300009                     	org	3145737
   500   300009  C0                 	db	192
   501                           
   502                           ;Config register CONFIG6L @ 0x30000A
   503                           ;	Write Protection bit
   504                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   505                           ;	Write Protection bit
   506                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   507                           ;	Write Protection bit
   508                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   509                           ;	Write Protection bit
   510                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   511   30000A                     	org	3145738
   512   30000A  0F                 	db	15
   513                           
   514                           ;Config register CONFIG6H @ 0x30000B
   515                           ;	Configuration Register Write Protection bit
   516                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   517                           ;	Boot Block Write Protection bit
   518                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   519                           ;	Data EEPROM Write Protection bit
   520                           ;	WRTD = OFF, Data EEPROM is not write-protected
   521   30000B                     	org	3145739
   522   30000B  E0                 	db	224
   523                           
   524                           ;Config register CONFIG7L @ 0x30000C
   525                           ;	Table Read Protection bit
   526                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   527                           ;	Table Read Protection bit
   528                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   529                           ;	Table Read Protection bit
   530                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   531                           ;	Table Read Protection bit
   532                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   533   30000C                     	org	3145740
   534   30000C  0F                 	db	15
   535                           
   536                           ;Config register CONFIG7H @ 0x30000D
   537                           ;	Boot Block Table Read Protection bit
   538                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   539   30000D                     	org	3145741
   540   30000D  40                 	db	64
   541                           tosu	equ	0xFFF
   542                           tosh	equ	0xFFE
   543                           tosl	equ	0xFFD
   544                           stkptr	equ	0xFFC
   545                           pclatu	equ	0xFFB
   546                           pclath	equ	0xFFA
   547                           pcl	equ	0xFF9
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           prodh	equ	0xFF4
   553                           prodl	equ	0xFF3
   554                           indf0	equ	0xFEF
   555                           postinc0	equ	0xFEE
   556                           postdec0	equ	0xFED
   557                           preinc0	equ	0xFEC
   558                           plusw0	equ	0xFEB
   559                           fsr0h	equ	0xFEA
   560                           fsr0l	equ	0xFE9
   561                           wreg	equ	0xFE8
   562                           indf1	equ	0xFE7
   563                           postinc1	equ	0xFE6
   564                           postdec1	equ	0xFE5
   565                           preinc1	equ	0xFE4
   566                           plusw1	equ	0xFE3
   567                           fsr1h	equ	0xFE2
   568                           fsr1l	equ	0xFE1
   569                           bsr	equ	0xFE0
   570                           indf2	equ	0xFDF
   571                           postinc2	equ	0xFDE
   572                           postdec2	equ	0xFDD
   573                           preinc2	equ	0xFDC
   574                           plusw2	equ	0xFDB
   575                           fsr2h	equ	0xFDA
   576                           fsr2l	equ	0xFD9
   577                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Input_Test

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
                         _Input_Test
 ---------------------------------------------------------------------------------
 (1) _Input_Test                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Input_Test

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRllh        2D      0       0      23        0.0%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRlllll      21      0       0      26        0.0%
BITBIGSFRlh         11      0       0      22        0.0%
BITBIGSFRllllh       8      0       0      25        0.0%
BITBIGSFRlllh        8      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       3        0.0%
DATA                 0      0       6       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 09 14:18:18 2023

                     l31 7F10                       l42 7FFE                       l34 7F7A  
                     u10 7F46                       u11 7F42                       u20 7F88  
                     u21 7F84                       u30 7FF0                       u31 7FEC  
                     u40 7FFE                       u41 7FFA                      l720 7F04  
                    l730 7F0E                      l722 7F06                      l724 7F08  
                    l740 7F88                      l732 7F38                      l726 7F0A  
                    l718 7EFC                      l750 7FC0                      l742 7FA0  
                    l734 7F46                      l728 7F0C                      l752 7FD0  
                    l736 7F5E                      l760 7EEC                      l754 7FD2  
                    l746 7FA6                      l738 7F60                      l762 7EF0  
                    l748 7FBE                      l756 7FE2                      l758 7FF0  
                    u417 7F50                      u427 7F6A                      u437 7F92  
                    u447 7FB0                      u457 7FC8                      u467 7FDA  
                    wreg 0FE8                     _Time 0003                     _main 7EEC  
                   fsr1l 0FE1                     start 0000             ___param_bank 0000  
                  ?_main 0005                    tablat 0FF5          __initialization 7F12  
           __end_of_main 7EFC                   ??_main 0007            __activetblptr 0000  
             _Input_Test 7F38                   _ADCON1 0FC1                   _OSCCON 0FD3  
            _Bounce_Time 0001                   isa$std 0001             __pdataCOMRAM 0001  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7F32            ___rparam_used 0001  
         __pcstackCOMRAM 0005              ?_Input_Test 0005                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F12                  __ramtop 0800  
                __ptext0 7EEC                  __ptext1 7F38                  __ptext2 7EFC  
   end_of_initialization 7F32                  postdec1 0FE5                  postinc0 0FEE  
              _PORTBbits 0F81                _TRISBbits 0F93            __pidataCOMRAM 7EE8  
           ??_Input_Test 0005      start_initialization 7F12           _Configurations 7EFC  
     __end_of_Input_Test 8000   __end_of_Configurations 7F12          ?_Configurations 0005  
               _LATBbits 0F8A                copy_data0 7F26                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000         ??_Configurations 0005  
