

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 21 00:55:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0001F4                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _Text2
    64   0001F4  49                 	db	73
    65   0001F5  20                 	db	32
    66   0001F6  66                 	db	102
    67   0001F7  61                 	db	97
    68   0001F8  6C                 	db	108
    69   0001F9  6C                 	db	108
    70   0001FA  20                 	db	32
    71   0001FB  69                 	db	105
    72   0001FC  6E                 	db	110
    73   0001FD  20                 	db	32
    74   0001FE  79                 	db	121
    75   0001FF  6F                 	db	111
    76   000200  75                 	db	117
    77   000201  21                 	db	33
    78   000202  00                 	db	0
    79   000203  00                 	db	0
    80                           
    81                           ;initializer for _Text1
    82   000204  4D                 	db	77
    83   000205  79                 	db	121
    84   000206  20                 	db	32
    85   000207  50                 	db	80
    86   000208  61                 	db	97
    87   000209  6E                 	db	110
    88   00020A  64                 	db	100
    89   00020B  69                 	db	105
    90   00020C  74                 	db	116
    91   00020D  61                 	db	97
    92   00020E  21                 	db	33
    93   00020F  00                 	db	0
    94   000210  00                 	db	0
    95   000211  00                 	db	0
    96   000212  00                 	db	0
    97   000213  00                 	db	0
    98   000000                     _INT0IF	set	32657
    99   000000                     _LATE1	set	31849
   100   000000                     _LATD	set	3980
   101   000000                     _TRISBbits	set	3987
   102   000000                     _ADCON1	set	4033
   103   000000                     _OSCCON	set	4051
   104   000000                     _LATE0	set	31848
   105   000000                     _INTCON2bits	set	4081
   106   000000                     _INTCONbits	set	4082
   107   000000                     _RCONbits	set	4048
   108   000000                     _TRISD	set	3989
   109   000000                     _TRISE	set	3990
   110                           
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114   0001CA                     __pcinit:
   115                           	callstack 0
   116   0001CA                     start_initialization:
   117                           	callstack 0
   118   0001CA                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (32 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123   0001CA  0EF4               	movlw	low __pidataCOMRAM
   124   0001CC  6EF6               	movwf	tblptrl,c
   125   0001CE  0E01               	movlw	high __pidataCOMRAM
   126   0001D0  6EF7               	movwf	tblptrh,c
   127   0001D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128   0001D4  6EF8               	movwf	tblptru,c
   129   0001D6  EE00  F001         	lfsr	0,__pdataCOMRAM
   130   0001DA  EE10 F020          	lfsr	1,32
   131   0001DE                     copy_data0:
   132   0001DE  0009               	tblrd		*+
   133   0001E0  CFF5 FFEE          	movff	tablat,postinc0
   134   0001E4  50E5               	movf	postdec1,w,c
   135   0001E6  50E1               	movf	fsr1l,w,c
   136   0001E8  E1FA               	bnz	copy_data0
   137   0001EA                     end_of_initialization:
   138                           	callstack 0
   139   0001EA                     __end_of__initialization:
   140                           	callstack 0
   141   0001EA  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142   0001EC  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143   0001EE  0100               	movlb	0
   144   0001F0  EF0A  F001         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	dataCOMRAM
   147   000001                     __pdataCOMRAM:
   148                           	callstack 0
   149   000001                     _Text2:
   150                           	callstack 0
   151   000001                     	ds	16
   152   000011                     _Text1:
   153                           	callstack 0
   154   000011                     	ds	16
   155                           
   156                           	psect	cstackCOMRAM
   157   000021                     __pcstackCOMRAM:
   158                           	callstack 0
   159   000021                     ??i2_Instruction_LCD:
   160   000021                     ?_strlen:
   161                           	callstack 0
   162   000021                     strlen@s:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166   000021                     	ds	1
   167   000022                     i2Instruction_LCD@Data:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x1
   171   000022                     	ds	1
   172   000023                     Write_LCD_Enable@Data_Write:
   173                           	callstack 0
   174   000023                     i2Set_LCD_Enable@Instruction:
   175                           	callstack 0
   176   000023                     strlen@a:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x2
   180   000023                     	ds	2
   181   000025                     ??_INT:
   182                           
   183                           ; 1 bytes @ 0x4
   184   000025                     	ds	4
   185   000029                     INT@i:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x8
   189   000029                     	ds	1
   190   00002A                     INT@i_324:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x9
   194   00002A                     	ds	1
   195   00002B                     ??_Instruction_LCD:
   196                           
   197                           ; 1 bytes @ 0xA
   198   00002B                     	ds	1
   199   00002C                     Instruction_LCD@Data:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xB
   203   00002C                     	ds	1
   204   00002D                     Set_LCD_Enable@Instruction:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xC
   208   00002D                     	ds	1
   209   00002E                     
   210                           ; 1 bytes @ 0xD
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 44 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called: 6
   236 ;; This function calls:
   237 ;;		_Configuration
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244   000214                     __ptext0:
   245                           	callstack 0
   246   000214                     _main:
   247                           	callstack 25
   248   000214                     
   249                           ;main.c: 47:     Configuration();
   250   000214  ECCD  F000         	call	_Configuration	;wreg free
   251   000218                     l43:
   252   000218  EF0C  F001         	goto	l43
   253   00021C  EF07  F000         	goto	start
   254   000220                     __end_of_main:
   255                           	callstack 0
   256                           
   257 ;; *************** function _Configuration *****************
   258 ;; Defined at:
   259 ;;		line 60 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         0       0       0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; Hardware stack levels required when called: 5
   280 ;; This function calls:
   281 ;;		_Set_LCD_Enable
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288   00019A                     __ptext1:
   289                           	callstack 0
   290   00019A                     _Configuration:
   291                           	callstack 25
   292   00019A                     
   293                           ;main.c: 62:     OSCCON = 0x72;
   294   00019A  0E72               	movlw	114
   295   00019C  6ED3               	movwf	211,c	;volatile
   296                           
   297                           ;main.c: 63:     ADCON1 = 0x0F;
   298   00019E  0E0F               	movlw	15
   299   0001A0  6EC1               	movwf	193,c	;volatile
   300   0001A2                     
   301                           ;main.c: 65:     TRISBbits.RB0 = 1;
   302   0001A2  8093               	bsf	147,0,c	;volatile
   303                           
   304                           ;main.c: 66:     TRISD = 0x00;
   305   0001A4  0E00               	movlw	0
   306   0001A6  6E95               	movwf	149,c	;volatile
   307                           
   308                           ;main.c: 67:     TRISE = 0x00;
   309   0001A8  0E00               	movlw	0
   310   0001AA  6E96               	movwf	150,c	;volatile
   311   0001AC                     
   312                           ;main.c: 70:     RCONbits.IPEN = 0;
   313   0001AC  9ED0               	bcf	208,7,c	;volatile
   314   0001AE                     
   315                           ;main.c: 71:     INTCONbits.GIE = 1;
   316   0001AE  8EF2               	bsf	242,7,c	;volatile
   317   0001B0                     
   318                           ;main.c: 72:     INTCONbits.INT0E = 1;
   319   0001B0  88F2               	bsf	242,4,c	;volatile
   320   0001B2                     
   321                           ;main.c: 73:     INTCONbits.INT0F = 0;
   322   0001B2  92F2               	bcf	242,1,c	;volatile
   323   0001B4                     
   324                           ;main.c: 74:     INTCON2bits.INTEDG0 = 0;
   325   0001B4  9CF1               	bcf	241,6,c	;volatile
   326   0001B6                     
   327                           ;main.c: 77:     Set_LCD_Enable(0x06);
   328   0001B6  0E06               	movlw	6
   329   0001B8  EC10  F001         	call	_Set_LCD_Enable
   330   0001BC                     
   331                           ;main.c: 78:     Set_LCD_Enable(0x0F);
   332   0001BC  0E0F               	movlw	15
   333   0001BE  EC10  F001         	call	_Set_LCD_Enable
   334   0001C2                     
   335                           ;main.c: 79:     Set_LCD_Enable(0x38);
   336   0001C2  0E38               	movlw	56
   337   0001C4  EC10  F001         	call	_Set_LCD_Enable
   338   0001C8  0012               	return		;funcret
   339   0001CA                     __end_of_Configuration:
   340                           	callstack 0
   341                           
   342 ;; *************** function _Set_LCD_Enable *****************
   343 ;; Defined at:
   344 ;;		line 85 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  Instruction     1    wreg     unsigned char 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  Instruction     1   12[COMRAM] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   358 ;;      Params:         0       0       0       0       0       0       0       0       0
   359 ;;      Locals:         1       0       0       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0
   361 ;;      Totals:         1       0       0       0       0       0       0       0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 4
   365 ;; This function calls:
   366 ;;		_Instruction_LCD
   367 ;; This function is called by:
   368 ;;		_Configuration
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373   000220                     __ptext2:
   374                           	callstack 0
   375   000220                     _Set_LCD_Enable:
   376                           	callstack 25
   377                           
   378                           ;incstack = 0
   379                           ;Set_LCD_Enable@Instruction stored from wreg
   380   000220  6E2D               	movwf	Set_LCD_Enable@Instruction^0,c
   381   000222                     
   382                           ;main.c: 87:     LATE0 = 0;
   383   000222  908D               	bcf	3981,0,c	;volatile
   384   000224                     
   385                           ;main.c: 88:     Instruction_LCD(Instruction);
   386   000224  502D               	movf	Set_LCD_Enable@Instruction^0,w,c
   387   000226  EC66  F000         	call	_Instruction_LCD
   388   00022A  0012               	return		;funcret
   389   00022C                     __end_of_Set_LCD_Enable:
   390                           	callstack 0
   391                           
   392 ;; *************** function _Instruction_LCD *****************
   393 ;; Defined at:
   394 ;;		line 101 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;  Data            1    wreg     unsigned char 
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  Data            1   11[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         0       0       0       0       0       0       0       0       0
   409 ;;      Locals:         1       0       0       0       0       0       0       0       0
   410 ;;      Temps:          1       0       0       0       0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; Hardware stack levels required when called: 3
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_Set_LCD_Enable
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text3
   423   0000CC                     __ptext3:
   424                           	callstack 0
   425   0000CC                     _Instruction_LCD:
   426                           	callstack 25
   427                           
   428                           ;incstack = 0
   429                           ;Instruction_LCD@Data stored from wreg
   430   0000CC  6E2C               	movwf	Instruction_LCD@Data^0,c
   431   0000CE                     
   432                           ;main.c: 103:     _delay((unsigned long)((15)*(8000000/4000.0)));
   433   0000CE  0E27               	movlw	39
   434   0000D0  6E2B               	movwf	??_Instruction_LCD^0,c
   435   0000D2  0EF5               	movlw	245
   436   0000D4                     u97:
   437   0000D4  2EE8               	decfsz	wreg,f,c
   438   0000D6  D7FE               	bra	u97
   439   0000D8  2E2B               	decfsz	??_Instruction_LCD^0,f,c
   440   0000DA  D7FC               	bra	u97
   441   0000DC  F000               	nop	
   442   0000DE                     
   443                           ;main.c: 104:     LATE1 = 1;
   444   0000DE  828D               	bsf	3981,1,c	;volatile
   445                           
   446                           ;main.c: 105:     _delay((unsigned long)((15)*(8000000/4000.0)));
   447   0000E0  0E27               	movlw	39
   448   0000E2  6E2B               	movwf	??_Instruction_LCD^0,c
   449   0000E4  0EF5               	movlw	245
   450   0000E6                     u107:
   451   0000E6  2EE8               	decfsz	wreg,f,c
   452   0000E8  D7FE               	bra	u107
   453   0000EA  2E2B               	decfsz	??_Instruction_LCD^0,f,c
   454   0000EC  D7FC               	bra	u107
   455   0000EE  F000               	nop	
   456   0000F0                     
   457                           ;main.c: 106:     LATD = Data;
   458   0000F0  C02C  FF8C         	movff	Instruction_LCD@Data,3980	;volatile
   459   0000F4                     
   460                           ;main.c: 107:     _delay((unsigned long)((10)*(8000000/4000.0)));
   461   0000F4  0E1A               	movlw	26
   462   0000F6  6E2B               	movwf	??_Instruction_LCD^0,c
   463   0000F8  0EF8               	movlw	248
   464   0000FA                     u117:
   465   0000FA  2EE8               	decfsz	wreg,f,c
   466   0000FC  D7FE               	bra	u117
   467   0000FE  2E2B               	decfsz	??_Instruction_LCD^0,f,c
   468   000100  D7FC               	bra	u117
   469   000102  D000               	nop2	
   470   000104                     
   471                           ;main.c: 108:     LATE1 = 0;
   472   000104  928D               	bcf	3981,1,c	;volatile
   473   000106                     
   474                           ;main.c: 109:     _delay((unsigned long)((10)*(8000000/4000.0)));
   475   000106  0E1A               	movlw	26
   476   000108  6E2B               	movwf	??_Instruction_LCD^0,c
   477   00010A  0EF8               	movlw	248
   478   00010C                     u127:
   479   00010C  2EE8               	decfsz	wreg,f,c
   480   00010E  D7FE               	bra	u127
   481   000110  2E2B               	decfsz	??_Instruction_LCD^0,f,c
   482   000112  D7FC               	bra	u127
   483   000114  D000               	nop2	
   484   000116  0012               	return		;funcret
   485   000118                     __end_of_Instruction_LCD:
   486                           	callstack 0
   487                           
   488 ;; *************** function _INT *****************
   489 ;; Defined at:
   490 ;;		line 115 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  i               1    9[COMRAM] unsigned char 
   495 ;;  i               1    8[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   505 ;;      Params:         0       0       0       0       0       0       0       0       0
   506 ;;      Locals:         2       0       0       0       0       0       0       0       0
   507 ;;      Temps:          4       0       0       0       0       0       0       0       0
   508 ;;      Totals:         6       0       0       0       0       0       0       0       0
   509 ;;Total ram usage:        6 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 2
   512 ;; This function calls:
   513 ;;		_Write_LCD_Enable
   514 ;;		_strlen
   515 ;;		i2_Set_LCD_Enable
   516 ;; This function is called by:
   517 ;;		Interrupt level 2
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	intcode
   522   000008                     __pintcode:
   523                           	callstack 0
   524   000008                     _INT:
   525                           	callstack 25
   526                           
   527                           ;incstack = 0
   528   000008  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   529   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   530                           
   531                           	psect	intcode_body
   532   000012                     __pintcode_body:
   533                           	callstack 25
   534   000012                     int_func:
   535                           	callstack 25
   536   000012  0006               	pop		; remove dummy address from shadow register refresh
   537   000014  CFD9 F027          	movff	fsr2l,??_INT+2
   538   000018  CFDA F028          	movff	fsr2h,??_INT+3
   539   00001C                     
   540                           ;main.c: 117:     if (INT0IF) {
   541   00001C  A2F2               	btfss	4082,1,c	;volatile
   542   00001E  EF13  F000         	goto	i2u6_41
   543   000022  EF15  F000         	goto	i2u6_40
   544   000026                     i2u6_41:
   545   000026  EF60  F000         	goto	i2l70
   546   00002A                     i2u6_40:
   547   00002A                     
   548                           ;main.c: 119:         INTCONbits.INT0IF = 0;
   549   00002A  92F2               	bcf	242,1,c	;volatile
   550   00002C                     
   551                           ;main.c: 121:         Set_LCD_Enable(0x80 + 4);
   552   00002C  0E84               	movlw	132
   553   00002E  EC16  F001         	call	i2_Set_LCD_Enable
   554   000032                     
   555                           ;main.c: 123:         for (unsigned char i = 0; i < strlen(Text1); i++) {
   556   000032  0E00               	movlw	0
   557   000034  6E29               	movwf	INT@i^0,c
   558   000036  EF27  F000         	goto	i2l886
   559   00003A                     i2l882:
   560                           
   561                           ;main.c: 125:             Write_LCD_Enable(Text1[i]);
   562   00003A  0E11               	movlw	low _Text1
   563   00003C  2429               	addwf	INT@i^0,w,c
   564   00003E  6ED9               	movwf	fsr2l,c
   565   000040  6ADA               	clrf	fsr2h,c
   566   000042  0E00               	movlw	high _Text1
   567   000044  22DA               	addwfc	fsr2h,f,c
   568   000046  50DF               	movf	indf2,w,c
   569   000048  EC1C  F001         	call	_Write_LCD_Enable
   570   00004C                     
   571                           ;main.c: 127:         }
   572   00004C  2A29               	incf	INT@i^0,f,c
   573   00004E                     i2l886:
   574   00004E  0E11               	movlw	low _Text1
   575   000050  6E21               	movwf	strlen@s^0,c
   576   000052  0E00               	movlw	high _Text1
   577   000054  6E22               	movwf	(strlen@s+1)^0,c
   578   000056  ECB2  F000         	call	_strlen	;wreg free
   579   00005A  5029               	movf	INT@i^0,w,c
   580   00005C  6E25               	movwf	??_INT^0,c
   581   00005E  6A26               	clrf	(??_INT+1)^0,c
   582   000060  5021               	movf	?_strlen^0,w,c
   583   000062  5C25               	subwf	??_INT^0,w,c
   584   000064  5022               	movf	(?_strlen+1)^0,w,c
   585   000066  5826               	subwfb	(??_INT+1)^0,w,c
   586   000068  A0D8               	btfss	status,0,c
   587   00006A  EF39  F000         	goto	i2u7_41
   588   00006E  EF3B  F000         	goto	i2u7_40
   589   000072                     i2u7_41:
   590   000072  EF1D  F000         	goto	i2l882
   591   000076                     i2u7_40:
   592   000076                     
   593                           ;main.c: 129:         Set_LCD_Enable(0xC0 + 1);
   594   000076  0EC1               	movlw	193
   595   000078  EC16  F001         	call	i2_Set_LCD_Enable
   596   00007C                     
   597                           ;main.c: 131:         for (unsigned char i = 0; i < strlen(Text2); i++) {
   598   00007C  0E00               	movlw	0
   599   00007E  6E2A               	movwf	INT@i_324^0,c
   600   000080  EF4C  F000         	goto	i2l896
   601   000084                     i2l892:
   602                           
   603                           ;main.c: 133:             Write_LCD_Enable(Text2[i]);
   604   000084  0E01               	movlw	low _Text2
   605   000086  242A               	addwf	INT@i_324^0,w,c
   606   000088  6ED9               	movwf	fsr2l,c
   607   00008A  6ADA               	clrf	fsr2h,c
   608   00008C  0E00               	movlw	high _Text2
   609   00008E  22DA               	addwfc	fsr2h,f,c
   610   000090  50DF               	movf	indf2,w,c
   611   000092  EC1C  F001         	call	_Write_LCD_Enable
   612   000096                     
   613                           ;main.c: 135:         }
   614   000096  2A2A               	incf	INT@i_324^0,f,c
   615   000098                     i2l896:
   616   000098  0E01               	movlw	low _Text2
   617   00009A  6E21               	movwf	strlen@s^0,c
   618   00009C  0E00               	movlw	high _Text2
   619   00009E  6E22               	movwf	(strlen@s+1)^0,c
   620   0000A0  ECB2  F000         	call	_strlen	;wreg free
   621   0000A4  502A               	movf	INT@i_324^0,w,c
   622   0000A6  6E25               	movwf	??_INT^0,c
   623   0000A8  6A26               	clrf	(??_INT+1)^0,c
   624   0000AA  5021               	movf	?_strlen^0,w,c
   625   0000AC  5C25               	subwf	??_INT^0,w,c
   626   0000AE  5022               	movf	(?_strlen+1)^0,w,c
   627   0000B0  5826               	subwfb	(??_INT+1)^0,w,c
   628   0000B2  A0D8               	btfss	status,0,c
   629   0000B4  EF5E  F000         	goto	i2u8_41
   630   0000B8  EF60  F000         	goto	i2u8_40
   631   0000BC                     i2u8_41:
   632   0000BC  EF42  F000         	goto	i2l892
   633   0000C0                     i2u8_40:
   634   0000C0                     i2l70:
   635   0000C0  C028  FFDA         	movff	??_INT+3,fsr2h
   636   0000C4  C027  FFD9         	movff	??_INT+2,fsr2l
   637   0000C8  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   638   0000CA  0011               	retfie		f
   639   0000CC                     __end_of_INT:
   640                           	callstack 0
   641                           
   642 ;; *************** function i2_Set_LCD_Enable *****************
   643 ;; Defined at:
   644 ;;		line 85 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  Instruction     1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  Instruction     1    2[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         1       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        1 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 1
   665 ;; This function calls:
   666 ;;		i2_Instruction_LCD
   667 ;; This function is called by:
   668 ;;		_INT
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text5
   673   00022C                     __ptext5:
   674                           	callstack 0
   675   00022C                     i2_Set_LCD_Enable:
   676                           	callstack 25
   677                           
   678                           ;incstack = 0
   679                           ;i2Set_LCD_Enable@Instruction stored from wreg
   680   00022C  6E23               	movwf	i2Set_LCD_Enable@Instruction^0,c
   681   00022E                     
   682                           ;main.c: 87:     LATE0 = 0;
   683   00022E  908D               	bcf	3981,0,c	;volatile
   684   000230                     
   685                           ;main.c: 88:     Instruction_LCD(Instruction);
   686   000230  5023               	movf	i2Set_LCD_Enable@Instruction^0,w,c
   687   000232  EC8C  F000         	call	i2_Instruction_LCD
   688   000236  0012               	return		;funcret
   689   000238                     __end_ofi2_Set_LCD_Enable:
   690                           	callstack 0
   691                           
   692 ;; *************** function _strlen *****************
   693 ;; Defined at:
   694 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  s               2    0[COMRAM] PTR const unsigned char 
   697 ;;		 -> Text2(16), Text1(16), 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  a               2    2[COMRAM] PTR const unsigned char 
   700 ;;		 -> Text2(16), Text1(16), 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2    0[COMRAM] unsigned int 
   703 ;; Registers used:
   704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         2       0       0       0       0       0       0       0       0
   711 ;;      Locals:         2       0       0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0
   713 ;;      Totals:         4       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        4 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_INT
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text6
   724   000164                     __ptext6:
   725                           	callstack 0
   726   000164                     _strlen:
   727                           	callstack 26
   728   000164  C021  F023         	movff	strlen@s,strlen@a
   729   000168  C022  F024         	movff	strlen@s+1,strlen@a+1
   730   00016C  EFBA  F000         	goto	i2l864
   731   000170                     i2l862:
   732   000170  4A21               	infsnz	strlen@s^0,f,c
   733   000172  2A22               	incf	(strlen@s+1)^0,f,c
   734   000174                     i2l864:
   735   000174  C021  FFD9         	movff	strlen@s,fsr2l
   736   000178  C022  FFDA         	movff	strlen@s+1,fsr2h
   737   00017C  50DF               	movf	indf2,w,c
   738   00017E  A4D8               	btfss	status,2,c
   739   000180  EFC4  F000         	goto	i2u5_41
   740   000184  EFC6  F000         	goto	i2u5_40
   741   000188                     i2u5_41:
   742   000188  EFB8  F000         	goto	i2l862
   743   00018C                     i2u5_40:
   744   00018C  5023               	movf	strlen@a^0,w,c
   745   00018E  5C21               	subwf	strlen@s^0,w,c
   746   000190  6E21               	movwf	?_strlen^0,c
   747   000192  5024               	movf	(strlen@a+1)^0,w,c
   748   000194  5822               	subwfb	(strlen@s+1)^0,w,c
   749   000196  6E22               	movwf	(?_strlen+1)^0,c
   750   000198  0012               	return		;funcret
   751   00019A                     __end_of_strlen:
   752                           	callstack 0
   753                           
   754 ;; *************** function _Write_LCD_Enable *****************
   755 ;; Defined at:
   756 ;;		line 94 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  Data_Write      1    wreg     unsigned char 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  Data_Write      1    2[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         1       0       0       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0
   773 ;;      Totals:         1       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        1 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 1
   777 ;; This function calls:
   778 ;;		i2_Instruction_LCD
   779 ;; This function is called by:
   780 ;;		_INT
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text7
   785   000238                     __ptext7:
   786                           	callstack 0
   787   000238                     _Write_LCD_Enable:
   788                           	callstack 25
   789                           
   790                           ;incstack = 0
   791                           ;Write_LCD_Enable@Data_Write stored from wreg
   792   000238  6E23               	movwf	Write_LCD_Enable@Data_Write^0,c
   793   00023A                     
   794                           ;main.c: 96:     LATE0 = 1;
   795   00023A  808D               	bsf	3981,0,c	;volatile
   796   00023C                     
   797                           ;main.c: 97:     Instruction_LCD(Data_Write);
   798   00023C  5023               	movf	Write_LCD_Enable@Data_Write^0,w,c
   799   00023E  EC8C  F000         	call	i2_Instruction_LCD
   800   000242  0012               	return		;funcret
   801   000244                     __end_of_Write_LCD_Enable:
   802                           	callstack 0
   803                           
   804 ;; *************** function i2_Instruction_LCD *****************
   805 ;; Defined at:
   806 ;;		line 101 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  Data            1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  Data            1    1[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0       0       0       0       0
   822 ;;      Temps:          1       0       0       0       0       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_Write_LCD_Enable
   830 ;;		i2_Set_LCD_Enable
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text8
   835   000118                     __ptext8:
   836                           	callstack 0
   837   000118                     i2_Instruction_LCD:
   838                           	callstack 25
   839                           
   840                           ;incstack = 0
   841                           ;i2Instruction_LCD@Data stored from wreg
   842   000118  6E22               	movwf	i2Instruction_LCD@Data^0,c
   843   00011A                     
   844                           ;main.c: 103:     _delay((unsigned long)((15)*(8000000/4000.0)));
   845   00011A  0E27               	movlw	39
   846   00011C  6E21               	movwf	??i2_Instruction_LCD^0,c
   847   00011E  0EF5               	movlw	245
   848   000120                     i2u13_47:
   849   000120  2EE8               	decfsz	wreg,f,c
   850   000122  D7FE               	bra	i2u13_47
   851   000124  2E21               	decfsz	??i2_Instruction_LCD^0,f,c
   852   000126  D7FC               	bra	i2u13_47
   853   000128  F000               	nop	
   854   00012A                     
   855                           ;main.c: 104:     LATE1 = 1;
   856   00012A  828D               	bsf	3981,1,c	;volatile
   857                           
   858                           ;main.c: 105:     _delay((unsigned long)((15)*(8000000/4000.0)));
   859   00012C  0E27               	movlw	39
   860   00012E  6E21               	movwf	??i2_Instruction_LCD^0,c
   861   000130  0EF5               	movlw	245
   862   000132                     i2u14_47:
   863   000132  2EE8               	decfsz	wreg,f,c
   864   000134  D7FE               	bra	i2u14_47
   865   000136  2E21               	decfsz	??i2_Instruction_LCD^0,f,c
   866   000138  D7FC               	bra	i2u14_47
   867   00013A  F000               	nop	
   868   00013C                     
   869                           ;main.c: 106:     LATD = Data;
   870   00013C  C022  FF8C         	movff	i2Instruction_LCD@Data,3980	;volatile
   871   000140                     
   872                           ;main.c: 107:     _delay((unsigned long)((10)*(8000000/4000.0)));
   873   000140  0E1A               	movlw	26
   874   000142  6E21               	movwf	??i2_Instruction_LCD^0,c
   875   000144  0EF8               	movlw	248
   876   000146                     i2u15_47:
   877   000146  2EE8               	decfsz	wreg,f,c
   878   000148  D7FE               	bra	i2u15_47
   879   00014A  2E21               	decfsz	??i2_Instruction_LCD^0,f,c
   880   00014C  D7FC               	bra	i2u15_47
   881   00014E  D000               	nop2	
   882   000150                     
   883                           ;main.c: 108:     LATE1 = 0;
   884   000150  928D               	bcf	3981,1,c	;volatile
   885   000152                     
   886                           ;main.c: 109:     _delay((unsigned long)((10)*(8000000/4000.0)));
   887   000152  0E1A               	movlw	26
   888   000154  6E21               	movwf	??i2_Instruction_LCD^0,c
   889   000156  0EF8               	movlw	248
   890   000158                     i2u16_47:
   891   000158  2EE8               	decfsz	wreg,f,c
   892   00015A  D7FE               	bra	i2u16_47
   893   00015C  2E21               	decfsz	??i2_Instruction_LCD^0,f,c
   894   00015E  D7FC               	bra	i2u16_47
   895   000160  D000               	nop2	
   896   000162  0012               	return		;funcret
   897   000164                     __end_ofi2_Instruction_LCD:
   898                           	callstack 0
   899   000000                     
   900                           	psect	rparam
   901   000000                     
   902                           	psect	temp
   903   00002E                     btemp:
   904                           	callstack 0
   905   00002E                     	ds	1
   906   000000                     int$flags	set	btemp
   907   000000                     wtemp8	set	btemp+1
   908   000000                     ttemp5	set	btemp+1
   909   000000                     ttemp6	set	btemp+4
   910   000000                     ttemp7	set	btemp+8
   911                           
   912                           	psect	config
   913                           
   914                           ;Config register CONFIG1L @ 0x300000
   915                           ;	PLL Prescaler Selection bits
   916                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   917                           ;	System Clock Postscaler Selection bits
   918                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   919                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   920                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   921   300000                     	org	3145728
   922   300000  00                 	db	0
   923                           
   924                           ;Config register CONFIG1H @ 0x300001
   925                           ;	Oscillator Selection bits
   926                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   927                           ;	Fail-Safe Clock Monitor Enable bit
   928                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   929                           ;	Internal/External Oscillator Switchover bit
   930                           ;	IESO = OFF, Oscillator Switchover mode disabled
   931   300001                     	org	3145729
   932   300001  0B                 	db	11
   933                           
   934                           ;Config register CONFIG2L @ 0x300002
   935                           ;	Power-up Timer Enable bit
   936                           ;	PWRT = OFF, PWRT disabled
   937                           ;	Brown-out Reset Enable bits
   938                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   939                           ;	Brown-out Reset Voltage bits
   940                           ;	BORV = 3, Minimum setting 2.05V
   941                           ;	USB Voltage Regulator Enable bit
   942                           ;	VREGEN = OFF, USB voltage regulator disabled
   943   300002                     	org	3145730
   944   300002  19                 	db	25
   945                           
   946                           ;Config register CONFIG2H @ 0x300003
   947                           ;	Watchdog Timer Enable bit
   948                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   949                           ;	Watchdog Timer Postscale Select bits
   950                           ;	WDTPS = 32768, 1:32768
   951   300003                     	org	3145731
   952   300003  1E                 	db	30
   953                           
   954                           ; Padding undefined space
   955   300004                     	org	3145732
   956   300004  FF                 	db	255
   957                           
   958                           ;Config register CONFIG3H @ 0x300005
   959                           ;	CCP2 MUX bit
   960                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   961                           ;	PORTB A/D Enable bit
   962                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   963                           ;	Low-Power Timer 1 Oscillator Enable bit
   964                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   965                           ;	MCLR Pin Enable bit
   966                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   967   300005                     	org	3145733
   968   300005  83                 	db	131
   969                           
   970                           ;Config register CONFIG4L @ 0x300006
   971                           ;	Stack Full/Underflow Reset Enable bit
   972                           ;	STVREN = ON, Stack full/underflow will cause Reset
   973                           ;	Single-Supply ICSP Enable bit
   974                           ;	LVP = OFF, Single-Supply ICSP disabled
   975                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   976                           ;	ICPRT = OFF, ICPORT disabled
   977                           ;	Extended Instruction Set Enable bit
   978                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   979                           ;	Background Debugger Enable bit
   980                           ;	DEBUG = 0x1, unprogrammed default
   981   300006                     	org	3145734
   982   300006  81                 	db	129
   983                           
   984                           ; Padding undefined space
   985   300007                     	org	3145735
   986   300007  FF                 	db	255
   987                           
   988                           ;Config register CONFIG5L @ 0x300008
   989                           ;	Code Protection bit
   990                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   991                           ;	Code Protection bit
   992                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   993                           ;	Code Protection bit
   994                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   995                           ;	Code Protection bit
   996                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   997   300008                     	org	3145736
   998   300008  0F                 	db	15
   999                           
  1000                           ;Config register CONFIG5H @ 0x300009
  1001                           ;	Boot Block Code Protection bit
  1002                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1003                           ;	Data EEPROM Code Protection bit
  1004                           ;	CPD = OFF, Data EEPROM is not code-protected
  1005   300009                     	org	3145737
  1006   300009  C0                 	db	192
  1007                           
  1008                           ;Config register CONFIG6L @ 0x30000A
  1009                           ;	Write Protection bit
  1010                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1011                           ;	Write Protection bit
  1012                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1013                           ;	Write Protection bit
  1014                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1015                           ;	Write Protection bit
  1016                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1017   30000A                     	org	3145738
  1018   30000A  0F                 	db	15
  1019                           
  1020                           ;Config register CONFIG6H @ 0x30000B
  1021                           ;	Configuration Register Write Protection bit
  1022                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1023                           ;	Boot Block Write Protection bit
  1024                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1025                           ;	Data EEPROM Write Protection bit
  1026                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1027   30000B                     	org	3145739
  1028   30000B  E0                 	db	224
  1029                           
  1030                           ;Config register CONFIG7L @ 0x30000C
  1031                           ;	Table Read Protection bit
  1032                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1033                           ;	Table Read Protection bit
  1034                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1035                           ;	Table Read Protection bit
  1036                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1037                           ;	Table Read Protection bit
  1038                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1039   30000C                     	org	3145740
  1040   30000C  0F                 	db	15
  1041                           
  1042                           ;Config register CONFIG7H @ 0x30000D
  1043                           ;	Boot Block Table Read Protection bit
  1044                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1045   30000D                     	org	3145741
  1046   30000D  40                 	db	64
  1047                           tosu	equ	0xFFF
  1048                           tosh	equ	0xFFE
  1049                           tosl	equ	0xFFD
  1050                           stkptr	equ	0xFFC
  1051                           pclatu	equ	0xFFB
  1052                           pclath	equ	0xFFA
  1053                           pcl	equ	0xFF9
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           prodh	equ	0xFF4
  1059                           prodl	equ	0xFF3
  1060                           indf0	equ	0xFEF
  1061                           postinc0	equ	0xFEE
  1062                           postdec0	equ	0xFED
  1063                           preinc0	equ	0xFEC
  1064                           plusw0	equ	0xFEB
  1065                           fsr0h	equ	0xFEA
  1066                           fsr0l	equ	0xFE9
  1067                           wreg	equ	0xFE8
  1068                           indf1	equ	0xFE7
  1069                           postinc1	equ	0xFE6
  1070                           postdec1	equ	0xFE5
  1071                           preinc1	equ	0xFE4
  1072                           plusw1	equ	0xFE3
  1073                           fsr1h	equ	0xFE2
  1074                           fsr1l	equ	0xFE1
  1075                           bsr	equ	0xFE0
  1076                           indf2	equ	0xFDF
  1077                           postinc2	equ	0xFDE
  1078                           postdec2	equ	0xFDD
  1079                           preinc2	equ	0xFDC
  1080                           plusw2	equ	0xFDB
  1081                           fsr2h	equ	0xFDA
  1082                           fsr2l	equ	0xFD9
  1083                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Text2(COMRAM[16]), Text1(COMRAM[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> Text2(COMRAM[16]), Text1(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _Configuration->_Set_LCD_Enable
    _Set_LCD_Enable->_Instruction_LCD

Critical Paths under _INT in COMRAM

    _INT->_strlen
    i2_Set_LCD_Enable->i2_Instruction_LCD
    _Write_LCD_Enable->i2_Instruction_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                      _Configuration
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0      30
                     _Set_LCD_Enable
 ---------------------------------------------------------------------------------
 (2) _Set_LCD_Enable                                       1     1      0      30
                                             12 COMRAM     1     1      0
                    _Instruction_LCD
 ---------------------------------------------------------------------------------
 (3) _Instruction_LCD                                      2     2      0      15
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT                                                  6     6      0     422
                                              4 COMRAM     6     6      0
                   _Write_LCD_Enable
                             _strlen
                   i2_Set_LCD_Enable
 ---------------------------------------------------------------------------------
 (5) i2_Set_LCD_Enable                                     1     1      0      44
                                              2 COMRAM     1     1      0
                  i2_Instruction_LCD
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Write_LCD_Enable                                     1     1      0      44
                                              2 COMRAM     1     1      0
                  i2_Instruction_LCD
 ---------------------------------------------------------------------------------
 (6) i2_Instruction_LCD                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
     _Set_LCD_Enable
       _Instruction_LCD

 _INT (ROOT)
   _Write_LCD_Enable
     i2_Instruction_LCD
   _strlen
   i2_Set_LCD_Enable
     i2_Instruction_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      2D       1       47.9%
BITBIGSFRllll       2C      0       0      27        0.0%
BITBIGSFRllhh       2A      0       0      24        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllh        5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      28        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 21 00:55:59 2023

                         l43 0218                           l52 022A                           l44 0218  
                         l49 01C8                           l58 0116                           u97 00D4  
                        l760 0104                          l752 00CE                          l762 0106  
                        l754 00DE                          l818 0214                          l756 00F0  
                        l764 0222                          l780 019A                          l758 00F4  
                        l766 0224                          l790 01B2                          l782 01A2  
                        l792 01B4                          l784 01AC                          l794 01B6  
                        l786 01AE                          l796 01BC                          l788 01B0  
                        l798 01C2                          u107 00E6                          u117 00FA  
                        u127 010C                          _INT 0008                          wreg 0FE8  
                       ?_INT 0021                         INT@i 0029                         _LATD 0F8C  
                       i2l52 0236                         i2l70 00C0                         i2l55 0242  
                       i2l58 0162                         _main 0214                         fsr2h 0FDA  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 002E                         start 000E                 ___param_bank 0000  
                      ??_INT 0025                        ?_main 0021    Set_LCD_Enable@Instruction 002D  
                      _LATE0 7C68                        _LATE1 7C69                        i2l750 0198  
                      i2l850 0140                        i2l852 0150                        i2l844 011A  
                      i2l860 0164                        i2l854 0152                        i2l846 012A  
                      i2l862 0170                        i2l870 022E                        i2l848 013C  
                      i2l856 023A                        i2l864 0174                        i2l872 0230  
                      i2l880 0032                        i2l858 023C                        i2l866 018C  
                      i2l890 007C                        i2l882 003A                        i2l874 001C  
                      i2l892 0084                        i2l884 004C                        i2l876 002A  
                      i2l894 0096                        i2l886 004E                        i2l878 002C  
                      i2l896 0098                        i2l888 0076                        _TRISD 0F95  
                      _TRISE 0F96                        _Text1 0011                        _Text2 0001  
 Write_LCD_Enable@Data_Write 0023                        tablat 0FF5                        ttemp5 002F  
                      ttemp6 0032                        ttemp7 0036                        status 0FD8  
                      wtemp8 002F              __initialization 01CA                 __end_of_main 0220  
                     ??_main 002E                __activetblptr 0000                       _ADCON1 0FC1  
                     _INT0IF 7F91                       _OSCCON 0FD3                       i2u5_40 018C  
                     i2u5_41 0188                       i2u6_40 002A                       i2u6_41 0026  
                     i2u7_40 0076                       i2u7_41 0072                       i2u8_40 00C0  
                     i2u8_41 00BC                       isa$std 0001                       _strlen 0164  
               __pdataCOMRAM 0001                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8                   __accesstop 0060      __end_of__initialization 01EA  
              ___rparam_used 0001               __pcstackCOMRAM 0021             _Write_LCD_Enable 0238  
      __end_of_Configuration 01CA            i2_Instruction_LCD 0118           ?i2_Instruction_LCD 0021  
        ??i2_Instruction_LCD 0021                      ?_strlen 0021                      i2u13_47 0120  
                    i2u14_47 0132                      i2u15_47 0146                      i2u16_47 0158  
  __end_ofi2_Instruction_LCD 0164                      __Hparam 0000                      __Lparam 0000  
          ??_Instruction_LCD 002B                      __pcinit 01CA                      __ramtop 0800  
                    __ptext0 0214                      __ptext1 019A                      __ptext2 0220  
                    __ptext3 00CC                      __ptext5 022C                      __ptext6 0164  
                    __ptext7 0238                      __ptext8 0118               __pintcode_body 0012  
       end_of_initialization 01EA             i2_Set_LCD_Enable 022C                      int_func 0012  
                    postdec1 0FE5                      postinc0 0FEE                      strlen@a 0023  
                    strlen@s 0021                    _TRISBbits 0F93     __end_of_Write_LCD_Enable 0244  
              __pidataCOMRAM 01F4  i2Set_LCD_Enable@Instruction 0023               __end_of_strlen 019A  
        start_initialization 01CA                  __end_of_INT 00CC               _Set_LCD_Enable 0220  
                   ??_strlen 0023                     INT@i_324 002A              _Instruction_LCD 00CC  
     __end_of_Set_LCD_Enable 022C                    __pintcode 0008     __end_ofi2_Set_LCD_Enable 0238  
            ?_Set_LCD_Enable 0021                     _RCONbits 0FD0      __end_of_Instruction_LCD 0118  
                _INTCON2bits 0FF1                    copy_data0 01DE        i2Instruction_LCD@Data 0022  
              _Configuration 019A            ?_Write_LCD_Enable 0021                     __Hrparam 0000  
         ??_Write_LCD_Enable 0023                     __Lrparam 0000               ?_Configuration 0021  
                   isa$xinst 0000                     int$flags 002E                   _INTCONbits 0FF2  
           ?_Instruction_LCD 0021                     intlevel2 0000            ?i2_Set_LCD_Enable 0021  
         ??i2_Set_LCD_Enable 0023              ??_Configuration 002E             ??_Set_LCD_Enable 002D  
        Instruction_LCD@Data 002C  
