

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 14 02:56:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0001DA                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _Texto2
    64   0001DA  49                 	db	73
    65   0001DB  20                 	db	32
    66   0001DC  6C                 	db	108
    67   0001DD  6F                 	db	111
    68   0001DE  76                 	db	118
    69   0001DF  65                 	db	101
    70   0001E0  20                 	db	32
    71   0001E1  79                 	db	121
    72   0001E2  6F                 	db	111
    73   0001E3  75                 	db	117
    74   0001E4  21                 	db	33
    75   0001E5  00                 	db	0
    76   0001E6  00                 	db	0
    77   0001E7  00                 	db	0
    78   0001E8  00                 	db	0
    79   0001E9  00                 	db	0
    80                           
    81                           ;initializer for _Texto1
    82   0001EA  48                 	db	72
    83   0001EB  65                 	db	101
    84   0001EC  6C                 	db	108
    85   0001ED  6C                 	db	108
    86   0001EE  6F                 	db	111
    87   0001EF  21                 	db	33
    88   0001F0  00                 	db	0
    89   0001F1  00                 	db	0
    90   000000                     _INT0IF	set	32657
    91   000000                     _LATE1	set	31849
    92   000000                     _LATD	set	3980
    93   000000                     _TRISBbits	set	3987
    94   000000                     _ADCON1	set	4033
    95   000000                     _OSCCON	set	4051
    96   000000                     _LATE0	set	31848
    97   000000                     _INTCON2bits	set	4081
    98   000000                     _INTCONbits	set	4082
    99   000000                     _RCONbits	set	4048
   100   000000                     _TRISD	set	3989
   101   000000                     _TRISE	set	3990
   102                           
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106   0001B0                     __pcinit:
   107                           	callstack 0
   108   0001B0                     start_initialization:
   109                           	callstack 0
   110   0001B0                     __initialization:
   111                           	callstack 0
   112                           
   113                           ; Initialize objects allocated to COMRAM (24 bytes)
   114                           ; load TBLPTR registers with __pidataCOMRAM
   115   0001B0  0EDA               	movlw	low __pidataCOMRAM
   116   0001B2  6EF6               	movwf	tblptrl,c
   117   0001B4  0E01               	movlw	high __pidataCOMRAM
   118   0001B6  6EF7               	movwf	tblptrh,c
   119   0001B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   120   0001BA  6EF8               	movwf	tblptru,c
   121   0001BC  EE00  F001         	lfsr	0,__pdataCOMRAM
   122   0001C0  EE10 F018          	lfsr	1,24
   123   0001C4                     copy_data0:
   124   0001C4  0009               	tblrd		*+
   125   0001C6  CFF5 FFEE          	movff	tablat,postinc0
   126   0001CA  50E5               	movf	postdec1,w,c
   127   0001CC  50E1               	movf	fsr1l,w,c
   128   0001CE  E1FA               	bnz	copy_data0
   129   0001D0                     end_of_initialization:
   130                           	callstack 0
   131   0001D0                     __end_of__initialization:
   132                           	callstack 0
   133   0001D0  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   134   0001D2  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   135   0001D4  0100               	movlb	0
   136   0001D6  EFF9  F000         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	dataCOMRAM
   139   000001                     __pdataCOMRAM:
   140                           	callstack 0
   141   000001                     _Texto2:
   142                           	callstack 0
   143   000001                     	ds	16
   144   000011                     _Texto1:
   145                           	callstack 0
   146   000011                     	ds	8
   147                           
   148                           	psect	cstackCOMRAM
   149   000019                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000019                     ??i2_LCD:
   152   000019                     ?_strlen:
   153                           	callstack 0
   154   000019                     strlen@s:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x0
   158   000019                     	ds	1
   159   00001A                     i2LCD@Data:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x1
   163   00001A                     	ds	1
   164   00001B                     Write@Data_W:
   165                           	callstack 0
   166   00001B                     i2Configuration_LCD@Set:
   167                           	callstack 0
   168   00001B                     strlen@a:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x2
   172   00001B                     	ds	2
   173   00001D                     ??_INT:
   174                           
   175                           ; 1 bytes @ 0x4
   176   00001D                     	ds	4
   177   000021                     INT@i:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x8
   181   000021                     	ds	1
   182   000022                     INT@i_324:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x9
   186   000022                     	ds	1
   187   000023                     ??_LCD:
   188                           
   189                           ; 1 bytes @ 0xA
   190   000023                     	ds	1
   191   000024                     LCD@Data:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xB
   195   000024                     	ds	1
   196   000025                     Configuration_LCD@Set:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0xC
   200   000025                     	ds	1
   201   000026                     
   202                           ; 1 bytes @ 0xD
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 44 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called: 6
   228 ;; This function calls:
   229 ;;		_Configuration
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236   0001F2                     __ptext0:
   237                           	callstack 0
   238   0001F2                     _main:
   239                           	callstack 25
   240   0001F2                     
   241                           ;main.c: 47:     Configuration();
   242   0001F2  ECA2  F000         	call	_Configuration	;wreg free
   243   0001F6                     l43:
   244   0001F6  EFFB  F000         	goto	l43
   245   0001FA  EF07  F000         	goto	start
   246   0001FE                     __end_of_main:
   247                           	callstack 0
   248                           
   249 ;; *************** function _Configuration *****************
   250 ;; Defined at:
   251 ;;		line 60 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   265 ;;      Params:         0       0       0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels used: 1
   271 ;; Hardware stack levels required when called: 5
   272 ;; This function calls:
   273 ;;		_Configuration_LCD
   274 ;; This function is called by:
   275 ;;		_main
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text1
   280   000144                     __ptext1:
   281                           	callstack 0
   282   000144                     _Configuration:
   283                           	callstack 25
   284   000144                     
   285                           ;main.c: 62:     OSCCON = 0x72;
   286   000144  0E72               	movlw	114
   287   000146  6ED3               	movwf	211,c	;volatile
   288                           
   289                           ;main.c: 63:     ADCON1 = 0x0F;
   290   000148  0E0F               	movlw	15
   291   00014A  6EC1               	movwf	193,c	;volatile
   292   00014C                     
   293                           ;main.c: 65:     TRISBbits.RB0 = 1;
   294   00014C  8093               	bsf	147,0,c	;volatile
   295                           
   296                           ;main.c: 66:     TRISD = 0x00;
   297   00014E  0E00               	movlw	0
   298   000150  6E95               	movwf	149,c	;volatile
   299                           
   300                           ;main.c: 67:     TRISE = 0x00;
   301   000152  0E00               	movlw	0
   302   000154  6E96               	movwf	150,c	;volatile
   303   000156                     
   304                           ;main.c: 70:     RCONbits.IPEN = 0;
   305   000156  9ED0               	bcf	208,7,c	;volatile
   306   000158                     
   307                           ;main.c: 71:     INTCONbits.GIE = 1;
   308   000158  8EF2               	bsf	242,7,c	;volatile
   309   00015A                     
   310                           ;main.c: 72:     INTCONbits.INT0E = 1;
   311   00015A  88F2               	bsf	242,4,c	;volatile
   312   00015C                     
   313                           ;main.c: 73:     INTCONbits.INT0F = 0;
   314   00015C  92F2               	bcf	242,1,c	;volatile
   315   00015E                     
   316                           ;main.c: 74:     INTCON2bits.INTEDG0 = 0;
   317   00015E  9CF1               	bcf	241,6,c	;volatile
   318   000160                     
   319                           ;main.c: 77:     Configuration_LCD(0x06);
   320   000160  0E06               	movlw	6
   321   000162  ECFF  F000         	call	_Configuration_LCD
   322   000166                     
   323                           ;main.c: 78:     Configuration_LCD(0x0F);
   324   000166  0E0F               	movlw	15
   325   000168  ECFF  F000         	call	_Configuration_LCD
   326   00016C                     
   327                           ;main.c: 79:     Configuration_LCD(0x38);
   328   00016C  0E38               	movlw	56
   329   00016E  ECFF  F000         	call	_Configuration_LCD
   330   000172                     
   331                           ;main.c: 80:     Configuration_LCD(0x01);
   332   000172  0E01               	movlw	1
   333   000174  ECFF  F000         	call	_Configuration_LCD
   334   000178  0012               	return		;funcret
   335   00017A                     __end_of_Configuration:
   336                           	callstack 0
   337                           
   338 ;; *************** function _Configuration_LCD *****************
   339 ;; Defined at:
   340 ;;		line 86 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;  Set             1    wreg     unsigned char 
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  Set             1   12[COMRAM] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         1       0       0       0       0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0
   357 ;;      Totals:         1       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        1 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; Hardware stack levels required when called: 4
   361 ;; This function calls:
   362 ;;		_LCD
   363 ;; This function is called by:
   364 ;;		_Configuration
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369   0001FE                     __ptext2:
   370                           	callstack 0
   371   0001FE                     _Configuration_LCD:
   372                           	callstack 25
   373                           
   374                           ;incstack = 0
   375                           ;Configuration_LCD@Set stored from wreg
   376   0001FE  6E25               	movwf	Configuration_LCD@Set^0,c
   377   000200                     
   378                           ;main.c: 88:     LATE0 = 0;
   379   000200  908D               	bcf	3981,0,c	;volatile
   380   000202                     
   381                           ;main.c: 89:     LCD(Set);
   382   000202  5025               	movf	Configuration_LCD@Set^0,w,c
   383   000204  EC66  F000         	call	_LCD
   384   000208  0012               	return		;funcret
   385   00020A                     __end_of_Configuration_LCD:
   386                           	callstack 0
   387                           
   388 ;; *************** function _LCD *****************
   389 ;; Defined at:
   390 ;;		line 100 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  Data            1    wreg     unsigned char 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  Data            1   11[COMRAM] unsigned char 
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         1       0       0       0       0       0       0       0       0
   406 ;;      Temps:          1       0       0       0       0       0       0       0       0
   407 ;;      Totals:         2       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        2 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; Hardware stack levels required when called: 3
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_Configuration_LCD
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text3
   419   0000CC                     __ptext3:
   420                           	callstack 0
   421   0000CC                     _LCD:
   422                           	callstack 25
   423                           
   424                           ;incstack = 0
   425                           ;LCD@Data stored from wreg
   426   0000CC  6E24               	movwf	LCD@Data^0,c
   427   0000CE                     
   428                           ;main.c: 102:     LATE1 = 1;
   429   0000CE  828D               	bsf	3981,1,c	;volatile
   430   0000D0                     
   431                           ;main.c: 103:     _delay((unsigned long)((15)*(8000000/4000.0)));
   432   0000D0  0E27               	movlw	39
   433   0000D2  6E23               	movwf	??_LCD^0,c
   434   0000D4  0EF5               	movlw	245
   435   0000D6                     u97:
   436   0000D6  2EE8               	decfsz	wreg,f,c
   437   0000D8  D7FE               	bra	u97
   438   0000DA  2E23               	decfsz	??_LCD^0,f,c
   439   0000DC  D7FC               	bra	u97
   440   0000DE  F000               	nop	
   441   0000E0                     
   442                           ;main.c: 104:     LATD = Data;
   443   0000E0  C024  FF8C         	movff	LCD@Data,3980	;volatile
   444   0000E4                     
   445                           ;main.c: 105:     _delay((unsigned long)((10)*(8000000/4000.0)));
   446   0000E4  0E1A               	movlw	26
   447   0000E6  6E23               	movwf	??_LCD^0,c
   448   0000E8  0EF8               	movlw	248
   449   0000EA                     u107:
   450   0000EA  2EE8               	decfsz	wreg,f,c
   451   0000EC  D7FE               	bra	u107
   452   0000EE  2E23               	decfsz	??_LCD^0,f,c
   453   0000F0  D7FC               	bra	u107
   454   0000F2  D000               	nop2	
   455   0000F4                     
   456                           ;main.c: 106:     LATE1 = 0;
   457   0000F4  928D               	bcf	3981,1,c	;volatile
   458   0000F6                     
   459                           ;main.c: 107:     _delay((unsigned long)((10)*(8000000/4000.0)));
   460   0000F6  0E1A               	movlw	26
   461   0000F8  6E23               	movwf	??_LCD^0,c
   462   0000FA  0EF8               	movlw	248
   463   0000FC                     u117:
   464   0000FC  2EE8               	decfsz	wreg,f,c
   465   0000FE  D7FE               	bra	u117
   466   000100  2E23               	decfsz	??_LCD^0,f,c
   467   000102  D7FC               	bra	u117
   468   000104  D000               	nop2	
   469   000106  0012               	return		;funcret
   470   000108                     __end_of_LCD:
   471                           	callstack 0
   472                           
   473 ;; *************** function _INT *****************
   474 ;; Defined at:
   475 ;;		line 111 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               1    9[COMRAM] unsigned char 
   480 ;;  i               1    8[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         2       0       0       0       0       0       0       0       0
   492 ;;      Temps:          4       0       0       0       0       0       0       0       0
   493 ;;      Totals:         6       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        6 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 2
   497 ;; This function calls:
   498 ;;		_Write
   499 ;;		_strlen
   500 ;;		i2_Configuration_LCD
   501 ;; This function is called by:
   502 ;;		Interrupt level 2
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	intcode
   507   000008                     __pintcode:
   508                           	callstack 0
   509   000008                     _INT:
   510                           	callstack 25
   511                           
   512                           ;incstack = 0
   513   000008  8226               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   514   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   515                           
   516                           	psect	intcode_body
   517   000012                     __pintcode_body:
   518                           	callstack 25
   519   000012                     int_func:
   520                           	callstack 25
   521   000012  0006               	pop		; remove dummy address from shadow register refresh
   522   000014  CFD9 F01F          	movff	fsr2l,??_INT+2
   523   000018  CFDA F020          	movff	fsr2h,??_INT+3
   524   00001C                     
   525                           ;main.c: 113:     if (INT0IF) {
   526   00001C  A2F2               	btfss	4082,1,c	;volatile
   527   00001E  EF13  F000         	goto	i2u6_41
   528   000022  EF15  F000         	goto	i2u6_40
   529   000026                     i2u6_41:
   530   000026  EF60  F000         	goto	i2l70
   531   00002A                     i2u6_40:
   532   00002A                     
   533                           ;main.c: 115:         INTCONbits.INT0IF = 0;
   534   00002A  92F2               	bcf	242,1,c	;volatile
   535   00002C                     
   536                           ;main.c: 117:         Configuration_LCD(0x80 + 4);
   537   00002C  0E84               	movlw	132
   538   00002E  EC05  F001         	call	i2_Configuration_LCD
   539   000032                     
   540                           ;main.c: 119:         for (unsigned char i = 0; i < strlen(Texto1); i++) {
   541   000032  0E00               	movlw	0
   542   000034  6E21               	movwf	INT@i^0,c
   543   000036  EF27  F000         	goto	i2l888
   544   00003A                     i2l884:
   545                           
   546                           ;main.c: 120:             Write(Texto1[i]);
   547   00003A  0E11               	movlw	low _Texto1
   548   00003C  2421               	addwf	INT@i^0,w,c
   549   00003E  6ED9               	movwf	fsr2l,c
   550   000040  6ADA               	clrf	fsr2h,c
   551   000042  0E00               	movlw	high _Texto1
   552   000044  22DA               	addwfc	fsr2h,f,c
   553   000046  50DF               	movf	indf2,w,c
   554   000048  EC0B  F001         	call	_Write
   555   00004C                     
   556                           ;main.c: 121:         }
   557   00004C  2A21               	incf	INT@i^0,f,c
   558   00004E                     i2l888:
   559   00004E  0E11               	movlw	low _Texto1
   560   000050  6E19               	movwf	strlen@s^0,c
   561   000052  0E00               	movlw	high _Texto1
   562   000054  6E1A               	movwf	(strlen@s+1)^0,c
   563   000056  ECBD  F000         	call	_strlen	;wreg free
   564   00005A  5021               	movf	INT@i^0,w,c
   565   00005C  6E1D               	movwf	??_INT^0,c
   566   00005E  6A1E               	clrf	(??_INT+1)^0,c
   567   000060  5019               	movf	?_strlen^0,w,c
   568   000062  5C1D               	subwf	??_INT^0,w,c
   569   000064  501A               	movf	(?_strlen+1)^0,w,c
   570   000066  581E               	subwfb	(??_INT+1)^0,w,c
   571   000068  A0D8               	btfss	status,0,c
   572   00006A  EF39  F000         	goto	i2u7_41
   573   00006E  EF3B  F000         	goto	i2u7_40
   574   000072                     i2u7_41:
   575   000072  EF1D  F000         	goto	i2l884
   576   000076                     i2u7_40:
   577   000076                     
   578                           ;main.c: 123:         Configuration_LCD(0xC0 + 1);
   579   000076  0EC1               	movlw	193
   580   000078  EC05  F001         	call	i2_Configuration_LCD
   581   00007C                     
   582                           ;main.c: 125:         for (unsigned char i = 0; i < strlen(Texto2); i++) {
   583   00007C  0E00               	movlw	0
   584   00007E  6E22               	movwf	INT@i_324^0,c
   585   000080  EF4C  F000         	goto	i2l898
   586   000084                     i2l894:
   587                           
   588                           ;main.c: 126:             Write(Texto2[i]);
   589   000084  0E01               	movlw	low _Texto2
   590   000086  2422               	addwf	INT@i_324^0,w,c
   591   000088  6ED9               	movwf	fsr2l,c
   592   00008A  6ADA               	clrf	fsr2h,c
   593   00008C  0E00               	movlw	high _Texto2
   594   00008E  22DA               	addwfc	fsr2h,f,c
   595   000090  50DF               	movf	indf2,w,c
   596   000092  EC0B  F001         	call	_Write
   597   000096                     
   598                           ;main.c: 127:         }
   599   000096  2A22               	incf	INT@i_324^0,f,c
   600   000098                     i2l898:
   601   000098  0E01               	movlw	low _Texto2
   602   00009A  6E19               	movwf	strlen@s^0,c
   603   00009C  0E00               	movlw	high _Texto2
   604   00009E  6E1A               	movwf	(strlen@s+1)^0,c
   605   0000A0  ECBD  F000         	call	_strlen	;wreg free
   606   0000A4  5022               	movf	INT@i_324^0,w,c
   607   0000A6  6E1D               	movwf	??_INT^0,c
   608   0000A8  6A1E               	clrf	(??_INT+1)^0,c
   609   0000AA  5019               	movf	?_strlen^0,w,c
   610   0000AC  5C1D               	subwf	??_INT^0,w,c
   611   0000AE  501A               	movf	(?_strlen+1)^0,w,c
   612   0000B0  581E               	subwfb	(??_INT+1)^0,w,c
   613   0000B2  A0D8               	btfss	status,0,c
   614   0000B4  EF5E  F000         	goto	i2u8_41
   615   0000B8  EF60  F000         	goto	i2u8_40
   616   0000BC                     i2u8_41:
   617   0000BC  EF42  F000         	goto	i2l894
   618   0000C0                     i2u8_40:
   619   0000C0                     i2l70:
   620   0000C0  C020  FFDA         	movff	??_INT+3,fsr2h
   621   0000C4  C01F  FFD9         	movff	??_INT+2,fsr2l
   622   0000C8  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   623   0000CA  0011               	retfie		f
   624   0000CC                     __end_of_INT:
   625                           	callstack 0
   626                           
   627 ;; *************** function i2_Configuration_LCD *****************
   628 ;; Defined at:
   629 ;;		line 86 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  Set             1    wreg     unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  Set             1    2[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         0       0       0       0       0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0
   646 ;;      Totals:         1       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:        1 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 1
   650 ;; This function calls:
   651 ;;		i2_LCD
   652 ;; This function is called by:
   653 ;;		_INT
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text5
   658   00020A                     __ptext5:
   659                           	callstack 0
   660   00020A                     i2_Configuration_LCD:
   661                           	callstack 25
   662                           
   663                           ;incstack = 0
   664                           ;i2Configuration_LCD@Set stored from wreg
   665   00020A  6E1B               	movwf	i2Configuration_LCD@Set^0,c
   666   00020C                     
   667                           ;main.c: 88:     LATE0 = 0;
   668   00020C  908D               	bcf	3981,0,c	;volatile
   669   00020E                     
   670                           ;main.c: 89:     LCD(Set);
   671   00020E  501B               	movf	i2Configuration_LCD@Set^0,w,c
   672   000210  EC84  F000         	call	i2_LCD
   673   000214  0012               	return		;funcret
   674   000216                     __end_ofi2_Configuration_LCD:
   675                           	callstack 0
   676                           
   677 ;; *************** function _strlen *****************
   678 ;; Defined at:
   679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  s               2    0[COMRAM] PTR const unsigned char 
   682 ;;		 -> Texto2(16), Texto1(8), 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  a               2    2[COMRAM] PTR const unsigned char 
   685 ;;		 -> Texto2(16), Texto1(8), 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  2    0[COMRAM] unsigned int 
   688 ;; Registers used:
   689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         2       0       0       0       0       0       0       0       0
   696 ;;      Locals:         2       0       0       0       0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0
   698 ;;      Totals:         4       0       0       0       0       0       0       0       0
   699 ;;Total ram usage:        4 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_INT
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text6
   709   00017A                     __ptext6:
   710                           	callstack 0
   711   00017A                     _strlen:
   712                           	callstack 26
   713   00017A  C019  F01B         	movff	strlen@s,strlen@a
   714   00017E  C01A  F01C         	movff	strlen@s+1,strlen@a+1
   715   000182  EFC5  F000         	goto	i2l866
   716   000186                     i2l864:
   717   000186  4A19               	infsnz	strlen@s^0,f,c
   718   000188  2A1A               	incf	(strlen@s+1)^0,f,c
   719   00018A                     i2l866:
   720   00018A  C019  FFD9         	movff	strlen@s,fsr2l
   721   00018E  C01A  FFDA         	movff	strlen@s+1,fsr2h
   722   000192  50DF               	movf	indf2,w,c
   723   000194  A4D8               	btfss	status,2,c
   724   000196  EFCF  F000         	goto	i2u5_41
   725   00019A  EFD1  F000         	goto	i2u5_40
   726   00019E                     i2u5_41:
   727   00019E  EFC3  F000         	goto	i2l864
   728   0001A2                     i2u5_40:
   729   0001A2  501B               	movf	strlen@a^0,w,c
   730   0001A4  5C19               	subwf	strlen@s^0,w,c
   731   0001A6  6E19               	movwf	?_strlen^0,c
   732   0001A8  501C               	movf	(strlen@a+1)^0,w,c
   733   0001AA  581A               	subwfb	(strlen@s+1)^0,w,c
   734   0001AC  6E1A               	movwf	(?_strlen+1)^0,c
   735   0001AE  0012               	return		;funcret
   736   0001B0                     __end_of_strlen:
   737                           	callstack 0
   738                           
   739 ;; *************** function _Write *****************
   740 ;; Defined at:
   741 ;;		line 93 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  Data_W          1    wreg     unsigned char 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  Data_W          1    2[COMRAM] unsigned char 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         0       0       0       0       0       0       0       0       0
   756 ;;      Locals:         1       0       0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0
   758 ;;      Totals:         1       0       0       0       0       0       0       0       0
   759 ;;Total ram usage:        1 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 1
   762 ;; This function calls:
   763 ;;		i2_LCD
   764 ;; This function is called by:
   765 ;;		_INT
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text7
   770   000216                     __ptext7:
   771                           	callstack 0
   772   000216                     _Write:
   773                           	callstack 25
   774                           
   775                           ;incstack = 0
   776                           ;Write@Data_W stored from wreg
   777   000216  6E1B               	movwf	Write@Data_W^0,c
   778   000218                     
   779                           ;main.c: 95:     LATE0 = 1;
   780   000218  808D               	bsf	3981,0,c	;volatile
   781   00021A                     
   782                           ;main.c: 96:     LCD(Data_W);
   783   00021A  501B               	movf	Write@Data_W^0,w,c
   784   00021C  EC84  F000         	call	i2_LCD
   785   000220  0012               	return		;funcret
   786   000222                     __end_of_Write:
   787                           	callstack 0
   788                           
   789 ;; *************** function i2_LCD *****************
   790 ;; Defined at:
   791 ;;		line 100 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  Data            1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  Data            1    1[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0
   807 ;;      Temps:          1       0       0       0       0       0       0       0       0
   808 ;;      Totals:         2       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_Write
   815 ;;		i2_Configuration_LCD
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text8
   820   000108                     __ptext8:
   821                           	callstack 0
   822   000108                     i2_LCD:
   823                           	callstack 25
   824                           
   825                           ;incstack = 0
   826                           ;i2LCD@Data stored from wreg
   827   000108  6E1A               	movwf	i2LCD@Data^0,c
   828   00010A                     
   829                           ;main.c: 102:     LATE1 = 1;
   830   00010A  828D               	bsf	3981,1,c	;volatile
   831   00010C                     
   832                           ;main.c: 103:     _delay((unsigned long)((15)*(8000000/4000.0)));
   833   00010C  0E27               	movlw	39
   834   00010E  6E19               	movwf	??i2_LCD^0,c
   835   000110  0EF5               	movlw	245
   836   000112                     i2u12_47:
   837   000112  2EE8               	decfsz	wreg,f,c
   838   000114  D7FE               	bra	i2u12_47
   839   000116  2E19               	decfsz	??i2_LCD^0,f,c
   840   000118  D7FC               	bra	i2u12_47
   841   00011A  F000               	nop	
   842   00011C                     
   843                           ;main.c: 104:     LATD = Data;
   844   00011C  C01A  FF8C         	movff	i2LCD@Data,3980	;volatile
   845   000120                     
   846                           ;main.c: 105:     _delay((unsigned long)((10)*(8000000/4000.0)));
   847   000120  0E1A               	movlw	26
   848   000122  6E19               	movwf	??i2_LCD^0,c
   849   000124  0EF8               	movlw	248
   850   000126                     i2u13_47:
   851   000126  2EE8               	decfsz	wreg,f,c
   852   000128  D7FE               	bra	i2u13_47
   853   00012A  2E19               	decfsz	??i2_LCD^0,f,c
   854   00012C  D7FC               	bra	i2u13_47
   855   00012E  D000               	nop2	
   856   000130                     
   857                           ;main.c: 106:     LATE1 = 0;
   858   000130  928D               	bcf	3981,1,c	;volatile
   859   000132                     
   860                           ;main.c: 107:     _delay((unsigned long)((10)*(8000000/4000.0)));
   861   000132  0E1A               	movlw	26
   862   000134  6E19               	movwf	??i2_LCD^0,c
   863   000136  0EF8               	movlw	248
   864   000138                     i2u14_47:
   865   000138  2EE8               	decfsz	wreg,f,c
   866   00013A  D7FE               	bra	i2u14_47
   867   00013C  2E19               	decfsz	??i2_LCD^0,f,c
   868   00013E  D7FC               	bra	i2u14_47
   869   000140  D000               	nop2	
   870   000142  0012               	return		;funcret
   871   000144                     __end_ofi2_LCD:
   872                           	callstack 0
   873   000000                     
   874                           	psect	rparam
   875   000000                     
   876                           	psect	temp
   877   000026                     btemp:
   878                           	callstack 0
   879   000026                     	ds	1
   880   000000                     int$flags	set	btemp
   881   000000                     wtemp8	set	btemp+1
   882   000000                     ttemp5	set	btemp+1
   883   000000                     ttemp6	set	btemp+4
   884   000000                     ttemp7	set	btemp+8
   885                           
   886                           	psect	config
   887                           
   888                           ;Config register CONFIG1L @ 0x300000
   889                           ;	PLL Prescaler Selection bits
   890                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   891                           ;	System Clock Postscaler Selection bits
   892                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   893                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   894                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   895   300000                     	org	3145728
   896   300000  00                 	db	0
   897                           
   898                           ;Config register CONFIG1H @ 0x300001
   899                           ;	Oscillator Selection bits
   900                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   901                           ;	Fail-Safe Clock Monitor Enable bit
   902                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   903                           ;	Internal/External Oscillator Switchover bit
   904                           ;	IESO = OFF, Oscillator Switchover mode disabled
   905   300001                     	org	3145729
   906   300001  0B                 	db	11
   907                           
   908                           ;Config register CONFIG2L @ 0x300002
   909                           ;	Power-up Timer Enable bit
   910                           ;	PWRT = OFF, PWRT disabled
   911                           ;	Brown-out Reset Enable bits
   912                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   913                           ;	Brown-out Reset Voltage bits
   914                           ;	BORV = 3, Minimum setting 2.05V
   915                           ;	USB Voltage Regulator Enable bit
   916                           ;	VREGEN = OFF, USB voltage regulator disabled
   917   300002                     	org	3145730
   918   300002  19                 	db	25
   919                           
   920                           ;Config register CONFIG2H @ 0x300003
   921                           ;	Watchdog Timer Enable bit
   922                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   923                           ;	Watchdog Timer Postscale Select bits
   924                           ;	WDTPS = 32768, 1:32768
   925   300003                     	org	3145731
   926   300003  1E                 	db	30
   927                           
   928                           ; Padding undefined space
   929   300004                     	org	3145732
   930   300004  FF                 	db	255
   931                           
   932                           ;Config register CONFIG3H @ 0x300005
   933                           ;	CCP2 MUX bit
   934                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   935                           ;	PORTB A/D Enable bit
   936                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   937                           ;	Low-Power Timer 1 Oscillator Enable bit
   938                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   939                           ;	MCLR Pin Enable bit
   940                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   941   300005                     	org	3145733
   942   300005  83                 	db	131
   943                           
   944                           ;Config register CONFIG4L @ 0x300006
   945                           ;	Stack Full/Underflow Reset Enable bit
   946                           ;	STVREN = ON, Stack full/underflow will cause Reset
   947                           ;	Single-Supply ICSP Enable bit
   948                           ;	LVP = OFF, Single-Supply ICSP disabled
   949                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   950                           ;	ICPRT = OFF, ICPORT disabled
   951                           ;	Extended Instruction Set Enable bit
   952                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   953                           ;	Background Debugger Enable bit
   954                           ;	DEBUG = 0x1, unprogrammed default
   955   300006                     	org	3145734
   956   300006  81                 	db	129
   957                           
   958                           ; Padding undefined space
   959   300007                     	org	3145735
   960   300007  FF                 	db	255
   961                           
   962                           ;Config register CONFIG5L @ 0x300008
   963                           ;	Code Protection bit
   964                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   965                           ;	Code Protection bit
   966                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   967                           ;	Code Protection bit
   968                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   969                           ;	Code Protection bit
   970                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   971   300008                     	org	3145736
   972   300008  0F                 	db	15
   973                           
   974                           ;Config register CONFIG5H @ 0x300009
   975                           ;	Boot Block Code Protection bit
   976                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   977                           ;	Data EEPROM Code Protection bit
   978                           ;	CPD = OFF, Data EEPROM is not code-protected
   979   300009                     	org	3145737
   980   300009  C0                 	db	192
   981                           
   982                           ;Config register CONFIG6L @ 0x30000A
   983                           ;	Write Protection bit
   984                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   985                           ;	Write Protection bit
   986                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   987                           ;	Write Protection bit
   988                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   989                           ;	Write Protection bit
   990                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   991   30000A                     	org	3145738
   992   30000A  0F                 	db	15
   993                           
   994                           ;Config register CONFIG6H @ 0x30000B
   995                           ;	Configuration Register Write Protection bit
   996                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   997                           ;	Boot Block Write Protection bit
   998                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   999                           ;	Data EEPROM Write Protection bit
  1000                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1001   30000B                     	org	3145739
  1002   30000B  E0                 	db	224
  1003                           
  1004                           ;Config register CONFIG7L @ 0x30000C
  1005                           ;	Table Read Protection bit
  1006                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1007                           ;	Table Read Protection bit
  1008                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1009                           ;	Table Read Protection bit
  1010                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1011                           ;	Table Read Protection bit
  1012                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1013   30000C                     	org	3145740
  1014   30000C  0F                 	db	15
  1015                           
  1016                           ;Config register CONFIG7H @ 0x30000D
  1017                           ;	Boot Block Table Read Protection bit
  1018                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1019   30000D                     	org	3145741
  1020   30000D  40                 	db	64
  1021                           tosu	equ	0xFFF
  1022                           tosh	equ	0xFFE
  1023                           tosl	equ	0xFFD
  1024                           stkptr	equ	0xFFC
  1025                           pclatu	equ	0xFFB
  1026                           pclath	equ	0xFFA
  1027                           pcl	equ	0xFF9
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           indf0	equ	0xFEF
  1035                           postinc0	equ	0xFEE
  1036                           postdec0	equ	0xFED
  1037                           preinc0	equ	0xFEC
  1038                           plusw0	equ	0xFEB
  1039                           fsr0h	equ	0xFEA
  1040                           fsr0l	equ	0xFE9
  1041                           wreg	equ	0xFE8
  1042                           indf1	equ	0xFE7
  1043                           postinc1	equ	0xFE6
  1044                           postdec1	equ	0xFE5
  1045                           preinc1	equ	0xFE4
  1046                           plusw1	equ	0xFE3
  1047                           fsr1h	equ	0xFE2
  1048                           fsr1l	equ	0xFE1
  1049                           bsr	equ	0xFE0
  1050                           indf2	equ	0xFDF
  1051                           postinc2	equ	0xFDE
  1052                           postdec2	equ	0xFDD
  1053                           preinc2	equ	0xFDC
  1054                           plusw2	equ	0xFDB
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Texto2(COMRAM[16]), Texto1(COMRAM[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> Texto2(COMRAM[16]), Texto1(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _Configuration->_Configuration_LCD
    _Configuration_LCD->_LCD

Critical Paths under _INT in COMRAM

    _INT->_strlen
    i2_Configuration_LCD->i2_LCD
    _Write->i2_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                      _Configuration
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        0     0      0      30
                  _Configuration_LCD
 ---------------------------------------------------------------------------------
 (2) _Configuration_LCD                                    1     1      0      30
                                             12 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      15
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT                                                  6     6      0     422
                                              4 COMRAM     6     6      0
                              _Write
                             _strlen
                i2_Configuration_LCD
 ---------------------------------------------------------------------------------
 (5) i2_Configuration_LCD                                  1     1      0      44
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Write                                                1     1      0      44
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (6) i2_LCD                                                2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
     _Configuration_LCD
       _LCD

 _INT (ROOT)
   _Write
     i2_LCD
   _strlen
   i2_Configuration_LCD
     i2_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      25       1       39.4%
BITBIGSFRllll       2C      0       0      27        0.0%
BITBIGSFRllhh       2A      0       0      24        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhl         E      0       0      23        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllh        5      0       0      26        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRllhl        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      28        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 14 02:56:10 2023

                         l43 01F6                           l52 0208                           l44 01F6  
                         l49 0178                           l58 0106                           u97 00D6  
                        l800 0172                          l820 01F2                          l760 00F4  
                        l752 00CE                          l762 00F6                          l754 00D0  
                        l756 00E0                          l764 0200                          l780 0144  
                        l758 00E4                          l766 0202                          l790 015C  
                        l782 014C                          l792 015E                          l784 0156  
                        l794 0160                          l786 0158                          l796 0166  
                        l788 015A                          l798 016C                          _LCD 00CC  
                        u107 00EA                          u117 00FC                          _INT 0008  
                        wreg 0FE8                         ?_LCD 0019                         ?_INT 0019  
                       INT@i 0021                         _LATD 0F8C                         i2l52 0214  
                       i2l70 00C0                         i2l55 0220                         i2l58 0142  
                       _main 01F2                         fsr2h 0FDA                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         btemp 0026  
                       start 000E                 ___param_bank 0000                        ??_LCD 0023  
                      ??_INT 001D                        ?_main 0019                        _LATE0 7C68  
                      _LATE1 7C69                        i2l750 01AE                        i2l850 011C  
                      i2l852 0120                        i2l860 021A                        i2l854 0130  
                      i2l846 010A                        i2l862 017A                        i2l856 0132  
                      i2l848 010C                        i2l864 0186                        i2l872 020C  
                      i2l880 002C                        i2l858 0218                        i2l866 018A  
                      i2l874 020E                        i2l890 0076                        i2l882 0032  
                      i2l868 01A2                        i2l892 007C                        i2l884 003A  
                      i2l876 001C                        i2l894 0084                        i2l886 004C  
                      i2l878 002A                        i2l896 0096                        i2l888 004E  
                      i2l898 0098                        i2_LCD 0108                        _TRISD 0F95  
                      _TRISE 0F96                        _Write 0216                        tablat 0FF5  
                      ttemp5 0027                        ttemp6 002A                        ttemp7 002E  
                      status 0FD8                        wtemp8 0027              __initialization 01B0  
               __end_of_main 01FE                       ??_main 0026                __activetblptr 0000  
                     ?i2_LCD 0019                       ?_Write 0019                       _ADCON1 0FC1  
                     _INT0IF 7F91                       _OSCCON 0FD3                       i2u5_40 01A2  
                     i2u5_41 019E                       i2u6_40 002A                       i2u6_41 0026  
                     i2u7_40 0076                       i2u7_41 0072                       i2u8_40 00C0  
                     i2u8_41 00BC                       _Texto1 0011                       _Texto2 0001  
                     isa$std 0001                       _strlen 017A                 __pdataCOMRAM 0001  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
                 __accesstop 0060      __end_of__initialization 01D0                ___rparam_used 0001  
              __end_ofi2_LCD 0144               __pcstackCOMRAM 0019                __end_of_Write 0222  
        i2_Configuration_LCD 020A                      ??i2_LCD 0019                      ??_Write 001B  
                    LCD@Data 0024         ?i2_Configuration_LCD 0019        __end_of_Configuration 017A  
                    ?_strlen 0019                      i2u12_47 0112                      i2u13_47 0126  
                    i2u14_47 0138        ??i2_Configuration_LCD 001B       i2Configuration_LCD@Set 001B  
                    __Hparam 0000                      __Lparam 0000                    i2LCD@Data 001A  
                    __pcinit 01B0                      __ramtop 0800                      __ptext0 01F2  
                    __ptext1 0144                      __ptext2 01FE                      __ptext3 00CC  
                    __ptext5 020A                      __ptext6 017A                      __ptext7 0216  
                    __ptext8 0108               __pintcode_body 0012         end_of_initialization 01D0  
                    int_func 0012                      postdec1 0FE5                      postinc0 0FEE  
                    strlen@a 001B                      strlen@s 0019                    _TRISBbits 0F93  
              __pidataCOMRAM 01DA               __end_of_strlen 01B0          start_initialization 01B0  
                __end_of_LCD 0108                  __end_of_INT 00CC            _Configuration_LCD 01FE  
         ?_Configuration_LCD 0019          ??_Configuration_LCD 0025                     ??_strlen 001B  
                Write@Data_W 001B    __end_of_Configuration_LCD 020A                     INT@i_324 0022  
                  __pintcode 0008  __end_ofi2_Configuration_LCD 0216                     _RCONbits 0FD0  
                _INTCON2bits 0FF1                    copy_data0 01C4                _Configuration 0144  
       Configuration_LCD@Set 0025                     __Hrparam 0000                     __Lrparam 0000  
             ?_Configuration 0019                     isa$xinst 0000                     int$flags 0026  
                 _INTCONbits 0FF2                     intlevel2 0000              ??_Configuration 0026  
